import type { HTMLAttributes } from 'react';
export type ListContextType = {
    size: 'sm' | 'md' | 'lg';
    headingId?: string;
    setHeadingId: (id: string) => void;
};
export type OldListSizes = 'small' | 'medium' | 'large';
export declare const ListContext: import("react").Context<ListContextType>;
export type ListProps = {
    /**
     * Changes text sizing
     * @default md
     *
     * @note `small`, `medium` and `large` are deprecated
     */
    size?: ListContextType['size'] | OldListSizes;
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
} & HTMLAttributes<HTMLDivElement>;
export declare const ListRoot: import("react").ForwardRefExoticComponent<{
    /**
     * Changes text sizing
     * @default md
     *
     * @note `small`, `medium` and `large` are deprecated
     */
    size?: "sm" | "md" | "lg" | OldListSizes | undefined;
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean | undefined;
} & HTMLAttributes<HTMLDivElement> & import("react").RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=ListRoot.d.ts.map