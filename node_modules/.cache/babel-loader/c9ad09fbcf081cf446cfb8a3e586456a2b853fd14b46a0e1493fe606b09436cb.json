{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx, Fragment } from 'react/jsx-runtime';\nimport { forwardRef, useRef, useState, useEffect } from 'react';\nimport { FloatingPortal, FloatingFocusManager } from '../../../node_modules/@floating-ui/react/dist/floating-ui.react.js';\nimport { clsx } from '../../../node_modules/clsx/dist/lite.js';\nimport { useVirtualizer } from '../../../node_modules/@tanstack/react-virtual/dist/esm/index.js';\nimport { useFormField } from '../useFormField.js';\nimport useDebounce from '../../../utilities/useDebounce.js';\nimport { getSize } from '../../../utilities/getSize.js';\nimport useCombobox, { prefix, removePrefix } from './useCombobox.js';\nimport ComboboxInput from './internal/ComboboxInput.js';\nimport ComboboxLabel from './internal/ComboboxLabel.js';\nimport ComboboxError from './internal/ComboboxError.js';\nimport ComboboxNative from './internal/ComboboxNative.js';\nimport ComboboxCustom from './Custom.js';\nimport { useFloatingCombobox } from './useFloatingCombobox.js';\nimport { useComboboxKeyboard } from './useComboboxKeyboard.js';\nimport { ComboboxIdProvider } from './ComboboxIdContext.js';\nimport { ComboboxContext } from './ComboboxContext.js';\nimport { Box } from '../../Box/Box.js';\nimport { Spinner } from '../../Spinner/Spinner.js';\nimport { omit } from '../../../utilities/objectUtils.js';\nconst ComboboxComponent = forwardRef((_ref, forwareddRef) => {\n  let {\n    value,\n    initialValue = [],\n    onValueChange,\n    label,\n    hideLabel = false,\n    description,\n    multiple = false,\n    disabled = false,\n    readOnly = false,\n    hideChips = false,\n    clearButtonLabel = 'Fjern alt',\n    hideClearButton = false,\n    error,\n    errorId,\n    id,\n    name,\n    portal = true,\n    htmlSize = 0,\n    virtual = false,\n    children,\n    style,\n    loading,\n    loadingLabel = 'Laster...',\n    filter,\n    chipSrLabel = option => 'Slett ' + option.label,\n    className,\n    ...rest\n  } = _ref;\n  const size = getSize(rest.size || 'md');\n  const inputRef = useRef(null);\n  const portalRef = useRef(null);\n  const listRef = useRef([]);\n  const [inputValue, setInputValue] = useState(rest.inputValue || '');\n  const {\n    selectedOptions,\n    options,\n    restChildren,\n    interactiveChildren,\n    customIds,\n    filteredOptionsChildren,\n    filteredOptions,\n    setSelectedOptions\n  } = useCombobox({\n    children,\n    inputValue,\n    filter,\n    multiple,\n    initialValue\n  });\n  const {\n    open,\n    setOpen,\n    refs,\n    floatingStyles,\n    context,\n    getReferenceProps,\n    getFloatingProps,\n    getItemProps\n  } = useFloatingCombobox({\n    listRef\n  });\n  const formFieldProps = useFormField({\n    disabled,\n    readOnly,\n    error,\n    errorId,\n    size,\n    description,\n    id\n  }, 'combobox');\n  // if value is set, set input value to the label of the value\n  useEffect(() => {\n    if (value && value.length > 0 && !multiple) {\n      const option = options[prefix(value[0])];\n      setInputValue(option?.label || '');\n    }\n  }, [multiple, value, options]);\n  useEffect(() => {\n    if (value && Object.keys(options).length >= 0) {\n      const updatedSelectedOptions = value.map(option => {\n        const value = options[prefix(option)];\n        return value;\n      });\n      setSelectedOptions(updatedSelectedOptions.reduce((acc, value) => {\n        acc[prefix(value.value)] = value;\n        return acc;\n      }, {}));\n    }\n  }, [multiple, value, options, setSelectedOptions]);\n  // handle click on option, either select or deselect - Handles single or multiple\n  const handleSelectOption = args => {\n    const {\n      option,\n      clear,\n      remove\n    } = args;\n    if (clear) {\n      setSelectedOptions({});\n      setInputValue('');\n      onValueChange?.([]);\n      return;\n    }\n    if (!option) return;\n    if (remove) {\n      const newSelectedOptions = {\n        ...selectedOptions\n      };\n      delete newSelectedOptions[prefix(option.value)];\n      setSelectedOptions(newSelectedOptions);\n      onValueChange?.(Object.keys(newSelectedOptions).map(key => removePrefix(key)));\n      return;\n    }\n    const newSelectedOptions = {\n      ...selectedOptions\n    };\n    if (multiple) {\n      if (newSelectedOptions[prefix(option.value)]) {\n        delete newSelectedOptions[prefix(option.value)];\n      } else {\n        newSelectedOptions[prefix(option.value)] = option;\n      }\n      setInputValue('');\n      inputRef.current?.focus();\n    } else {\n      /* clear newSelectedOptions */\n      Object.keys(newSelectedOptions).forEach(key => {\n        delete newSelectedOptions[key];\n      });\n      newSelectedOptions[prefix(option.value)] = option;\n      setInputValue(option?.label || '');\n      // move cursor to the end of the input\n      setTimeout(() => {\n        inputRef.current?.setSelectionRange(option?.label?.length || 0, option?.label?.length || 0);\n      }, 0);\n    }\n    setSelectedOptions(newSelectedOptions);\n    onValueChange?.(Object.keys(newSelectedOptions).map(key => removePrefix(key)));\n    !multiple && setOpen(false);\n    refs.domReference.current?.focus();\n  };\n  const debouncedHandleSelectOption = useDebounce(handleSelectOption, 50);\n  const handleKeyDown = useComboboxKeyboard({\n    filteredOptions,\n    selectedOptions,\n    readOnly: formFieldProps.readOnly || false,\n    disabled: disabled,\n    multiple,\n    inputValue,\n    options,\n    open,\n    interactiveChildren,\n    setOpen,\n    setInputValue,\n    handleSelectOption: debouncedHandleSelectOption\n  });\n  const rowVirtualizer = useVirtualizer({\n    count: Object.keys(filteredOptionsChildren).length,\n    getScrollElement: () => virtual ? refs.floating.current : null,\n    estimateSize: () => 70,\n    measureElement: elem => {\n      return elem.getBoundingClientRect().height;\n    },\n    overscan: 7\n  });\n  return jsxs(ComboboxContext.Provider, {\n    value: {\n      size,\n      options,\n      selectedOptions,\n      multiple,\n      disabled,\n      readOnly,\n      open,\n      inputRef,\n      refs,\n      inputValue,\n      formFieldProps,\n      htmlSize,\n      clearButtonLabel,\n      customIds,\n      filteredOptions,\n      setInputValue,\n      setOpen,\n      getReferenceProps,\n      getItemProps,\n      /* Recieves the value of the option, and searches for it in our values lookup */\n      onOptionClick: value => {\n        if (readOnly) return;\n        if (disabled) return;\n        const option = options[prefix(value)];\n        debouncedHandleSelectOption({\n          option: option\n        });\n      },\n      handleSelectOption: debouncedHandleSelectOption,\n      chipSrLabel,\n      listRef,\n      forwareddRef\n    },\n    children: [jsxs(Box, {\n      className: clsx('fds-combobox', `fds-combobox--${size}`, disabled && 'fds-combobox__disabled', className),\n      style: style,\n      ref: portalRef,\n      children: [name && jsx(ComboboxNative, {\n        name: name,\n        selectedOptions: selectedOptions,\n        multiple: multiple\n      }), jsx(ComboboxLabel, {\n        label: label,\n        description: description,\n        size: size,\n        readOnly: readOnly,\n        hideLabel: hideLabel,\n        formFieldProps: formFieldProps\n      }), jsx(ComboboxInput, {\n        ...omit(['inputValue'], rest),\n        hideClearButton: hideClearButton,\n        listId: context.floatingId,\n        error: error,\n        hideChips: hideChips,\n        handleKeyDown: handleKeyDown,\n        \"aria-busy\": loading\n      }), jsx(ComboboxError, {\n        size: size,\n        error: error,\n        formFieldProps: formFieldProps\n      })]\n    }), open && jsx(FloatingPortal, {\n      root: portal ? null : portalRef,\n      children: jsx(FloatingFocusManager, {\n        context: context,\n        initialFocus: -1,\n        visuallyHiddenDismiss: true,\n        children: jsxs(Box, {\n          shadow: 'md',\n          borderRadius: 'md',\n          borderColor: 'default',\n          \"aria-labelledby\": formFieldProps.inputProps.id,\n          \"aria-autocomplete\": 'list',\n          tabIndex: -1,\n          ...getFloatingProps({\n            ref: refs.setFloating,\n            style: {\n              ...floatingStyles\n            }\n          }),\n          className: clsx('fds-combobox__options-wrapper', `fds-combobox--${size}`),\n          children: [virtual && jsx(\"div\", {\n            style: {\n              height: `${rowVirtualizer.getTotalSize()}px`,\n              width: '100%',\n              position: 'relative'\n            },\n            children: rowVirtualizer.getVirtualItems().map(virtualRow => jsx(\"div\", {\n              ref: rowVirtualizer.measureElement,\n              \"data-index\": virtualRow.index,\n              style: {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                transform: `translateY(${virtualRow.start}px)`\n              },\n              children: filteredOptionsChildren[virtualRow.index]\n            }, virtualRow.index))\n          }), loading ? jsxs(ComboboxCustom, {\n            className: 'fds-combobox__loading',\n            children: [jsx(Spinner, {\n              title: 'Laster',\n              size: 'sm'\n            }), loadingLabel]\n          }) : jsxs(Fragment, {\n            children: [restChildren, !virtual && filteredOptionsChildren]\n          })]\n        })\n      })\n    })]\n  });\n});\nconst Combobox = forwardRef((props, ref) => jsx(ComboboxIdProvider, {\n  children: jsx(ComboboxComponent, {\n    ...props,\n    ref: ref\n  })\n}));\nCombobox.displayName = 'Combobox';\nexport { Combobox, ComboboxComponent };","map":{"version":3,"names":["jsxs","jsx","Fragment","forwardRef","useRef","useState","useEffect","FloatingPortal","FloatingFocusManager","clsx","useVirtualizer","useFormField","useDebounce","getSize","useCombobox","prefix","removePrefix","ComboboxInput","ComboboxLabel","ComboboxError","ComboboxNative","ComboboxCustom","useFloatingCombobox","useComboboxKeyboard","ComboboxIdProvider","ComboboxContext","Box","Spinner","omit","ComboboxComponent","_ref","forwareddRef","value","initialValue","onValueChange","label","hideLabel","description","multiple","disabled","readOnly","hideChips","clearButtonLabel","hideClearButton","error","errorId","id","name","portal","htmlSize","virtual","children","style","loading","loadingLabel","filter","chipSrLabel","option","className","rest","size","inputRef","portalRef","listRef","inputValue","setInputValue","selectedOptions","options","restChildren","interactiveChildren","customIds","filteredOptionsChildren","filteredOptions","setSelectedOptions","open","setOpen","refs","floatingStyles","context","getReferenceProps","getFloatingProps","getItemProps","formFieldProps","length","Object","keys","updatedSelectedOptions","map","reduce","acc","handleSelectOption","args","clear","remove","newSelectedOptions","key","current","focus","forEach","setTimeout","setSelectionRange","domReference","debouncedHandleSelectOption","handleKeyDown","rowVirtualizer","count","getScrollElement","floating","estimateSize","measureElement","elem","getBoundingClientRect","height","overscan","Provider","onOptionClick","ref","listId","floatingId","root","initialFocus","visuallyHiddenDismiss","shadow","borderRadius","borderColor","inputProps","tabIndex","setFloating","getTotalSize","width","position","getVirtualItems","virtualRow","index","top","left","transform","start","title","Combobox","props","displayName"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/components/form/Combobox/Combobox.js"],"sourcesContent":["'use client';\nimport { jsxs, jsx, Fragment } from 'react/jsx-runtime';\nimport { forwardRef, useRef, useState, useEffect } from 'react';\nimport { FloatingPortal, FloatingFocusManager } from '../../../node_modules/@floating-ui/react/dist/floating-ui.react.js';\nimport { clsx } from '../../../node_modules/clsx/dist/lite.js';\nimport { useVirtualizer } from '../../../node_modules/@tanstack/react-virtual/dist/esm/index.js';\nimport { useFormField } from '../useFormField.js';\nimport useDebounce from '../../../utilities/useDebounce.js';\nimport { getSize } from '../../../utilities/getSize.js';\nimport useCombobox, { prefix, removePrefix } from './useCombobox.js';\nimport ComboboxInput from './internal/ComboboxInput.js';\nimport ComboboxLabel from './internal/ComboboxLabel.js';\nimport ComboboxError from './internal/ComboboxError.js';\nimport ComboboxNative from './internal/ComboboxNative.js';\nimport ComboboxCustom from './Custom.js';\nimport { useFloatingCombobox } from './useFloatingCombobox.js';\nimport { useComboboxKeyboard } from './useComboboxKeyboard.js';\nimport { ComboboxIdProvider } from './ComboboxIdContext.js';\nimport { ComboboxContext } from './ComboboxContext.js';\nimport { Box } from '../../Box/Box.js';\nimport { Spinner } from '../../Spinner/Spinner.js';\nimport { omit } from '../../../utilities/objectUtils.js';\n\nconst ComboboxComponent = forwardRef(({ value, initialValue = [], onValueChange, label, hideLabel = false, description, multiple = false, disabled = false, readOnly = false, hideChips = false, clearButtonLabel = 'Fjern alt', hideClearButton = false, error, errorId, id, name, portal = true, htmlSize = 0, virtual = false, children, style, loading, loadingLabel = 'Laster...', filter, chipSrLabel = (option) => 'Slett ' + option.label, className, ...rest }, forwareddRef) => {\n    const size = getSize(rest.size || 'md');\n    const inputRef = useRef(null);\n    const portalRef = useRef(null);\n    const listRef = useRef([]);\n    const [inputValue, setInputValue] = useState(rest.inputValue || '');\n    const { selectedOptions, options, restChildren, interactiveChildren, customIds, filteredOptionsChildren, filteredOptions, setSelectedOptions, } = useCombobox({\n        children,\n        inputValue,\n        filter,\n        multiple,\n        initialValue,\n    });\n    const { open, setOpen, refs, floatingStyles, context, getReferenceProps, getFloatingProps, getItemProps, } = useFloatingCombobox({\n        listRef,\n    });\n    const formFieldProps = useFormField({\n        disabled,\n        readOnly,\n        error,\n        errorId,\n        size,\n        description,\n        id,\n    }, 'combobox');\n    // if value is set, set input value to the label of the value\n    useEffect(() => {\n        if (value && value.length > 0 && !multiple) {\n            const option = options[prefix(value[0])];\n            setInputValue(option?.label || '');\n        }\n    }, [multiple, value, options]);\n    useEffect(() => {\n        if (value && Object.keys(options).length >= 0) {\n            const updatedSelectedOptions = value.map((option) => {\n                const value = options[prefix(option)];\n                return value;\n            });\n            setSelectedOptions(updatedSelectedOptions.reduce((acc, value) => {\n                acc[prefix(value.value)] = value;\n                return acc;\n            }, {}));\n        }\n    }, [multiple, value, options, setSelectedOptions]);\n    // handle click on option, either select or deselect - Handles single or multiple\n    const handleSelectOption = (args) => {\n        const { option, clear, remove } = args;\n        if (clear) {\n            setSelectedOptions({});\n            setInputValue('');\n            onValueChange?.([]);\n            return;\n        }\n        if (!option)\n            return;\n        if (remove) {\n            const newSelectedOptions = { ...selectedOptions };\n            delete newSelectedOptions[prefix(option.value)];\n            setSelectedOptions(newSelectedOptions);\n            onValueChange?.(Object.keys(newSelectedOptions).map((key) => removePrefix(key)));\n            return;\n        }\n        const newSelectedOptions = { ...selectedOptions };\n        if (multiple) {\n            if (newSelectedOptions[prefix(option.value)]) {\n                delete newSelectedOptions[prefix(option.value)];\n            }\n            else {\n                newSelectedOptions[prefix(option.value)] = option;\n            }\n            setInputValue('');\n            inputRef.current?.focus();\n        }\n        else {\n            /* clear newSelectedOptions */\n            Object.keys(newSelectedOptions).forEach((key) => {\n                delete newSelectedOptions[key];\n            });\n            newSelectedOptions[prefix(option.value)] = option;\n            setInputValue(option?.label || '');\n            // move cursor to the end of the input\n            setTimeout(() => {\n                inputRef.current?.setSelectionRange(option?.label?.length || 0, option?.label?.length || 0);\n            }, 0);\n        }\n        setSelectedOptions(newSelectedOptions);\n        onValueChange?.(Object.keys(newSelectedOptions).map((key) => removePrefix(key)));\n        !multiple && setOpen(false);\n        refs.domReference.current?.focus();\n    };\n    const debouncedHandleSelectOption = useDebounce(handleSelectOption, 50);\n    const handleKeyDown = useComboboxKeyboard({\n        filteredOptions,\n        selectedOptions,\n        readOnly: formFieldProps.readOnly || false,\n        disabled: disabled,\n        multiple,\n        inputValue,\n        options,\n        open,\n        interactiveChildren,\n        setOpen,\n        setInputValue,\n        handleSelectOption: debouncedHandleSelectOption,\n    });\n    const rowVirtualizer = useVirtualizer({\n        count: Object.keys(filteredOptionsChildren).length,\n        getScrollElement: () => (virtual ? refs.floating.current : null),\n        estimateSize: () => 70,\n        measureElement: (elem) => {\n            return elem.getBoundingClientRect().height;\n        },\n        overscan: 7,\n    });\n    return (jsxs(ComboboxContext.Provider, { value: {\n            size,\n            options,\n            selectedOptions,\n            multiple,\n            disabled,\n            readOnly,\n            open,\n            inputRef,\n            refs,\n            inputValue,\n            formFieldProps,\n            htmlSize,\n            clearButtonLabel,\n            customIds,\n            filteredOptions,\n            setInputValue,\n            setOpen,\n            getReferenceProps,\n            getItemProps,\n            /* Recieves the value of the option, and searches for it in our values lookup */\n            onOptionClick: (value) => {\n                if (readOnly)\n                    return;\n                if (disabled)\n                    return;\n                const option = options[prefix(value)];\n                debouncedHandleSelectOption({ option: option });\n            },\n            handleSelectOption: debouncedHandleSelectOption,\n            chipSrLabel,\n            listRef,\n            forwareddRef,\n        }, children: [jsxs(Box, { className: clsx('fds-combobox', `fds-combobox--${size}`, disabled && 'fds-combobox__disabled', className), style: style, ref: portalRef, children: [name && (jsx(ComboboxNative, { name: name, selectedOptions: selectedOptions, multiple: multiple })), jsx(ComboboxLabel, { label: label, description: description, size: size, readOnly: readOnly, hideLabel: hideLabel, formFieldProps: formFieldProps }), jsx(ComboboxInput, { ...omit(['inputValue'], rest), hideClearButton: hideClearButton, listId: context.floatingId, error: error, hideChips: hideChips, handleKeyDown: handleKeyDown, \"aria-busy\": loading }), jsx(ComboboxError, { size: size, error: error, formFieldProps: formFieldProps })] }), open && (jsx(FloatingPortal, { root: portal ? null : portalRef, children: jsx(FloatingFocusManager, { context: context, initialFocus: -1, visuallyHiddenDismiss: true, children: jsxs(Box, { shadow: 'md', borderRadius: 'md', borderColor: 'default', \"aria-labelledby\": formFieldProps.inputProps.id, \"aria-autocomplete\": 'list', tabIndex: -1, ...getFloatingProps({\n                            ref: refs.setFloating,\n                            style: {\n                                ...floatingStyles,\n                            },\n                        }), className: clsx('fds-combobox__options-wrapper', `fds-combobox--${size}`), children: [virtual && (jsx(\"div\", { style: {\n                                    height: `${rowVirtualizer.getTotalSize()}px`,\n                                    width: '100%',\n                                    position: 'relative',\n                                }, children: rowVirtualizer.getVirtualItems().map((virtualRow) => (jsx(\"div\", { ref: rowVirtualizer.measureElement, \"data-index\": virtualRow.index, style: {\n                                        position: 'absolute',\n                                        top: 0,\n                                        left: 0,\n                                        width: '100%',\n                                        transform: `translateY(${virtualRow.start}px)`,\n                                    }, children: filteredOptionsChildren[virtualRow.index] }, virtualRow.index))) })), loading ? (jsxs(ComboboxCustom, { className: 'fds-combobox__loading', children: [jsx(Spinner, { title: 'Laster', size: 'sm' }), loadingLabel] })) : (jsxs(Fragment, { children: [restChildren, !virtual && filteredOptionsChildren] }))] }) }) }))] }));\n});\nconst Combobox = forwardRef((props, ref) => (jsx(ComboboxIdProvider, { children: jsx(ComboboxComponent, { ...props, ref: ref }) })));\nCombobox.displayName = 'Combobox';\n\nexport { Combobox, ComboboxComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}