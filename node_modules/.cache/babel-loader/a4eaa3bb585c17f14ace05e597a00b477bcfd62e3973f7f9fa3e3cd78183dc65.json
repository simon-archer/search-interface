{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { forwardRef, useState } from 'react';\nimport { clsx } from '../../../node_modules/clsx/dist/lite.js';\nimport { PadlockLockedFillIcon } from '@navikt/aksel-icons';\nimport { CharacterCounter } from '../CharacterCounter.js';\nimport { useTextarea } from './useTextarea.js';\nimport { Paragraph } from '../../Typography/Paragraph/Paragraph.js';\nimport { Label } from '../../Typography/Label/Label.js';\nimport { omit } from '../../../utilities/objectUtils.js';\nimport { ErrorMessage } from '../../Typography/ErrorMessage/ErrorMessage.js';\n\n/** Textarea field\n *\n * @example\n * ```tsx\n * <Textarea label=\"Textarea label\">\n * ```\n */\nconst Textarea = forwardRef((props, ref) => {\n  const {\n    label,\n    description,\n    style,\n    characterLimit,\n    hideLabel,\n    className,\n    ...rest\n  } = props;\n  const {\n    textareaProps,\n    descriptionId,\n    hasError,\n    errorId,\n    size = 'md',\n    readOnly\n  } = useTextarea(props);\n  const [value, setValue] = useState(props.defaultValue);\n  const characterLimitId = `${textareaProps.id}-charactercount}`;\n  const hasCharacterLimit = characterLimit != null;\n  const describedBy = clsx(textareaProps['aria-describedby'], hasCharacterLimit && characterLimitId) || undefined;\n  return jsx(Paragraph, {\n    asChild: true,\n    size: size,\n    children: jsxs(\"div\", {\n      style: style,\n      className: clsx('fds-textarea', `fds-textarea--${size}`, hasError && `fds-textarea--error`, className),\n      children: [label && jsxs(Label, {\n        size: size,\n        weight: 'medium',\n        htmlFor: textareaProps.id,\n        className: clsx('fds-textarea__label', hideLabel && `fds-sr-only`),\n        children: [readOnly && jsx(PadlockLockedFillIcon, {\n          \"aria-hidden\": true,\n          className: 'fds-textarea__readonly-icon'\n        }), jsx(\"span\", {\n          children: label\n        })]\n      }), description && jsx(Paragraph, {\n        asChild: true,\n        size: size,\n        children: jsx(\"div\", {\n          id: descriptionId,\n          className: clsx('fds-textarea__description', hideLabel && `fds-sr-only`),\n          children: description\n        })\n      }), jsx(\"textarea\", {\n        className: clsx('fds-textarea__input', `fds-focus`),\n        ref: ref,\n        \"aria-describedby\": describedBy,\n        disabled: textareaProps.disabled,\n        readOnly: readOnly,\n        ...omit(['size', 'error', 'errorId'], rest),\n        ...textareaProps,\n        onChange: e => {\n          textareaProps?.onChange?.(e);\n          setValue(e.target.value);\n        }\n      }), hasCharacterLimit && jsx(CharacterCounter, {\n        size: size,\n        value: value ? value.toString() : '',\n        id: characterLimitId,\n        ...characterLimit\n      }), jsx(\"div\", {\n        className: 'fds-textarea__error-message',\n        id: errorId,\n        \"aria-live\": 'polite',\n        \"aria-relevant\": 'additions removals',\n        children: hasError && jsx(ErrorMessage, {\n          size: size,\n          children: props.error\n        })\n      })]\n    })\n  });\n});\nTextarea.displayName = 'Textarea';\nexport { Textarea };","map":{"version":3,"names":["jsx","jsxs","forwardRef","useState","clsx","PadlockLockedFillIcon","CharacterCounter","useTextarea","Paragraph","Label","omit","ErrorMessage","Textarea","props","ref","label","description","style","characterLimit","hideLabel","className","rest","textareaProps","descriptionId","hasError","errorId","size","readOnly","value","setValue","defaultValue","characterLimitId","id","hasCharacterLimit","describedBy","undefined","asChild","children","weight","htmlFor","disabled","onChange","e","target","toString","error","displayName"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/components/form/Textarea/Textarea.js"],"sourcesContent":["'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { forwardRef, useState } from 'react';\nimport { clsx } from '../../../node_modules/clsx/dist/lite.js';\nimport { PadlockLockedFillIcon } from '@navikt/aksel-icons';\nimport { CharacterCounter } from '../CharacterCounter.js';\nimport { useTextarea } from './useTextarea.js';\nimport { Paragraph } from '../../Typography/Paragraph/Paragraph.js';\nimport { Label } from '../../Typography/Label/Label.js';\nimport { omit } from '../../../utilities/objectUtils.js';\nimport { ErrorMessage } from '../../Typography/ErrorMessage/ErrorMessage.js';\n\n/** Textarea field\n *\n * @example\n * ```tsx\n * <Textarea label=\"Textarea label\">\n * ```\n */\nconst Textarea = forwardRef((props, ref) => {\n    const { label, description, style, characterLimit, hideLabel, className, ...rest } = props;\n    const { textareaProps, descriptionId, hasError, errorId, size = 'md', readOnly, } = useTextarea(props);\n    const [value, setValue] = useState(props.defaultValue);\n    const characterLimitId = `${textareaProps.id}-charactercount}`;\n    const hasCharacterLimit = characterLimit != null;\n    const describedBy = clsx(textareaProps['aria-describedby'], hasCharacterLimit && characterLimitId) || undefined;\n    return (jsx(Paragraph, { asChild: true, size: size, children: jsxs(\"div\", { style: style, className: clsx('fds-textarea', `fds-textarea--${size}`, hasError && `fds-textarea--error`, className), children: [label && (jsxs(Label, { size: size, weight: 'medium', htmlFor: textareaProps.id, className: clsx('fds-textarea__label', hideLabel && `fds-sr-only`), children: [readOnly && (jsx(PadlockLockedFillIcon, { \"aria-hidden\": true, className: 'fds-textarea__readonly-icon' })), jsx(\"span\", { children: label })] })), description && (jsx(Paragraph, { asChild: true, size: size, children: jsx(\"div\", { id: descriptionId, className: clsx('fds-textarea__description', hideLabel && `fds-sr-only`), children: description }) })), jsx(\"textarea\", { className: clsx('fds-textarea__input', `fds-focus`), ref: ref, \"aria-describedby\": describedBy, disabled: textareaProps.disabled, readOnly: readOnly, ...omit(['size', 'error', 'errorId'], rest), ...textareaProps, onChange: (e) => {\n                        textareaProps?.onChange?.(e);\n                        setValue(e.target.value);\n                    } }), hasCharacterLimit && (jsx(CharacterCounter, { size: size, value: value ? value.toString() : '', id: characterLimitId, ...characterLimit })), jsx(\"div\", { className: 'fds-textarea__error-message', id: errorId, \"aria-live\": 'polite', \"aria-relevant\": 'additions removals', children: hasError && jsx(ErrorMessage, { size: size, children: props.error }) })] }) }));\n});\nTextarea.displayName = 'Textarea';\n\nexport { Textarea };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,EAAEC,IAAI,QAAQ,mBAAmB;AAC7C,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,IAAI,QAAQ,yCAAyC;AAC9D,SAASC,qBAAqB,QAAQ,qBAAqB;AAC3D,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,yCAAyC;AACnE,SAASC,KAAK,QAAQ,iCAAiC;AACvD,SAASC,IAAI,QAAQ,mCAAmC;AACxD,SAASC,YAAY,QAAQ,+CAA+C;;AAE5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAGV,UAAU,CAAC,CAACW,KAAK,EAAEC,GAAG,KAAK;EACxC,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC,KAAK;IAAEC,cAAc;IAAEC,SAAS;IAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAGR,KAAK;EAC1F,MAAM;IAAES,aAAa;IAAEC,aAAa;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,IAAI,GAAG,IAAI;IAAEC;EAAU,CAAC,GAAGpB,WAAW,CAACM,KAAK,CAAC;EACtG,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAACU,KAAK,CAACiB,YAAY,CAAC;EACtD,MAAMC,gBAAgB,GAAG,GAAGT,aAAa,CAACU,EAAE,kBAAkB;EAC9D,MAAMC,iBAAiB,GAAGf,cAAc,IAAI,IAAI;EAChD,MAAMgB,WAAW,GAAG9B,IAAI,CAACkB,aAAa,CAAC,kBAAkB,CAAC,EAAEW,iBAAiB,IAAIF,gBAAgB,CAAC,IAAII,SAAS;EAC/G,OAAQnC,GAAG,CAACQ,SAAS,EAAE;IAAE4B,OAAO,EAAE,IAAI;IAAEV,IAAI,EAAEA,IAAI;IAAEW,QAAQ,EAAEpC,IAAI,CAAC,KAAK,EAAE;MAAEgB,KAAK,EAAEA,KAAK;MAAEG,SAAS,EAAEhB,IAAI,CAAC,cAAc,EAAE,iBAAiBsB,IAAI,EAAE,EAAEF,QAAQ,IAAI,qBAAqB,EAAEJ,SAAS,CAAC;MAAEiB,QAAQ,EAAE,CAACtB,KAAK,IAAKd,IAAI,CAACQ,KAAK,EAAE;QAAEiB,IAAI,EAAEA,IAAI;QAAEY,MAAM,EAAE,QAAQ;QAAEC,OAAO,EAAEjB,aAAa,CAACU,EAAE;QAAEZ,SAAS,EAAEhB,IAAI,CAAC,qBAAqB,EAAEe,SAAS,IAAI,aAAa,CAAC;QAAEkB,QAAQ,EAAE,CAACV,QAAQ,IAAK3B,GAAG,CAACK,qBAAqB,EAAE;UAAE,aAAa,EAAE,IAAI;UAAEe,SAAS,EAAE;QAA8B,CAAC,CAAE,EAAEpB,GAAG,CAAC,MAAM,EAAE;UAAEqC,QAAQ,EAAEtB;QAAM,CAAC,CAAC;MAAE,CAAC,CAAE,EAAEC,WAAW,IAAKhB,GAAG,CAACQ,SAAS,EAAE;QAAE4B,OAAO,EAAE,IAAI;QAAEV,IAAI,EAAEA,IAAI;QAAEW,QAAQ,EAAErC,GAAG,CAAC,KAAK,EAAE;UAAEgC,EAAE,EAAET,aAAa;UAAEH,SAAS,EAAEhB,IAAI,CAAC,2BAA2B,EAAEe,SAAS,IAAI,aAAa,CAAC;UAAEkB,QAAQ,EAAErB;QAAY,CAAC;MAAE,CAAC,CAAE,EAAEhB,GAAG,CAAC,UAAU,EAAE;QAAEoB,SAAS,EAAEhB,IAAI,CAAC,qBAAqB,EAAE,WAAW,CAAC;QAAEU,GAAG,EAAEA,GAAG;QAAE,kBAAkB,EAAEoB,WAAW;QAAEM,QAAQ,EAAElB,aAAa,CAACkB,QAAQ;QAAEb,QAAQ,EAAEA,QAAQ;QAAE,GAAGjB,IAAI,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,EAAEW,IAAI,CAAC;QAAE,GAAGC,aAAa;QAAEmB,QAAQ,EAAGC,CAAC,IAAK;UACn7BpB,aAAa,EAAEmB,QAAQ,GAAGC,CAAC,CAAC;UAC5Bb,QAAQ,CAACa,CAAC,CAACC,MAAM,CAACf,KAAK,CAAC;QAC5B;MAAE,CAAC,CAAC,EAAEK,iBAAiB,IAAKjC,GAAG,CAACM,gBAAgB,EAAE;QAAEoB,IAAI,EAAEA,IAAI;QAAEE,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACgB,QAAQ,CAAC,CAAC,GAAG,EAAE;QAAEZ,EAAE,EAAED,gBAAgB;QAAE,GAAGb;MAAe,CAAC,CAAE,EAAElB,GAAG,CAAC,KAAK,EAAE;QAAEoB,SAAS,EAAE,6BAA6B;QAAEY,EAAE,EAAEP,OAAO;QAAE,WAAW,EAAE,QAAQ;QAAE,eAAe,EAAE,oBAAoB;QAAEY,QAAQ,EAAEb,QAAQ,IAAIxB,GAAG,CAACW,YAAY,EAAE;UAAEe,IAAI,EAAEA,IAAI;UAAEW,QAAQ,EAAExB,KAAK,CAACgC;QAAM,CAAC;MAAE,CAAC,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC;AACjY,CAAC,CAAC;AACFjC,QAAQ,CAACkC,WAAW,GAAG,UAAU;AAEjC,SAASlC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}