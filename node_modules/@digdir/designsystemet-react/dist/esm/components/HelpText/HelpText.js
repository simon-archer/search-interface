'use client';
import { jsx, Fragment, jsxs } from 'react/jsx-runtime';
import { useState } from 'react';
import { clsx } from '../../node_modules/clsx/dist/lite.js';
import { Popover } from '../Popover/index.js';
import { getSize } from '../../utilities/getSize.js';
import { HelpTextIcon } from './HelpTextIcon.js';

const HelpText = ({ title, placement = 'right', portal, className, children, ...rest }) => {
    const size = getSize(rest.size || 'md');
    const [open, setOpen] = useState(false);
    return (jsx(Fragment, { children: jsxs(Popover, { variant: 'info', placement: placement, size: size, portal: portal, open: open, onClose: () => setOpen(false), children: [jsx(Popover.Trigger, { asChild: true, variant: 'tertiary', children: jsxs("button", { className: clsx(`fds-helptext--${size}`, 'fds-helptext__button', `fds-focus`, className), "aria-expanded": open, onClick: () => setOpen(!open), ...rest, children: [jsx(HelpTextIcon, { filled: true, className: clsx(`fds-helptext__icon`, `fds-helptext__icon--filled`, className), openState: open }), jsx(HelpTextIcon, { className: clsx(`fds-helptext__icon`, className), openState: open }), jsx("span", { className: `fds-sr-only`, children: title })] }) }), jsx(Popover.Content, { className: 'fds-helptext__content', children: children })] }) }));
};
HelpText.displayName = 'HelpText';

export { HelpText };
