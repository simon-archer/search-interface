import { type HTMLAttributes } from 'react';
import type { PaginationProps } from './Pagination';
type PaginationContextProps = {
    size: NonNullable<PaginationRootProps['size']>;
    compact: boolean;
};
export declare const PaginationContext: import("react").Context<PaginationContextProps>;
export type PaginationRootProps = {
    /**
     * Sets the size of the component
     * @default md
     * @note `small`, `medium`, `large` is deprecated
     */
    size?: PaginationProps['size'];
    /**
     * Sets how compact the component will be. If true, only 5 steps will show.
     * @default false
     */
    compact?: boolean;
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
} & HTMLAttributes<HTMLElement>;
export declare const PaginationRoot: import("react").ForwardRefExoticComponent<{
    /**
     * Sets the size of the component
     * @default md
     * @note `small`, `medium`, `large` is deprecated
     */
    size?: PaginationProps['size'];
    /**
     * Sets how compact the component will be. If true, only 5 steps will show.
     * @default false
     */
    compact?: boolean | undefined;
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean | undefined;
} & HTMLAttributes<HTMLElement> & import("react").RefAttributes<HTMLElement>>;
export default PaginationRoot;
//# sourceMappingURL=PaginationRoot.d.ts.map