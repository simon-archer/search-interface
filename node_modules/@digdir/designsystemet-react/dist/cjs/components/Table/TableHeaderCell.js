'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var akselIcons = require('@navikt/aksel-icons');
var React = require('react');
var lite = require('../../node_modules/clsx/dist/lite.js');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);

const SORT_ICON = {
    ascending: jsxRuntime.jsx(akselIcons.ChevronUpIcon, {}),
    descending: jsxRuntime.jsx(akselIcons.ChevronDownIcon, {}),
};
const TableHeaderCell = React__namespace.forwardRef(({ sortable = false, sort, onSortClick, className, children, ...rest }, ref) => {
    const sortIcon = sort === 'ascending' || sort === 'descending' ? (SORT_ICON[sort]) : (jsxRuntime.jsx(akselIcons.ChevronUpDownIcon, {}));
    return (jsxRuntime.jsxs("th", { className: lite.clsx('fds-table__header__cell', sortable && 'fds-table__header__cell--sortable', sort && `fds-table__header__cell--sorted`, className), "aria-sort": sort, ref: ref, ...rest, children: [sortable && (jsxRuntime.jsxs("button", { className: `fds-focus`, onClick: onSortClick, children: [children, sortIcon] })), !sortable && children] }));
});
TableHeaderCell.displayName = 'TableHeaderCell';

exports.TableHeaderCell = TableHeaderCell;
