'use client';
import { jsx } from 'react/jsx-runtime';
import { clsx } from '../../../node_modules/clsx/dist/lite.js';
import { forwardRef, useContext } from 'react';
import { AccordionItemContext } from '../AccordionItem/AccordionItem.js';
import { AnimateHeight } from '../../../utilities/AnimateHeight/AnimateHeight.js';
import { Paragraph } from '../../Typography/Paragraph/Paragraph.js';

const AccordionContent = forwardRef(({ children, className, ...rest }, ref) => {
    const context = useContext(AccordionItemContext);
    if (context === null) {
        console.error('<Accordion.Content> has to be used within an <Accordion.Item>');
        return null;
    }
    return (jsx(AnimateHeight, { id: context.contentId, open: context.open, children: jsx(Paragraph, { asChild: true, size: 'sm', children: jsx("div", { ref: ref, className: clsx('fds-accordion__content', className), ...rest, children: children }) }) }));
});
AccordionContent.displayName = 'AccordionContent';

export { AccordionContent };
