'use client';
import { jsx, jsxs } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import { clsx } from '../../../node_modules/clsx/dist/lite.js';
import { PadlockLockedFillIcon } from '@navikt/aksel-icons';
import { useSwitch } from './useSwitch.js';
import { Paragraph } from '../../Typography/Paragraph/Paragraph.js';
import { omit } from '../../../utilities/objectUtils.js';
import { Label } from '../../Typography/Label/Label.js';

const Switch = forwardRef((props, ref) => {
    const { children, description, position = 'left', className, ...rest } = props;
    const { inputProps, descriptionId, size = 'md', readOnly, } = useSwitch(props);
    return (jsx(Paragraph, { asChild: true, size: size, children: jsxs("div", { className: clsx(`fds-switch`, `fds-switch--${size}`, inputProps.disabled && `fds-switch--disabled`, readOnly && `fds-switch--readonly`, className), children: [jsx("input", { className: `fds-switch__input`, disabled: inputProps.disabled, ref: ref, ...omit(['size', 'error'], rest), ...inputProps }), jsxs(Label, { className: clsx(`fds-switch__label`, position === 'right' && `fds-switch__label--right`), htmlFor: inputProps.id, size: size, weight: 'regular', children: [jsx("span", { className: `fds-switch__track`, children: jsx("span", { className: `fds-switch__thumb` }) }), readOnly && (jsx(PadlockLockedFillIcon, { "aria-hidden": true, className: `fds-switch__readonly__icon` })), children && jsx("span", { children: children })] }), description && (jsx(Paragraph, { asChild: true, size: size, children: jsx("div", { id: descriptionId, className: `fds-switch__description`, children: description }) }))] }) }));
});
Switch.displayName = 'Switch';

export { Switch };
