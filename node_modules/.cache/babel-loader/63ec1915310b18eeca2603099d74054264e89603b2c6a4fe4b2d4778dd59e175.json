{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { createContext, forwardRef, useState, useRef } from 'react';\nimport { useMergeRefs } from '../../node_modules/@floating-ui/react/dist/floating-ui.react.js';\nimport { Slot as $5e63c961fc1ce211$export$8c6ed5c666ac1360 } from '../../node_modules/@radix-ui/react-slot/dist/index.js';\nconst RovingTabindexContext = createContext({\n  elements: {\n    current: new Map()\n  },\n  getOrderedItems: () => [],\n  setFocusableValue: () => {\n    /* intentionally empty */\n  },\n  onShiftTab: () => {\n    /* intentionally empty */\n  },\n  focusableValue: null\n});\nconst RovingTabindexRoot = forwardRef(({\n  valueId,\n  asChild,\n  onBlur,\n  onFocus,\n  ...rest\n}, ref) => {\n  const Component = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : 'div';\n  const [focusableValue, setFocusableValue] = useState(null);\n  const [isShiftTabbing, setIsShiftTabbing] = useState(false);\n  const elements = useRef(new Map());\n  const myRef = useRef();\n  const refs = useMergeRefs([ref, myRef]);\n  const getOrderedItems = () => {\n    if (!myRef.current) return [];\n    const elementsFromDOM = Array.from(myRef.current.querySelectorAll('[data-roving-tabindex-item]'));\n    return Array.from(elements.current).sort((a, b) => elementsFromDOM.indexOf(a[1]) - elementsFromDOM.indexOf(b[1])).map(([value, element]) => ({\n      value,\n      element\n    }));\n  };\n  return jsx(RovingTabindexContext.Provider, {\n    value: {\n      elements,\n      getOrderedItems,\n      focusableValue,\n      setFocusableValue,\n      onShiftTab: () => {\n        setIsShiftTabbing(true);\n      }\n    },\n    children: jsx(Component, {\n      ...rest,\n      tabIndex: isShiftTabbing ? -1 : 0,\n      onBlur: e => {\n        onBlur?.(e);\n        setIsShiftTabbing(false);\n      },\n      onFocus: e => {\n        onFocus?.(e);\n        if (e.target !== e.currentTarget) return;\n        const orderedItems = getOrderedItems();\n        if (orderedItems.length === 0) return;\n        if (focusableValue != null) {\n          elements.current.get(focusableValue)?.focus();\n        } else if (valueId != null) {\n          elements.current.get(valueId)?.focus();\n        } else {\n          orderedItems.at(0)?.element.focus();\n        }\n      },\n      ref: refs\n    })\n  });\n});\nexport { RovingTabindexContext, RovingTabindexRoot };","map":{"version":3,"names":["jsx","createContext","forwardRef","useState","useRef","useMergeRefs","Slot","$5e63c961fc1ce211$export$8c6ed5c666ac1360","RovingTabindexContext","elements","current","Map","getOrderedItems","setFocusableValue","onShiftTab","focusableValue","RovingTabindexRoot","valueId","asChild","onBlur","onFocus","rest","ref","Component","isShiftTabbing","setIsShiftTabbing","myRef","refs","elementsFromDOM","Array","from","querySelectorAll","sort","a","b","indexOf","map","value","element","Provider","children","tabIndex","e","target","currentTarget","orderedItems","length","get","focus","at"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/utilities/RovingTabIndex/RovingTabindexRoot.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { createContext, forwardRef, useState, useRef } from 'react';\nimport { useMergeRefs } from '../../node_modules/@floating-ui/react/dist/floating-ui.react.js';\nimport { Slot as $5e63c961fc1ce211$export$8c6ed5c666ac1360 } from '../../node_modules/@radix-ui/react-slot/dist/index.js';\n\nconst RovingTabindexContext = createContext({\n    elements: { current: new Map() },\n    getOrderedItems: () => [],\n    setFocusableValue: () => {\n        /* intentionally empty */\n    },\n    onShiftTab: () => {\n        /* intentionally empty */\n    },\n    focusableValue: null,\n});\nconst RovingTabindexRoot = forwardRef(({ valueId, asChild, onBlur, onFocus, ...rest }, ref) => {\n    const Component = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : 'div';\n    const [focusableValue, setFocusableValue] = useState(null);\n    const [isShiftTabbing, setIsShiftTabbing] = useState(false);\n    const elements = useRef(new Map());\n    const myRef = useRef();\n    const refs = useMergeRefs([ref, myRef]);\n    const getOrderedItems = () => {\n        if (!myRef.current)\n            return [];\n        const elementsFromDOM = Array.from(myRef.current.querySelectorAll('[data-roving-tabindex-item]'));\n        return Array.from(elements.current)\n            .sort((a, b) => elementsFromDOM.indexOf(a[1]) - elementsFromDOM.indexOf(b[1]))\n            .map(([value, element]) => ({ value, element }));\n    };\n    return (jsx(RovingTabindexContext.Provider, { value: {\n            elements,\n            getOrderedItems,\n            focusableValue,\n            setFocusableValue,\n            onShiftTab: () => {\n                setIsShiftTabbing(true);\n            },\n        }, children: jsx(Component, { ...rest, tabIndex: isShiftTabbing ? -1 : 0, onBlur: (e) => {\n                onBlur?.(e);\n                setIsShiftTabbing(false);\n            }, onFocus: (e) => {\n                onFocus?.(e);\n                if (e.target !== e.currentTarget)\n                    return;\n                const orderedItems = getOrderedItems();\n                if (orderedItems.length === 0)\n                    return;\n                if (focusableValue != null) {\n                    elements.current.get(focusableValue)?.focus();\n                }\n                else if (valueId != null) {\n                    elements.current.get(valueId)?.focus();\n                }\n                else {\n                    orderedItems.at(0)?.element.focus();\n                }\n            }, ref: refs }) }));\n});\n\nexport { RovingTabindexContext, RovingTabindexRoot };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}