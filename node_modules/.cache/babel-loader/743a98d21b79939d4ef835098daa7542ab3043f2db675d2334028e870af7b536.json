{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { createContext, forwardRef, useState } from 'react';\nimport { Fieldset } from '../../Fieldset/Fieldset.js';\nconst CheckboxGroupContext = createContext(null);\nconst CheckboxGroup = forwardRef(({\n  onChange,\n  children,\n  value,\n  readOnly,\n  defaultValue,\n  size = 'md',\n  ...rest\n}, ref) => {\n  const [internalValue, setInternalValue] = useState(defaultValue ?? []);\n  const toggleValue = checkboxValue => {\n    const currentValue = value ?? internalValue;\n    const updatedValue = currentValue.includes(checkboxValue) ? currentValue.filter(x => x !== checkboxValue) : [...currentValue, checkboxValue];\n    if (typeof value !== 'undefined' || value !== null) {\n      setInternalValue(updatedValue);\n    }\n    onChange?.(updatedValue);\n  };\n  return jsx(Fieldset, {\n    readOnly: readOnly,\n    size: size,\n    ref: ref,\n    ...rest,\n    children: jsx(CheckboxGroupContext.Provider, {\n      value: {\n        value,\n        defaultValue,\n        toggleValue\n      },\n      children: jsx(\"div\", {\n        children: children\n      })\n    })\n  });\n});\nCheckboxGroup.displayName = 'CheckboxGroup';\nexport { CheckboxGroup, CheckboxGroupContext };","map":{"version":3,"names":["jsx","createContext","forwardRef","useState","Fieldset","CheckboxGroupContext","CheckboxGroup","onChange","children","value","readOnly","defaultValue","size","rest","ref","internalValue","setInternalValue","toggleValue","checkboxValue","currentValue","updatedValue","includes","filter","x","Provider","displayName"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/components/form/Checkbox/Group/Group.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { createContext, forwardRef, useState } from 'react';\nimport { Fieldset } from '../../Fieldset/Fieldset.js';\n\nconst CheckboxGroupContext = createContext(null);\nconst CheckboxGroup = forwardRef(({ onChange, children, value, readOnly, defaultValue, size = 'md', ...rest }, ref) => {\n    const [internalValue, setInternalValue] = useState(defaultValue ?? []);\n    const toggleValue = (checkboxValue) => {\n        const currentValue = value ?? internalValue;\n        const updatedValue = currentValue.includes(checkboxValue)\n            ? currentValue.filter((x) => x !== checkboxValue)\n            : [...currentValue, checkboxValue];\n        if (typeof value !== 'undefined' || value !== null) {\n            setInternalValue(updatedValue);\n        }\n        onChange?.(updatedValue);\n    };\n    return (jsx(Fieldset, { readOnly: readOnly, size: size, ref: ref, ...rest, children: jsx(CheckboxGroupContext.Provider, { value: {\n                value,\n                defaultValue,\n                toggleValue,\n            }, children: jsx(\"div\", { children: children }) }) }));\n});\nCheckboxGroup.displayName = 'CheckboxGroup';\n\nexport { CheckboxGroup, CheckboxGroupContext };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,QAAQ,QAAQ,4BAA4B;AAErD,MAAMC,oBAAoB,GAAGJ,aAAa,CAAC,IAAI,CAAC;AAChD,MAAMK,aAAa,GAAGJ,UAAU,CAAC,CAAC;EAAEK,QAAQ;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,YAAY;EAAEC,IAAI,GAAG,IAAI;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,KAAK;EACnH,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAACQ,YAAY,IAAI,EAAE,CAAC;EACtE,MAAMM,WAAW,GAAIC,aAAa,IAAK;IACnC,MAAMC,YAAY,GAAGV,KAAK,IAAIM,aAAa;IAC3C,MAAMK,YAAY,GAAGD,YAAY,CAACE,QAAQ,CAACH,aAAa,CAAC,GACnDC,YAAY,CAACG,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKL,aAAa,CAAC,GAC/C,CAAC,GAAGC,YAAY,EAAED,aAAa,CAAC;IACtC,IAAI,OAAOT,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,IAAI,EAAE;MAChDO,gBAAgB,CAACI,YAAY,CAAC;IAClC;IACAb,QAAQ,GAAGa,YAAY,CAAC;EAC5B,CAAC;EACD,OAAQpB,GAAG,CAACI,QAAQ,EAAE;IAAEM,QAAQ,EAAEA,QAAQ;IAAEE,IAAI,EAAEA,IAAI;IAAEE,GAAG,EAAEA,GAAG;IAAE,GAAGD,IAAI;IAAEL,QAAQ,EAAER,GAAG,CAACK,oBAAoB,CAACmB,QAAQ,EAAE;MAAEf,KAAK,EAAE;QACrHA,KAAK;QACLE,YAAY;QACZM;MACJ,CAAC;MAAET,QAAQ,EAAER,GAAG,CAAC,KAAK,EAAE;QAAEQ,QAAQ,EAAEA;MAAS,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC;AACjE,CAAC,CAAC;AACFF,aAAa,CAACmB,WAAW,GAAG,eAAe;AAE3C,SAASnB,aAAa,EAAED,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}