{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect, useRef } from 'react';\nimport { getDocument, isMouseLikePointerType, isTypeableCombobox, activeElement, contains, isVirtualClick, isVirtualPointerEvent, getTarget, isSafari, isMac, isTypeableElement, stopEvent, isReactEvent, isRootElement, isEventTargetWithin } from './floating-ui.react.utils.js';\nimport { floor } from '../../utils/dist/floating-ui.utils.js';\nimport { useFloating as useFloating$1 } from '../../react-dom/dist/floating-ui.react-dom.js';\nexport { arrow } from '../../react-dom/dist/floating-ui.react-dom.js';\nimport { isElement, isHTMLElement, getOverflowAncestors, getWindow, getNodeName, isLastTraversableNode, getParentNode, getComputedStyle } from '../../utils/dist/floating-ui.utils.dom.js';\nimport { tabbable, isTabbable } from '../../../tabbable/dist/index.esm.js';\nimport { createPortal } from 'react-dom';\nimport { platform } from '../../dom/dist/floating-ui.dom.js';\nexport { autoUpdate, computePosition, flip, shift, size } from '../../dom/dist/floating-ui.dom.js';\n\n/**\n * Merges an array of refs into a single memoized callback ref or `null`.\n * @see https://floating-ui.com/docs/react-utils#usemergerefs\n */\nfunction useMergeRefs(refs) {\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return value => {\n      refs.forEach(ref => {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref != null) {\n          ref.current = value;\n        }\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n\n// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379\nconst SafeReact = {\n  ...React\n};\nconst useInsertionEffect = SafeReact.useInsertionEffect;\nconst useSafeInsertionEffect = useInsertionEffect || (fn => fn());\nfunction useEffectEvent(callback) {\n  const ref = React.useRef(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error('Cannot call an event handler while rendering.');\n    }\n  });\n  useSafeInsertionEffect(() => {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return ref.current == null ? void 0 : ref.current(...args);\n  }, []);\n}\nconst ARROW_UP = 'ArrowUp';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_LEFT = 'ArrowLeft';\nconst ARROW_RIGHT = 'ArrowRight';\nfunction isDifferentRow(index, cols, prevRow) {\n  return Math.floor(index / cols) !== prevRow;\n}\nfunction isIndexOutOfBounds(listRef, index) {\n  return index < 0 || index >= listRef.current.length;\n}\nfunction getMinIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    disabledIndices\n  });\n}\nfunction getMaxIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    decrement: true,\n    startingIndex: listRef.current.length,\n    disabledIndices\n  });\n}\nfunction findNonDisabledIndex(listRef, _temp) {\n  let {\n    startingIndex = -1,\n    decrement = false,\n    disabledIndices,\n    amount = 1\n  } = _temp === void 0 ? {} : _temp;\n  const list = listRef.current;\n  const isDisabledIndex = disabledIndices ? index => disabledIndices.includes(index) : index => {\n    const element = list[index];\n    return element == null || element.hasAttribute('disabled') || element.getAttribute('aria-disabled') === 'true';\n  };\n  let index = startingIndex;\n  do {\n    index += decrement ? -amount : amount;\n  } while (index >= 0 && index <= list.length - 1 && isDisabledIndex(index));\n  return index;\n}\nfunction getGridNavigatedIndex(elementsRef, _ref) {\n  let {\n    event,\n    orientation,\n    loop,\n    cols,\n    disabledIndices,\n    minIndex,\n    maxIndex,\n    prevIndex,\n    stopEvent: stop = false\n  } = _ref;\n  let nextIndex = prevIndex;\n  if (event.key === ARROW_UP) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = maxIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: nextIndex,\n        amount: cols,\n        decrement: true,\n        disabledIndices\n      });\n      if (loop && (prevIndex - cols < minIndex || nextIndex < 0)) {\n        const col = prevIndex % cols;\n        const maxCol = maxIndex % cols;\n        const offset = maxIndex - (maxCol - col);\n        if (maxCol === col) {\n          nextIndex = maxIndex;\n        } else {\n          nextIndex = maxCol > col ? offset : offset - cols;\n        }\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n  if (event.key === ARROW_DOWN) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = minIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: prevIndex,\n        amount: cols,\n        disabledIndices\n      });\n      if (loop && prevIndex + cols > maxIndex) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex % cols - cols,\n          amount: cols,\n          disabledIndices\n        });\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n\n  // Remains on the same row/column.\n  if (orientation === 'both') {\n    const prevRow = floor(prevIndex / cols);\n    if (event.key === ARROW_RIGHT) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== cols - 1) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          disabledIndices\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex - prevIndex % cols - 1,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    if (event.key === ARROW_LEFT) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== 0) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          disabledIndices,\n          decrement: true\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex + (cols - prevIndex % cols),\n            decrement: true,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex + (cols - prevIndex % cols),\n          decrement: true,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    const lastRow = floor(maxIndex / cols) === prevRow;\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      if (loop && lastRow) {\n        nextIndex = event.key === ARROW_LEFT ? maxIndex : findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      } else {\n        nextIndex = prevIndex;\n      }\n    }\n  }\n  return nextIndex;\n}\n\n/** For each cell index, gets the item index that occupies that cell */\nfunction buildCellMap(sizes, cols, dense) {\n  const cellMap = [];\n  let startIndex = 0;\n  sizes.forEach((_ref2, index) => {\n    let {\n      width,\n      height\n    } = _ref2;\n    if (width > cols) {\n      if (process.env.NODE_ENV !== \"production\") {\n        throw new Error(\"[Floating UI]: Invalid grid - item width at index \" + index + \" is greater than grid columns\");\n      }\n    }\n    let itemPlaced = false;\n    if (dense) {\n      startIndex = 0;\n    }\n    while (!itemPlaced) {\n      const targetCells = [];\n      for (let i = 0; i < width; i++) {\n        for (let j = 0; j < height; j++) {\n          targetCells.push(startIndex + i + j * cols);\n        }\n      }\n      if (startIndex % cols + width <= cols && targetCells.every(cell => cellMap[cell] == null)) {\n        targetCells.forEach(cell => {\n          cellMap[cell] = index;\n        });\n        itemPlaced = true;\n      } else {\n        startIndex++;\n      }\n    }\n  });\n\n  // convert into a non-sparse array\n  return [...cellMap];\n}\n\n/** Gets cell index of an item's corner or -1 when index is -1. */\nfunction getCellIndexOfCorner(index, sizes, cellMap, cols, corner) {\n  if (index === -1) return -1;\n  const firstCellIndex = cellMap.indexOf(index);\n  switch (corner) {\n    case 'tl':\n      return firstCellIndex;\n    case 'tr':\n      return firstCellIndex + sizes[index].width - 1;\n    case 'bl':\n      return firstCellIndex + (sizes[index].height - 1) * cols;\n    case 'br':\n      return cellMap.lastIndexOf(index);\n  }\n}\n\n/** Gets all cell indices that correspond to the specified indices */\nfunction getCellIndices(indices, cellMap) {\n  return cellMap.flatMap((index, cellIndex) => indices.includes(index) ? [cellIndex] : []);\n}\nlet rafId = 0;\nfunction enqueueFocus(el, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    preventScroll = false,\n    cancelPrevious = true,\n    sync = false\n  } = options;\n  cancelPrevious && cancelAnimationFrame(rafId);\n  const exec = () => el == null ? void 0 : el.focus({\n    preventScroll\n  });\n  if (sync) {\n    exec();\n  } else {\n    rafId = requestAnimationFrame(exec);\n  }\n}\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nlet serverHandoffComplete = false;\nlet count = 0;\nconst genId = () =>\n// Ensure the id is unique with multiple independent versions of Floating UI\n// on <React 18\n\"floating-ui-\" + Math.random().toString(36).slice(2, 6) + count++;\nfunction useFloatingId() {\n  const [id, setId] = React.useState(() => serverHandoffComplete ? genId() : undefined);\n  index(() => {\n    if (id == null) {\n      setId(genId());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    serverHandoffComplete = true;\n  }, []);\n  return id;\n}\nconst useReactId = SafeReact.useId;\n\n/**\n * Uses React 18's built-in `useId()` when available, or falls back to a\n * slightly less performant (requiring a double render) implementation for\n * earlier React versions.\n * @see https://floating-ui.com/docs/react-utils#useid\n */\nconst useId = useReactId || useFloatingId;\nlet devMessageSet;\nif (process.env.NODE_ENV !== \"production\") {\n  devMessageSet = /*#__PURE__*/new Set();\n}\nfunction warn() {\n  var _devMessageSet;\n  for (var _len = arguments.length, messages = new Array(_len), _key = 0; _key < _len; _key++) {\n    messages[_key] = arguments[_key];\n  }\n  const message = \"Floating UI: \" + messages.join(' ');\n  if (!((_devMessageSet = devMessageSet) != null && _devMessageSet.has(message))) {\n    var _devMessageSet2;\n    (_devMessageSet2 = devMessageSet) == null || _devMessageSet2.add(message);\n    console.warn(message);\n  }\n}\nfunction error() {\n  var _devMessageSet3;\n  for (var _len2 = arguments.length, messages = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    messages[_key2] = arguments[_key2];\n  }\n  const message = \"Floating UI: \" + messages.join(' ');\n  if (!((_devMessageSet3 = devMessageSet) != null && _devMessageSet3.has(message))) {\n    var _devMessageSet4;\n    (_devMessageSet4 = devMessageSet) == null || _devMessageSet4.add(message);\n    console.error(message);\n  }\n}\n\n/**\n * Renders a pointing arrow triangle.\n * @see https://floating-ui.com/docs/FloatingArrow\n */\nconst FloatingArrow = /*#__PURE__*/React.forwardRef(function FloatingArrow(props, ref) {\n  const {\n    context: {\n      placement,\n      elements: {\n        floating\n      },\n      middlewareData: {\n        arrow\n      }\n    },\n    width = 14,\n    height = 7,\n    tipRadius = 0,\n    strokeWidth = 0,\n    staticOffset,\n    stroke,\n    d,\n    style: {\n      transform,\n      ...restStyle\n    } = {},\n    ...rest\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!ref) {\n      warn('The `ref` prop is required for `FloatingArrow`.');\n    }\n  }\n  const clipPathId = useId();\n  if (!floating) {\n    return null;\n  }\n\n  // Strokes must be double the border width, this ensures the stroke's width\n  // works as you'd expect.\n  const computedStrokeWidth = strokeWidth * 2;\n  const halfStrokeWidth = computedStrokeWidth / 2;\n  const svgX = width / 2 * (tipRadius / -8 + 1);\n  const svgY = height / 2 * tipRadius / 4;\n  const [side, alignment] = placement.split('-');\n  const isRTL = platform.isRTL(floating);\n  const isCustomShape = !!d;\n  const isVerticalSide = side === 'top' || side === 'bottom';\n  const yOffsetProp = staticOffset && alignment === 'end' ? 'bottom' : 'top';\n  let xOffsetProp = staticOffset && alignment === 'end' ? 'right' : 'left';\n  if (staticOffset && isRTL) {\n    xOffsetProp = alignment === 'end' ? 'left' : 'right';\n  }\n  const arrowX = (arrow == null ? void 0 : arrow.x) != null ? staticOffset || arrow.x : '';\n  const arrowY = (arrow == null ? void 0 : arrow.y) != null ? staticOffset || arrow.y : '';\n  const dValue = d || 'M0,0' + (\" H\" + width) + (\" L\" + (width - svgX) + \",\" + (height - svgY)) + (\" Q\" + width / 2 + \",\" + height + \" \" + svgX + \",\" + (height - svgY)) + ' Z';\n  const rotation = {\n    top: isCustomShape ? 'rotate(180deg)' : '',\n    left: isCustomShape ? 'rotate(90deg)' : 'rotate(-90deg)',\n    bottom: isCustomShape ? '' : 'rotate(180deg)',\n    right: isCustomShape ? 'rotate(-90deg)' : 'rotate(90deg)'\n  }[side];\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, rest, {\n    \"aria-hidden\": true,\n    ref: ref,\n    width: isCustomShape ? width : width + computedStrokeWidth,\n    height: width,\n    viewBox: \"0 0 \" + width + \" \" + (height > width ? height : width),\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      [xOffsetProp]: arrowX,\n      [yOffsetProp]: arrowY,\n      [side]: isVerticalSide || isCustomShape ? '100%' : \"calc(100% - \" + computedStrokeWidth / 2 + \"px)\",\n      transform: \"\" + rotation + (transform != null ? transform : ''),\n      ...restStyle\n    }\n  }), computedStrokeWidth > 0 && /*#__PURE__*/React.createElement(\"path\", {\n    clipPath: \"url(#\" + clipPathId + \")\",\n    fill: \"none\",\n    stroke: stroke\n    // Account for the stroke on the fill path rendered below.\n    ,\n\n    strokeWidth: computedStrokeWidth + (d ? 0 : 1),\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: computedStrokeWidth && !d ? rest.fill : 'none',\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: clipPathId\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: -halfStrokeWidth,\n    y: halfStrokeWidth * (isCustomShape ? -1 : 1),\n    width: width + computedStrokeWidth,\n    height: width\n  })));\n});\nfunction createPubSub() {\n  const map = new Map();\n  return {\n    emit(event, data) {\n      var _map$get;\n      (_map$get = map.get(event)) == null || _map$get.forEach(handler => handler(data));\n    },\n    on(event, listener) {\n      map.set(event, [...(map.get(event) || []), listener]);\n    },\n    off(event, listener) {\n      var _map$get2;\n      map.set(event, ((_map$get2 = map.get(event)) == null ? void 0 : _map$get2.filter(l => l !== listener)) || []);\n    }\n  };\n}\nconst FloatingNodeContext = /*#__PURE__*/React.createContext(null);\nconst FloatingTreeContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the parent node id for nested floating elements, if available.\n * Returns `null` for top-level floating elements.\n */\nconst useFloatingParentNodeId = () => {\n  var _React$useContext;\n  return ((_React$useContext = React.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;\n};\n\n/**\n * Returns the nearest floating tree context, if available.\n */\nconst useFloatingTree = () => React.useContext(FloatingTreeContext);\nfunction createAttribute(name) {\n  return \"data-floating-ui-\" + name;\n}\nfunction useLatestRef(value) {\n  const ref = useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\nconst safePolygonIdentifier = /*#__PURE__*/createAttribute('safe-polygon');\nfunction getDelay(value, prop, pointerType) {\n  if (pointerType && !isMouseLikePointerType(pointerType)) {\n    return 0;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return value == null ? void 0 : value[prop];\n}\n/**\n * Opens the floating element while hovering over the reference element, like\n * CSS `:hover`.\n * @see https://floating-ui.com/docs/useHover\n */\nfunction useHover(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    events,\n    elements: {\n      domReference,\n      floating\n    },\n    refs\n  } = context;\n  const {\n    enabled = true,\n    delay = 0,\n    handleClose = null,\n    mouseOnly = false,\n    restMs = 0,\n    move = true\n  } = props;\n  const tree = useFloatingTree();\n  const parentId = useFloatingParentNodeId();\n  const handleCloseRef = useLatestRef(handleClose);\n  const delayRef = useLatestRef(delay);\n  const pointerTypeRef = React.useRef();\n  const timeoutRef = React.useRef();\n  const handlerRef = React.useRef();\n  const restTimeoutRef = React.useRef();\n  const blockMouseMoveRef = React.useRef(true);\n  const performedPointerEventsMutationRef = React.useRef(false);\n  const unbindMouseMoveRef = React.useRef(() => {});\n  const isHoverOpen = React.useCallback(() => {\n    var _dataRef$current$open;\n    const type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;\n    return (type == null ? void 0 : type.includes('mouse')) && type !== 'mousedown';\n  }, [dataRef]);\n\n  // When closing before opening, clear the delay timeouts to cancel it\n  // from showing.\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onOpenChange(_ref) {\n      let {\n        open\n      } = _ref;\n      if (!open) {\n        clearTimeout(timeoutRef.current);\n        clearTimeout(restTimeoutRef.current);\n        blockMouseMoveRef.current = true;\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n    };\n  }, [enabled, events]);\n  React.useEffect(() => {\n    if (!enabled || !handleCloseRef.current || !open) {\n      return;\n    }\n    function onLeave(event) {\n      if (isHoverOpen()) {\n        onOpenChange(false, event, 'hover');\n      }\n    }\n    const html = getDocument(floating).documentElement;\n    html.addEventListener('mouseleave', onLeave);\n    return () => {\n      html.removeEventListener('mouseleave', onLeave);\n    };\n  }, [floating, open, onOpenChange, enabled, handleCloseRef, isHoverOpen]);\n  const closeWithDelay = React.useCallback(function (event, runElseBranch, reason) {\n    if (runElseBranch === void 0) {\n      runElseBranch = true;\n    }\n    if (reason === void 0) {\n      reason = 'hover';\n    }\n    const closeDelay = getDelay(delayRef.current, 'close', pointerTypeRef.current);\n    if (closeDelay && !handlerRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = setTimeout(() => onOpenChange(false, event, reason), closeDelay);\n    } else if (runElseBranch) {\n      clearTimeout(timeoutRef.current);\n      onOpenChange(false, event, reason);\n    }\n  }, [delayRef, onOpenChange]);\n  const cleanupMouseMoveHandler = React.useCallback(() => {\n    unbindMouseMoveRef.current();\n    handlerRef.current = undefined;\n  }, []);\n  const clearPointerEvents = React.useCallback(() => {\n    if (performedPointerEventsMutationRef.current) {\n      const body = getDocument(refs.floating.current).body;\n      body.style.pointerEvents = '';\n      body.removeAttribute(safePolygonIdentifier);\n      performedPointerEventsMutationRef.current = false;\n    }\n  }, [refs]);\n\n  // Registering the mouse events on the reference directly to bypass React's\n  // delegation system. If the cursor was on a disabled element and then entered\n  // the reference (no gap), `mouseenter` doesn't fire in the delegation system.\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function isClickLikeOpenEvent() {\n      return dataRef.current.openEvent ? ['click', 'mousedown'].includes(dataRef.current.openEvent.type) : false;\n    }\n    function onMouseEnter(event) {\n      clearTimeout(timeoutRef.current);\n      blockMouseMoveRef.current = false;\n      if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current) || restMs > 0 && getDelay(delayRef.current, 'open') === 0) {\n        return;\n      }\n      const openDelay = getDelay(delayRef.current, 'open', pointerTypeRef.current);\n      if (openDelay) {\n        timeoutRef.current = setTimeout(() => {\n          onOpenChange(true, event, 'hover');\n        }, openDelay);\n      } else {\n        onOpenChange(true, event, 'hover');\n      }\n    }\n    function onMouseLeave(event) {\n      if (isClickLikeOpenEvent()) {\n        return;\n      }\n      unbindMouseMoveRef.current();\n      const doc = getDocument(floating);\n      clearTimeout(restTimeoutRef.current);\n      if (handleCloseRef.current) {\n        // Prevent clearing `onScrollMouseLeave` timeout.\n        if (!open) {\n          clearTimeout(timeoutRef.current);\n        }\n        handlerRef.current = handleCloseRef.current({\n          ...context,\n          tree,\n          x: event.clientX,\n          y: event.clientY,\n          onClose() {\n            clearPointerEvents();\n            cleanupMouseMoveHandler();\n            closeWithDelay(event, true, 'safe-polygon');\n          }\n        });\n        const handler = handlerRef.current;\n        doc.addEventListener('mousemove', handler);\n        unbindMouseMoveRef.current = () => {\n          doc.removeEventListener('mousemove', handler);\n        };\n        return;\n      }\n\n      // Allow interactivity without `safePolygon` on touch devices. With a\n      // pointer, a short close delay is an alternative, so it should work\n      // consistently.\n      const shouldClose = pointerTypeRef.current === 'touch' ? !contains(floating, event.relatedTarget) : true;\n      if (shouldClose) {\n        closeWithDelay(event);\n      }\n    }\n\n    // Ensure the floating element closes after scrolling even if the pointer\n    // did not move.\n    // https://github.com/floating-ui/floating-ui/discussions/1692\n    function onScrollMouseLeave(event) {\n      if (isClickLikeOpenEvent()) {\n        return;\n      }\n      handleCloseRef.current == null || handleCloseRef.current({\n        ...context,\n        tree,\n        x: event.clientX,\n        y: event.clientY,\n        onClose() {\n          clearPointerEvents();\n          cleanupMouseMoveHandler();\n          closeWithDelay(event);\n        }\n      })(event);\n    }\n    if (isElement(domReference)) {\n      const ref = domReference;\n      open && ref.addEventListener('mouseleave', onScrollMouseLeave);\n      floating == null || floating.addEventListener('mouseleave', onScrollMouseLeave);\n      move && ref.addEventListener('mousemove', onMouseEnter, {\n        once: true\n      });\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      return () => {\n        open && ref.removeEventListener('mouseleave', onScrollMouseLeave);\n        floating == null || floating.removeEventListener('mouseleave', onScrollMouseLeave);\n        move && ref.removeEventListener('mousemove', onMouseEnter);\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n  }, [domReference, floating, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupMouseMoveHandler, clearPointerEvents, onOpenChange, open, tree, delayRef, handleCloseRef, dataRef]);\n\n  // Block pointer-events of every element other than the reference and floating\n  // while the floating element is open and has a `handleClose` handler. Also\n  // handles nested floating elements.\n  // https://github.com/floating-ui/floating-ui/issues/1722\n  index(() => {\n    var _handleCloseRef$curre;\n    if (!enabled) {\n      return;\n    }\n    if (open && (_handleCloseRef$curre = handleCloseRef.current) != null && _handleCloseRef$curre.__options.blockPointerEvents && isHoverOpen()) {\n      const body = getDocument(floating).body;\n      body.setAttribute(safePolygonIdentifier, '');\n      body.style.pointerEvents = 'none';\n      performedPointerEventsMutationRef.current = true;\n      if (isElement(domReference) && floating) {\n        var _tree$nodesRef$curren;\n        const ref = domReference;\n        const parentFloating = tree == null || (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null || (_tree$nodesRef$curren = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren.elements.floating;\n        if (parentFloating) {\n          parentFloating.style.pointerEvents = '';\n        }\n        ref.style.pointerEvents = 'auto';\n        floating.style.pointerEvents = 'auto';\n        return () => {\n          ref.style.pointerEvents = '';\n          floating.style.pointerEvents = '';\n        };\n      }\n    }\n  }, [enabled, open, parentId, floating, domReference, tree, handleCloseRef, isHoverOpen]);\n  index(() => {\n    if (!open) {\n      pointerTypeRef.current = undefined;\n      cleanupMouseMoveHandler();\n      clearPointerEvents();\n    }\n  }, [open, cleanupMouseMoveHandler, clearPointerEvents]);\n  React.useEffect(() => {\n    return () => {\n      cleanupMouseMoveHandler();\n      clearTimeout(timeoutRef.current);\n      clearTimeout(restTimeoutRef.current);\n      clearPointerEvents();\n    };\n  }, [enabled, domReference, cleanupMouseMoveHandler, clearPointerEvents]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    function setPointerRef(event) {\n      pointerTypeRef.current = event.pointerType;\n    }\n    return {\n      reference: {\n        onPointerDown: setPointerRef,\n        onPointerEnter: setPointerRef,\n        onMouseMove(event) {\n          function handleMouseMove() {\n            if (!blockMouseMoveRef.current) {\n              onOpenChange(true, event.nativeEvent, 'hover');\n            }\n          }\n          if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current)) {\n            return;\n          }\n          if (open || restMs === 0) {\n            return;\n          }\n          clearTimeout(restTimeoutRef.current);\n          if (pointerTypeRef.current === 'touch') {\n            handleMouseMove();\n          } else {\n            restTimeoutRef.current = setTimeout(handleMouseMove, restMs);\n          }\n        }\n      },\n      floating: {\n        onMouseEnter() {\n          clearTimeout(timeoutRef.current);\n        },\n        onMouseLeave(event) {\n          closeWithDelay(event.nativeEvent, false);\n        }\n      }\n    };\n  }, [enabled, mouseOnly, open, restMs, onOpenChange, closeWithDelay]);\n}\nfunction getAncestors(nodes, id) {\n  var _nodes$find;\n  let allAncestors = [];\n  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;\n  while (currentParentId) {\n    const currentNode = nodes.find(node => node.id === currentParentId);\n    currentParentId = currentNode == null ? void 0 : currentNode.parentId;\n    if (currentNode) {\n      allAncestors = allAncestors.concat(currentNode);\n    }\n  }\n  return allAncestors;\n}\nfunction getChildren(nodes, id) {\n  let allChildren = nodes.filter(node => {\n    var _node$context;\n    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);\n  });\n  let currentChildren = allChildren;\n  while (currentChildren.length) {\n    currentChildren = nodes.filter(node => {\n      var _currentChildren;\n      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {\n        var _node$context2;\n        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);\n      });\n    });\n    allChildren = allChildren.concat(currentChildren);\n  }\n  return allChildren;\n}\nfunction getDeepestNode(nodes, id) {\n  let deepestNodeId;\n  let maxDepth = -1;\n  function findDeepest(nodeId, depth) {\n    if (depth > maxDepth) {\n      deepestNodeId = nodeId;\n      maxDepth = depth;\n    }\n    const children = getChildren(nodes, nodeId);\n    children.forEach(child => {\n      findDeepest(child.id, depth + 1);\n    });\n  }\n  findDeepest(id, 0);\n  return nodes.find(node => node.id === deepestNodeId);\n}\n\n// Modified to add conditional `aria-hidden` support:\n// https://github.com/theKashey/aria-hidden/blob/9220c8f4a4fd35f63bee5510a9f41a37264382d4/src/index.ts\nlet counterMap = /*#__PURE__*/new WeakMap();\nlet uncontrolledElementsSet = /*#__PURE__*/new WeakSet();\nlet markerMap = {};\nlet lockCount = 0;\nconst supportsInert = () => typeof HTMLElement !== 'undefined' && 'inert' in HTMLElement.prototype;\nconst unwrapHost = node => node && (node.host || unwrapHost(node.parentNode));\nconst correctElements = (parent, targets) => targets.map(target => {\n  if (parent.contains(target)) {\n    return target;\n  }\n  const correctedTarget = unwrapHost(target);\n  if (parent.contains(correctedTarget)) {\n    return correctedTarget;\n  }\n  return null;\n}).filter(x => x != null);\nfunction applyAttributeToOthers(uncorrectedAvoidElements, body, ariaHidden, inert) {\n  const markerName = 'data-floating-ui-inert';\n  const controlAttribute = inert ? 'inert' : ariaHidden ? 'aria-hidden' : null;\n  const avoidElements = correctElements(body, uncorrectedAvoidElements);\n  const elementsToKeep = new Set();\n  const elementsToStop = new Set(avoidElements);\n  const hiddenElements = [];\n  if (!markerMap[markerName]) {\n    markerMap[markerName] = new WeakMap();\n  }\n  const markerCounter = markerMap[markerName];\n  avoidElements.forEach(keep);\n  deep(body);\n  elementsToKeep.clear();\n  function keep(el) {\n    if (!el || elementsToKeep.has(el)) {\n      return;\n    }\n    elementsToKeep.add(el);\n    el.parentNode && keep(el.parentNode);\n  }\n  function deep(parent) {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    Array.prototype.forEach.call(parent.children, node => {\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        const attr = controlAttribute ? node.getAttribute(controlAttribute) : null;\n        const alreadyHidden = attr !== null && attr !== 'false';\n        const counterValue = (counterMap.get(node) || 0) + 1;\n        const markerValue = (markerCounter.get(node) || 0) + 1;\n        counterMap.set(node, counterValue);\n        markerCounter.set(node, markerValue);\n        hiddenElements.push(node);\n        if (counterValue === 1 && alreadyHidden) {\n          uncontrolledElementsSet.add(node);\n        }\n        if (markerValue === 1) {\n          node.setAttribute(markerName, '');\n        }\n        if (!alreadyHidden && controlAttribute) {\n          node.setAttribute(controlAttribute, 'true');\n        }\n      }\n    });\n  }\n  lockCount++;\n  return () => {\n    hiddenElements.forEach(element => {\n      const counterValue = (counterMap.get(element) || 0) - 1;\n      const markerValue = (markerCounter.get(element) || 0) - 1;\n      counterMap.set(element, counterValue);\n      markerCounter.set(element, markerValue);\n      if (!counterValue) {\n        if (!uncontrolledElementsSet.has(element) && controlAttribute) {\n          element.removeAttribute(controlAttribute);\n        }\n        uncontrolledElementsSet.delete(element);\n      }\n      if (!markerValue) {\n        element.removeAttribute(markerName);\n      }\n    });\n    lockCount--;\n    if (!lockCount) {\n      counterMap = new WeakMap();\n      counterMap = new WeakMap();\n      uncontrolledElementsSet = new WeakSet();\n      markerMap = {};\n    }\n  };\n}\nfunction markOthers(avoidElements, ariaHidden, inert) {\n  if (ariaHidden === void 0) {\n    ariaHidden = false;\n  }\n  if (inert === void 0) {\n    inert = false;\n  }\n  const body = getDocument(avoidElements[0]).body;\n  return applyAttributeToOthers(avoidElements.concat(Array.from(body.querySelectorAll('[aria-live]'))), body, ariaHidden, inert);\n}\nconst getTabbableOptions = () => ({\n  getShadowRoot: true,\n  displayCheck:\n  // JSDOM does not support the `tabbable` library. To solve this we can\n  // check if `ResizeObserver` is a real function (not polyfilled), which\n  // determines if the current environment is JSDOM-like.\n  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'\n});\nfunction getTabbableIn(container, direction) {\n  const allTabbable = tabbable(container, getTabbableOptions());\n  if (direction === 'prev') {\n    allTabbable.reverse();\n  }\n  const activeIndex = allTabbable.indexOf(activeElement(getDocument(container)));\n  const nextTabbableElements = allTabbable.slice(activeIndex + 1);\n  return nextTabbableElements[0];\n}\nfunction getNextTabbable() {\n  return getTabbableIn(document.body, 'next');\n}\nfunction getPreviousTabbable() {\n  return getTabbableIn(document.body, 'prev');\n}\nfunction isOutsideEvent(event, container) {\n  const containerElement = container || event.currentTarget;\n  const relatedTarget = event.relatedTarget;\n  return !relatedTarget || !contains(containerElement, relatedTarget);\n}\nfunction disableFocusInside(container) {\n  const tabbableElements = tabbable(container, getTabbableOptions());\n  tabbableElements.forEach(element => {\n    element.dataset.tabindex = element.getAttribute('tabindex') || '';\n    element.setAttribute('tabindex', '-1');\n  });\n}\nfunction enableFocusInside(container) {\n  const elements = container.querySelectorAll('[data-tabindex]');\n  elements.forEach(element => {\n    const tabindex = element.dataset.tabindex;\n    delete element.dataset.tabindex;\n    if (tabindex) {\n      element.setAttribute('tabindex', tabindex);\n    } else {\n      element.removeAttribute('tabindex');\n    }\n  });\n}\n\n// See Diego Haz's Sandbox for making this logic work well on Safari/iOS:\n// https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/FocusTrap.tsx\n\nconst HIDDEN_STYLES = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'fixed',\n  whiteSpace: 'nowrap',\n  width: '1px',\n  top: 0,\n  left: 0\n};\nlet timeoutId;\nfunction setActiveElementOnTab(event) {\n  if (event.key === 'Tab') {\n    event.target;\n    clearTimeout(timeoutId);\n  }\n}\nconst FocusGuard = /*#__PURE__*/React.forwardRef(function FocusGuard(props, ref) {\n  const [role, setRole] = React.useState();\n  index(() => {\n    if (isSafari()) {\n      // Unlike other screen readers such as NVDA and JAWS, the virtual cursor\n      // on VoiceOver does trigger the onFocus event, so we can use the focus\n      // trap element. On Safari, only buttons trigger the onFocus event.\n      // NB: \"group\" role in the Sandbox no longer appears to work, must be a\n      // button role.\n      setRole('button');\n    }\n    document.addEventListener('keydown', setActiveElementOnTab);\n    return () => {\n      document.removeEventListener('keydown', setActiveElementOnTab);\n    };\n  }, []);\n  const restProps = {\n    ref,\n    tabIndex: 0,\n    // Role is only for VoiceOver\n    role,\n    'aria-hidden': role ? undefined : true,\n    [createAttribute('focus-guard')]: '',\n    style: HIDDEN_STYLES\n  };\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, props, restProps));\n});\nconst PortalContext = /*#__PURE__*/React.createContext(null);\nconst attr = /*#__PURE__*/createAttribute('portal');\n\n/**\n * @see https://floating-ui.com/docs/FloatingPortal#usefloatingportalnode\n */\nfunction useFloatingPortalNode(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    id,\n    root\n  } = props;\n  const uniqueId = useId();\n  const portalContext = usePortalContext();\n  const [portalNode, setPortalNode] = React.useState(null);\n  const portalNodeRef = React.useRef(null);\n  index(() => {\n    return () => {\n      portalNode == null || portalNode.remove();\n      // Allow the subsequent layout effects to create a new node on updates.\n      // The portal node will still be cleaned up on unmount.\n      // https://github.com/floating-ui/floating-ui/issues/2454\n      queueMicrotask(() => {\n        portalNodeRef.current = null;\n      });\n    };\n  }, [portalNode]);\n  index(() => {\n    if (portalNodeRef.current) return;\n    const existingIdRoot = id ? document.getElementById(id) : null;\n    if (!existingIdRoot) return;\n    const subRoot = document.createElement('div');\n    subRoot.id = uniqueId;\n    subRoot.setAttribute(attr, '');\n    existingIdRoot.appendChild(subRoot);\n    portalNodeRef.current = subRoot;\n    setPortalNode(subRoot);\n  }, [id, uniqueId]);\n  index(() => {\n    if (portalNodeRef.current) return;\n    let container = root || (portalContext == null ? void 0 : portalContext.portalNode);\n    if (container && !isElement(container)) container = container.current;\n    container = container || document.body;\n    let idWrapper = null;\n    if (id) {\n      idWrapper = document.createElement('div');\n      idWrapper.id = id;\n      container.appendChild(idWrapper);\n    }\n    const subRoot = document.createElement('div');\n    subRoot.id = uniqueId;\n    subRoot.setAttribute(attr, '');\n    container = idWrapper || container;\n    container.appendChild(subRoot);\n    portalNodeRef.current = subRoot;\n    setPortalNode(subRoot);\n  }, [id, root, uniqueId, portalContext]);\n  return portalNode;\n}\n/**\n * Portals the floating element into a given container element — by default,\n * outside of the app root and into the body.\n * This is necessary to ensure the floating element can appear outside any\n * potential parent containers that cause clipping (such as `overflow: hidden`),\n * while retaining its location in the React tree.\n * @see https://floating-ui.com/docs/FloatingPortal\n */\nfunction FloatingPortal(props) {\n  const {\n    children,\n    id,\n    root = null,\n    preserveTabOrder = true\n  } = props;\n  const portalNode = useFloatingPortalNode({\n    id,\n    root\n  });\n  const [focusManagerState, setFocusManagerState] = React.useState(null);\n  const beforeOutsideRef = React.useRef(null);\n  const afterOutsideRef = React.useRef(null);\n  const beforeInsideRef = React.useRef(null);\n  const afterInsideRef = React.useRef(null);\n  const shouldRenderGuards =\n  // The FocusManager and therefore floating element are currently open/\n  // rendered.\n  !!focusManagerState &&\n  // Guards are only for non-modal focus management.\n  !focusManagerState.modal &&\n  // Don't render if unmount is transitioning.\n  focusManagerState.open && preserveTabOrder && !!(root || portalNode);\n\n  // https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/TabbablePortal.tsx\n  React.useEffect(() => {\n    if (!portalNode || !preserveTabOrder || focusManagerState != null && focusManagerState.modal) {\n      return;\n    }\n\n    // Make sure elements inside the portal element are tabbable only when the\n    // portal has already been focused, either by tabbing into a focus trap\n    // element outside or using the mouse.\n    function onFocus(event) {\n      if (portalNode && isOutsideEvent(event)) {\n        const focusing = event.type === 'focusin';\n        const manageFocus = focusing ? enableFocusInside : disableFocusInside;\n        manageFocus(portalNode);\n      }\n    }\n    // Listen to the event on the capture phase so they run before the focus\n    // trap elements onFocus prop is called.\n    portalNode.addEventListener('focusin', onFocus, true);\n    portalNode.addEventListener('focusout', onFocus, true);\n    return () => {\n      portalNode.removeEventListener('focusin', onFocus, true);\n      portalNode.removeEventListener('focusout', onFocus, true);\n    };\n  }, [portalNode, preserveTabOrder, focusManagerState == null ? void 0 : focusManagerState.modal]);\n  return /*#__PURE__*/React.createElement(PortalContext.Provider, {\n    value: React.useMemo(() => ({\n      preserveTabOrder,\n      beforeOutsideRef,\n      afterOutsideRef,\n      beforeInsideRef,\n      afterInsideRef,\n      portalNode,\n      setFocusManagerState\n    }), [preserveTabOrder, portalNode])\n  }, shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: beforeOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _beforeInsideRef$curr;\n        (_beforeInsideRef$curr = beforeInsideRef.current) == null || _beforeInsideRef$curr.focus();\n      } else {\n        const prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        prevTabbable == null || prevTabbable.focus();\n      }\n    }\n  }), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-owns\": portalNode.id,\n    style: HIDDEN_STYLES\n  }), portalNode && /*#__PURE__*/createPortal(children, portalNode), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: afterOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _afterInsideRef$curre;\n        (_afterInsideRef$curre = afterInsideRef.current) == null || _afterInsideRef$curre.focus();\n      } else {\n        const nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        nextTabbable == null || nextTabbable.focus();\n        (focusManagerState == null ? void 0 : focusManagerState.closeOnFocusOut) && (focusManagerState == null ? void 0 : focusManagerState.onOpenChange(false, event.nativeEvent));\n      }\n    }\n  }));\n}\nconst usePortalContext = () => React.useContext(PortalContext);\nconst LIST_LIMIT = 20;\nlet previouslyFocusedElements = [];\nfunction addPreviouslyFocusedElement(element) {\n  previouslyFocusedElements = previouslyFocusedElements.filter(el => el.isConnected);\n  let tabbableEl = element;\n  if (!tabbableEl || getNodeName(tabbableEl) === 'body') return;\n  if (!isTabbable(tabbableEl, getTabbableOptions())) {\n    const tabbableChild = tabbable(tabbableEl, getTabbableOptions())[0];\n    if (!tabbableChild) return;\n    tabbableEl = tabbableChild;\n  }\n  previouslyFocusedElements.push(tabbableEl);\n  if (previouslyFocusedElements.length > LIST_LIMIT) {\n    previouslyFocusedElements = previouslyFocusedElements.slice(-LIST_LIMIT);\n  }\n}\nfunction getPreviouslyFocusedElement() {\n  return previouslyFocusedElements.slice().reverse().find(el => el.isConnected);\n}\nconst VisuallyHiddenDismiss = /*#__PURE__*/React.forwardRef(function VisuallyHiddenDismiss(props, ref) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, props, {\n    type: \"button\",\n    ref: ref,\n    tabIndex: -1,\n    style: HIDDEN_STYLES\n  }));\n});\n/**\n * Provides focus management for the floating element.\n * @see https://floating-ui.com/docs/FloatingFocusManager\n */\nfunction FloatingFocusManager(props) {\n  const {\n    context,\n    children,\n    disabled = false,\n    order = ['content'],\n    guards: _guards = true,\n    initialFocus = 0,\n    returnFocus = true,\n    modal = true,\n    visuallyHiddenDismiss = false,\n    closeOnFocusOut = true\n  } = props;\n  const {\n    open,\n    refs,\n    nodeId,\n    onOpenChange,\n    events,\n    dataRef,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const ignoreInitialFocus = typeof initialFocus === 'number' && initialFocus < 0;\n  // If the reference is a combobox and is typeable (e.g. input/textarea),\n  // there are different focus semantics. The guards should not be rendered, but\n  // aria-hidden should be applied to all nodes still. Further, the visually\n  // hidden dismiss button should only appear at the end of the list, not the\n  // start.\n  const isUntrappedTypeableCombobox = isTypeableCombobox(domReference) && ignoreInitialFocus;\n\n  // Force the guards to be rendered if the `inert` attribute is not supported.\n  const guards = supportsInert() ? _guards : true;\n  const orderRef = useLatestRef(order);\n  const initialFocusRef = useLatestRef(initialFocus);\n  const returnFocusRef = useLatestRef(returnFocus);\n  const tree = useFloatingTree();\n  const portalContext = usePortalContext();\n  const startDismissButtonRef = React.useRef(null);\n  const endDismissButtonRef = React.useRef(null);\n  const preventReturnFocusRef = React.useRef(false);\n  const isPointerDownRef = React.useRef(false);\n  const isInsidePortal = portalContext != null;\n  const getTabbableContent = React.useCallback(function (container) {\n    if (container === void 0) {\n      container = floating;\n    }\n    return container ? tabbable(container, getTabbableOptions()) : [];\n  }, [floating]);\n  const getTabbableElements = React.useCallback(container => {\n    const content = getTabbableContent(container);\n    return orderRef.current.map(type => {\n      if (domReference && type === 'reference') {\n        return domReference;\n      }\n      if (floating && type === 'floating') {\n        return floating;\n      }\n      return content;\n    }).filter(Boolean).flat();\n  }, [domReference, floating, orderRef, getTabbableContent]);\n  React.useEffect(() => {\n    if (disabled || !modal) return;\n    function onKeyDown(event) {\n      if (event.key === 'Tab') {\n        // The focus guards have nothing to focus, so we need to stop the event.\n        if (contains(floating, activeElement(getDocument(floating))) && getTabbableContent().length === 0 && !isUntrappedTypeableCombobox) {\n          stopEvent(event);\n        }\n        const els = getTabbableElements();\n        const target = getTarget(event);\n        if (orderRef.current[0] === 'reference' && target === domReference) {\n          stopEvent(event);\n          if (event.shiftKey) {\n            enqueueFocus(els[els.length - 1]);\n          } else {\n            enqueueFocus(els[1]);\n          }\n        }\n        if (orderRef.current[1] === 'floating' && target === floating && event.shiftKey) {\n          stopEvent(event);\n          enqueueFocus(els[0]);\n        }\n      }\n    }\n    const doc = getDocument(floating);\n    doc.addEventListener('keydown', onKeyDown);\n    return () => {\n      doc.removeEventListener('keydown', onKeyDown);\n    };\n  }, [disabled, domReference, floating, modal, orderRef, isUntrappedTypeableCombobox, getTabbableContent, getTabbableElements]);\n  React.useEffect(() => {\n    if (disabled || !closeOnFocusOut) return;\n\n    // In Safari, buttons lose focus when pressing them.\n    function handlePointerDown() {\n      isPointerDownRef.current = true;\n      setTimeout(() => {\n        isPointerDownRef.current = false;\n      });\n    }\n    function handleFocusOutside(event) {\n      const relatedTarget = event.relatedTarget;\n      queueMicrotask(() => {\n        const movedToUnrelatedNode = !(contains(domReference, relatedTarget) || contains(floating, relatedTarget) || contains(relatedTarget, floating) || contains(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute(createAttribute('focus-guard')) || tree && (getChildren(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context, _node$context2;\n          return contains((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || contains((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);\n        }) || getAncestors(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context3, _node$context4;\n          return ((_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating) === relatedTarget || ((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.domReference) === relatedTarget;\n        })));\n\n        // Focus did not move inside the floating tree, and there are no tabbable\n        // portal guards to handle closing.\n        if (relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current &&\n        // Fix React 18 Strict Mode returnFocus due to double rendering.\n        relatedTarget !== getPreviouslyFocusedElement()) {\n          preventReturnFocusRef.current = true;\n          onOpenChange(false, event);\n        }\n      });\n    }\n    if (floating && isHTMLElement(domReference)) {\n      domReference.addEventListener('focusout', handleFocusOutside);\n      domReference.addEventListener('pointerdown', handlePointerDown);\n      !modal && floating.addEventListener('focusout', handleFocusOutside);\n      return () => {\n        domReference.removeEventListener('focusout', handleFocusOutside);\n        domReference.removeEventListener('pointerdown', handlePointerDown);\n        !modal && floating.removeEventListener('focusout', handleFocusOutside);\n      };\n    }\n  }, [disabled, domReference, floating, modal, nodeId, tree, portalContext, onOpenChange, closeOnFocusOut]);\n  React.useEffect(() => {\n    var _portalContext$portal;\n    if (disabled) return;\n\n    // Don't hide portals nested within the parent portal.\n    const portalNodes = Array.from((portalContext == null || (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll(\"[\" + createAttribute('portal') + \"]\")) || []);\n    if (floating) {\n      const insideElements = [floating, ...portalNodes, startDismissButtonRef.current, endDismissButtonRef.current, orderRef.current.includes('reference') || isUntrappedTypeableCombobox ? domReference : null].filter(x => x != null);\n      const cleanup = modal || isUntrappedTypeableCombobox ? markOthers(insideElements, guards, !guards) : markOthers(insideElements);\n      return () => {\n        cleanup();\n      };\n    }\n  }, [disabled, domReference, floating, modal, orderRef, portalContext, isUntrappedTypeableCombobox, guards]);\n  index(() => {\n    if (disabled || !floating) return;\n    const doc = getDocument(floating);\n    const previouslyFocusedElement = activeElement(doc);\n\n    // Wait for any layout effect state setters to execute to set `tabIndex`.\n    queueMicrotask(() => {\n      const focusableElements = getTabbableElements(floating);\n      const initialFocusValue = initialFocusRef.current;\n      const elToFocus = (typeof initialFocusValue === 'number' ? focusableElements[initialFocusValue] : initialFocusValue.current) || floating;\n      const focusAlreadyInsideFloatingEl = contains(floating, previouslyFocusedElement);\n      if (!ignoreInitialFocus && !focusAlreadyInsideFloatingEl && open) {\n        enqueueFocus(elToFocus, {\n          preventScroll: elToFocus === floating\n        });\n      }\n    });\n  }, [disabled, open, floating, ignoreInitialFocus, getTabbableElements, initialFocusRef]);\n  index(() => {\n    if (disabled || !floating) return;\n    let preventReturnFocusScroll = false;\n    const doc = getDocument(floating);\n    const previouslyFocusedElement = activeElement(doc);\n    const contextData = dataRef.current;\n    addPreviouslyFocusedElement(previouslyFocusedElement);\n\n    // Dismissing via outside press should always ignore `returnFocus` to\n    // prevent unwanted scrolling.\n    function onOpenChange(_ref) {\n      let {\n        reason,\n        event,\n        nested\n      } = _ref;\n      if (reason === 'escape-key' && refs.domReference.current) {\n        addPreviouslyFocusedElement(refs.domReference.current);\n      }\n      if (reason === 'hover' && event.type === 'mouseleave') {\n        preventReturnFocusRef.current = true;\n      }\n      if (reason !== 'outside-press') return;\n      if (nested) {\n        preventReturnFocusRef.current = false;\n        preventReturnFocusScroll = true;\n      } else {\n        preventReturnFocusRef.current = !(isVirtualClick(event) || isVirtualPointerEvent(event));\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n      const activeEl = activeElement(doc);\n      const isFocusInsideFloatingTree = contains(floating, activeEl) || tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n        var _node$context5;\n        return contains((_node$context5 = node.context) == null ? void 0 : _node$context5.elements.floating, activeEl);\n      });\n      const shouldFocusReference = isFocusInsideFloatingTree || contextData.openEvent && ['click', 'mousedown'].includes(contextData.openEvent.type);\n      if (shouldFocusReference && refs.domReference.current) {\n        addPreviouslyFocusedElement(refs.domReference.current);\n      }\n      const returnElement = getPreviouslyFocusedElement();\n      if (\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      returnFocusRef.current && !preventReturnFocusRef.current && isHTMLElement(returnElement) && (\n      // If the focus moved somewhere else after mount, avoid returning focus\n      // since it likely entered a different element which should be\n      // respected: https://github.com/floating-ui/floating-ui/issues/2607\n      returnElement !== activeEl && activeEl !== doc.body ? isFocusInsideFloatingTree : true)) {\n        enqueueFocus(returnElement, {\n          // When dismissing nested floating elements, by the time the rAF has\n          // executed, the menus will all have been unmounted. When they try\n          // to get focused, the calls get ignored — leaving the root\n          // reference focused as desired.\n          cancelPrevious: false,\n          preventScroll: preventReturnFocusScroll\n        });\n      }\n    };\n  }, [disabled, floating, returnFocusRef, dataRef, refs, events, tree, nodeId]);\n\n  // Synchronize the `context` & `modal` value to the FloatingPortal context.\n  // It will decide whether or not it needs to render its own guards.\n  index(() => {\n    if (disabled || !portalContext) return;\n    portalContext.setFocusManagerState({\n      modal,\n      closeOnFocusOut,\n      open,\n      onOpenChange,\n      refs\n    });\n    return () => {\n      portalContext.setFocusManagerState(null);\n    };\n  }, [disabled, portalContext, modal, open, onOpenChange, refs, closeOnFocusOut]);\n  index(() => {\n    if (disabled || !floating || typeof MutationObserver !== 'function' || ignoreInitialFocus) {\n      return;\n    }\n    const handleMutation = () => {\n      const tabIndex = floating.getAttribute('tabindex');\n      if (orderRef.current.includes('floating') || activeElement(getDocument(floating)) !== refs.domReference.current && getTabbableContent().length === 0) {\n        if (tabIndex !== '0') {\n          floating.setAttribute('tabindex', '0');\n        }\n      } else if (tabIndex !== '-1') {\n        floating.setAttribute('tabindex', '-1');\n      }\n    };\n    handleMutation();\n    const observer = new MutationObserver(handleMutation);\n    observer.observe(floating, {\n      childList: true,\n      subtree: true,\n      attributes: true\n    });\n    return () => {\n      observer.disconnect();\n    };\n  }, [disabled, floating, refs, orderRef, getTabbableContent, ignoreInitialFocus]);\n  function renderDismissButton(location) {\n    if (disabled || !visuallyHiddenDismiss || !modal) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(VisuallyHiddenDismiss, {\n      ref: location === 'start' ? startDismissButtonRef : endDismissButtonRef,\n      onClick: event => onOpenChange(false, event.nativeEvent)\n    }, typeof visuallyHiddenDismiss === 'string' ? visuallyHiddenDismiss : 'Dismiss');\n  }\n  const shouldRenderGuards = !disabled && guards && (isInsidePortal || modal);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.beforeInsideRef,\n    onFocus: event => {\n      if (modal) {\n        const els = getTabbableElements();\n        enqueueFocus(order[0] === 'reference' ? els[0] : els[els.length - 1]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        preventReturnFocusRef.current = false;\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const nextTabbable = getNextTabbable() || domReference;\n          nextTabbable == null || nextTabbable.focus();\n        } else {\n          var _portalContext$before;\n          (_portalContext$before = portalContext.beforeOutsideRef.current) == null || _portalContext$before.focus();\n        }\n      }\n    }\n  }), !isUntrappedTypeableCombobox && renderDismissButton('start'), children, renderDismissButton('end'), shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.afterInsideRef,\n    onFocus: event => {\n      if (modal) {\n        enqueueFocus(getTabbableElements()[0]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        if (closeOnFocusOut) {\n          preventReturnFocusRef.current = true;\n        }\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const prevTabbable = getPreviousTabbable() || domReference;\n          prevTabbable == null || prevTabbable.focus();\n        } else {\n          var _portalContext$afterO;\n          (_portalContext$afterO = portalContext.afterOutsideRef.current) == null || _portalContext$afterO.focus();\n        }\n      }\n    }\n  }));\n}\nfunction isButtonTarget(event) {\n  return isHTMLElement(event.target) && event.target.tagName === 'BUTTON';\n}\nfunction isSpaceIgnored(element) {\n  return isTypeableElement(element);\n}\n/**\n * Opens or closes the floating element when clicking the reference element.\n * @see https://floating-ui.com/docs/useClick\n */\nfunction useClick(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    elements: {\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    event: eventOption = 'click',\n    toggle = true,\n    ignoreMouse = false,\n    keyboardHandlers = true\n  } = props;\n  const pointerTypeRef = React.useRef();\n  const didKeyDownRef = React.useRef(false);\n  return React.useMemo(() => {\n    if (!enabled) return {};\n    return {\n      reference: {\n        onPointerDown(event) {\n          pointerTypeRef.current = event.pointerType;\n        },\n        onMouseDown(event) {\n          // Ignore all buttons except for the \"main\" button.\n          // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n          if (event.button !== 0) {\n            return;\n          }\n          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {\n            return;\n          }\n          if (eventOption === 'click') {\n            return;\n          }\n          if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'mousedown' : true)) {\n            onOpenChange(false, event.nativeEvent, 'click');\n          } else {\n            // Prevent stealing focus from the floating element\n            event.preventDefault();\n            onOpenChange(true, event.nativeEvent, 'click');\n          }\n        },\n        onClick(event) {\n          if (eventOption === 'mousedown' && pointerTypeRef.current) {\n            pointerTypeRef.current = undefined;\n            return;\n          }\n          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {\n            return;\n          }\n          if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'click' : true)) {\n            onOpenChange(false, event.nativeEvent, 'click');\n          } else {\n            onOpenChange(true, event.nativeEvent, 'click');\n          }\n        },\n        onKeyDown(event) {\n          pointerTypeRef.current = undefined;\n          if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event)) {\n            return;\n          }\n          if (event.key === ' ' && !isSpaceIgnored(domReference)) {\n            // Prevent scrolling\n            event.preventDefault();\n            didKeyDownRef.current = true;\n          }\n          if (event.key === 'Enter') {\n            if (open && toggle) {\n              onOpenChange(false, event.nativeEvent, 'click');\n            } else {\n              onOpenChange(true, event.nativeEvent, 'click');\n            }\n          }\n        },\n        onKeyUp(event) {\n          if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event) || isSpaceIgnored(domReference)) {\n            return;\n          }\n          if (event.key === ' ' && didKeyDownRef.current) {\n            didKeyDownRef.current = false;\n            if (open && toggle) {\n              onOpenChange(false, event.nativeEvent, 'click');\n            } else {\n              onOpenChange(true, event.nativeEvent, 'click');\n            }\n          }\n        }\n      }\n    };\n  }, [enabled, dataRef, eventOption, ignoreMouse, keyboardHandlers, domReference, toggle, open, onOpenChange]);\n}\nconst bubbleHandlerKeys = {\n  pointerdown: 'onPointerDown',\n  mousedown: 'onMouseDown',\n  click: 'onClick'\n};\nconst captureHandlerKeys = {\n  pointerdown: 'onPointerDownCapture',\n  mousedown: 'onMouseDownCapture',\n  click: 'onClickCapture'\n};\nconst normalizeProp = normalizable => {\n  var _normalizable$escapeK, _normalizable$outside;\n  return {\n    escapeKey: typeof normalizable === 'boolean' ? normalizable : (_normalizable$escapeK = normalizable == null ? void 0 : normalizable.escapeKey) != null ? _normalizable$escapeK : false,\n    outsidePress: typeof normalizable === 'boolean' ? normalizable : (_normalizable$outside = normalizable == null ? void 0 : normalizable.outsidePress) != null ? _normalizable$outside : true\n  };\n};\n/**\n * Closes the floating element when a dismissal is requested — by default, when\n * the user presses the `escape` key or outside of the floating element.\n * @see https://floating-ui.com/docs/useDismiss\n */\nfunction useDismiss(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    nodeId,\n    elements: {\n      reference,\n      domReference,\n      floating\n    },\n    dataRef\n  } = context;\n  const {\n    enabled = true,\n    escapeKey = true,\n    outsidePress: unstable_outsidePress = true,\n    outsidePressEvent = 'pointerdown',\n    referencePress = false,\n    referencePressEvent = 'pointerdown',\n    ancestorScroll = false,\n    bubbles,\n    capture\n  } = props;\n  const tree = useFloatingTree();\n  const outsidePressFn = useEffectEvent(typeof unstable_outsidePress === 'function' ? unstable_outsidePress : () => false);\n  const outsidePress = typeof unstable_outsidePress === 'function' ? outsidePressFn : unstable_outsidePress;\n  const insideReactTreeRef = React.useRef(false);\n  const endedOrStartedInsideRef = React.useRef(false);\n  const {\n    escapeKey: escapeKeyBubbles,\n    outsidePress: outsidePressBubbles\n  } = normalizeProp(bubbles);\n  const {\n    escapeKey: escapeKeyCapture,\n    outsidePress: outsidePressCapture\n  } = normalizeProp(capture);\n  const closeOnEscapeKeyDown = useEffectEvent(event => {\n    if (!open || !enabled || !escapeKey || event.key !== 'Escape') {\n      return;\n    }\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (!escapeKeyBubbles) {\n      event.stopPropagation();\n      if (children.length > 0) {\n        let shouldDismiss = true;\n        children.forEach(child => {\n          var _child$context;\n          if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {\n            shouldDismiss = false;\n            return;\n          }\n        });\n        if (!shouldDismiss) {\n          return;\n        }\n      }\n    }\n    onOpenChange(false, isReactEvent(event) ? event.nativeEvent : event, 'escape-key');\n  });\n  const closeOnEscapeKeyDownCapture = useEffectEvent(event => {\n    var _getTarget2;\n    const callback = () => {\n      var _getTarget;\n      closeOnEscapeKeyDown(event);\n      (_getTarget = getTarget(event)) == null || _getTarget.removeEventListener('keydown', callback);\n    };\n    (_getTarget2 = getTarget(event)) == null || _getTarget2.addEventListener('keydown', callback);\n  });\n  const closeOnPressOutside = useEffectEvent(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = insideReactTreeRef.current;\n    insideReactTreeRef.current = false;\n\n    // When click outside is lazy (`click` event), handle dragging.\n    // Don't close if:\n    // - The click started inside the floating element.\n    // - The click ended inside the floating element.\n    const endedOrStartedInside = endedOrStartedInsideRef.current;\n    endedOrStartedInsideRef.current = false;\n    if (outsidePressEvent === 'click' && endedOrStartedInside) {\n      return;\n    }\n    if (insideReactTree) {\n      return;\n    }\n    if (typeof outsidePress === 'function' && !outsidePress(event)) {\n      return;\n    }\n    const target = getTarget(event);\n    const inertSelector = \"[\" + createAttribute('inert') + \"]\";\n    const markers = getDocument(floating).querySelectorAll(inertSelector);\n    let targetRootAncestor = isElement(target) ? target : null;\n    while (targetRootAncestor && !isLastTraversableNode(targetRootAncestor)) {\n      const nextParent = getParentNode(targetRootAncestor);\n      if (isLastTraversableNode(nextParent) || !isElement(nextParent)) {\n        break;\n      }\n      targetRootAncestor = nextParent;\n    }\n\n    // Check if the click occurred on a third-party element injected after the\n    // floating element rendered.\n    if (markers.length && isElement(target) && !isRootElement(target) &&\n    // Clicked on a direct ancestor (e.g. FloatingOverlay).\n    !contains(target, floating) &&\n    // If the target root element contains none of the markers, then the\n    // element was injected after the floating element rendered.\n    Array.from(markers).every(marker => !contains(targetRootAncestor, marker))) {\n      return;\n    }\n\n    // Check if the click occurred on the scrollbar\n    if (isHTMLElement(target) && floating) {\n      // In Firefox, `target.scrollWidth > target.clientWidth` for inline\n      // elements.\n      const canScrollX = target.clientWidth > 0 && target.scrollWidth > target.clientWidth;\n      const canScrollY = target.clientHeight > 0 && target.scrollHeight > target.clientHeight;\n      let xCond = canScrollY && event.offsetX > target.clientWidth;\n\n      // In some browsers it is possible to change the <body> (or window)\n      // scrollbar to the left side, but is very rare and is difficult to\n      // check for. Plus, for modal dialogs with backdrops, it is more\n      // important that the backdrop is checked but not so much the window.\n      if (canScrollY) {\n        const isRTL = getComputedStyle(target).direction === 'rtl';\n        if (isRTL) {\n          xCond = event.offsetX <= target.offsetWidth - target.clientWidth;\n        }\n      }\n      if (xCond || canScrollX && event.offsetY > target.clientHeight) {\n        return;\n      }\n    }\n    const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n      var _node$context;\n      return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);\n    });\n    if (isEventTargetWithin(event, floating) || isEventTargetWithin(event, domReference) || targetIsInsideChildren) {\n      return;\n    }\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (children.length > 0) {\n      let shouldDismiss = true;\n      children.forEach(child => {\n        var _child$context2;\n        if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {\n          shouldDismiss = false;\n          return;\n        }\n      });\n      if (!shouldDismiss) {\n        return;\n      }\n    }\n    onOpenChange(false, event, 'outside-press');\n  });\n  const closeOnPressOutsideCapture = useEffectEvent(event => {\n    var _getTarget4;\n    const callback = () => {\n      var _getTarget3;\n      closeOnPressOutside(event);\n      (_getTarget3 = getTarget(event)) == null || _getTarget3.removeEventListener(outsidePressEvent, callback);\n    };\n    (_getTarget4 = getTarget(event)) == null || _getTarget4.addEventListener(outsidePressEvent, callback);\n  });\n  React.useEffect(() => {\n    if (!open || !enabled) {\n      return;\n    }\n    dataRef.current.__escapeKeyBubbles = escapeKeyBubbles;\n    dataRef.current.__outsidePressBubbles = outsidePressBubbles;\n    function onScroll(event) {\n      onOpenChange(false, event, 'ancestor-scroll');\n    }\n    const doc = getDocument(floating);\n    escapeKey && doc.addEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);\n    outsidePress && doc.addEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);\n    let ancestors = [];\n    if (ancestorScroll) {\n      if (isElement(domReference)) {\n        ancestors = getOverflowAncestors(domReference);\n      }\n      if (isElement(floating)) {\n        ancestors = ancestors.concat(getOverflowAncestors(floating));\n      }\n      if (!isElement(reference) && reference && reference.contextElement) {\n        ancestors = ancestors.concat(getOverflowAncestors(reference.contextElement));\n      }\n    }\n\n    // Ignore the visual viewport for scrolling dismissal (allow pinch-zoom)\n    ancestors = ancestors.filter(ancestor => {\n      var _doc$defaultView;\n      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);\n    });\n    ancestors.forEach(ancestor => {\n      ancestor.addEventListener('scroll', onScroll, {\n        passive: true\n      });\n    });\n    return () => {\n      escapeKey && doc.removeEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);\n      outsidePress && doc.removeEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);\n      ancestors.forEach(ancestor => {\n        ancestor.removeEventListener('scroll', onScroll);\n      });\n    };\n  }, [dataRef, floating, domReference, reference, escapeKey, outsidePress, outsidePressEvent, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, closeOnEscapeKeyDown, escapeKeyCapture, closeOnEscapeKeyDownCapture, closeOnPressOutside, outsidePressCapture, closeOnPressOutsideCapture]);\n  React.useEffect(() => {\n    insideReactTreeRef.current = false;\n  }, [outsidePress, outsidePressEvent]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        onKeyDown: closeOnEscapeKeyDown,\n        [bubbleHandlerKeys[referencePressEvent]]: event => {\n          if (referencePress) {\n            onOpenChange(false, event.nativeEvent, 'reference-press');\n          }\n        }\n      },\n      floating: {\n        onKeyDown: closeOnEscapeKeyDown,\n        onMouseDown() {\n          endedOrStartedInsideRef.current = true;\n        },\n        onMouseUp() {\n          endedOrStartedInsideRef.current = true;\n        },\n        [captureHandlerKeys[outsidePressEvent]]: () => {\n          insideReactTreeRef.current = true;\n        }\n      }\n    };\n  }, [enabled, referencePress, outsidePressEvent, referencePressEvent, onOpenChange, closeOnEscapeKeyDown]);\n}\n\n/**\n * Provides data to position a floating element and context to add interactions.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  var _options$elements;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    open = false,\n    onOpenChange: unstable_onOpenChange,\n    nodeId\n  } = options;\n  const [_domReference, setDomReference] = React.useState(null);\n  const [positionReference, _setPositionReference] = React.useState(null);\n  const optionDomReference = (_options$elements = options.elements) == null ? void 0 : _options$elements.reference;\n  const domReference = optionDomReference || _domReference;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (optionDomReference && !isElement(optionDomReference)) {\n      error('Cannot pass a virtual element to the `elements.reference` option,', 'as it must be a real DOM element. Use `refs.setPositionReference()`', 'instead.');\n    }\n  }\n  index(() => {\n    if (domReference) {\n      domReferenceRef.current = domReference;\n    }\n  }, [domReference]);\n  const position = useFloating$1({\n    ...options,\n    elements: {\n      ...options.elements,\n      ...(positionReference && {\n        reference: positionReference\n      })\n    }\n  });\n  const tree = useFloatingTree();\n  const nested = useFloatingParentNodeId() != null;\n  const onOpenChange = useEffectEvent((open, event, reason) => {\n    dataRef.current.openEvent = open ? event : undefined;\n    events.emit('openchange', {\n      open,\n      event,\n      reason,\n      nested\n    });\n    unstable_onOpenChange == null || unstable_onOpenChange(open, event, reason);\n  });\n  const domReferenceRef = React.useRef(null);\n  const dataRef = React.useRef({});\n  const events = React.useState(() => createPubSub())[0];\n  const floatingId = useId();\n  const setPositionReference = React.useCallback(node => {\n    const computedPositionReference = isElement(node) ? {\n      getBoundingClientRect: () => node.getBoundingClientRect(),\n      contextElement: node\n    } : node;\n    // Store the positionReference in state if the DOM reference is specified externally via the\n    // `elements.reference` option. This ensures that it won't be overridden on future renders.\n    _setPositionReference(computedPositionReference);\n    position.refs.setReference(computedPositionReference);\n  }, [position.refs]);\n  const setReference = React.useCallback(node => {\n    if (isElement(node) || node === null) {\n      domReferenceRef.current = node;\n      setDomReference(node);\n    }\n\n    // Backwards-compatibility for passing a virtual element to `reference`\n    // after it has set the DOM reference.\n    if (isElement(position.refs.reference.current) || position.refs.reference.current === null ||\n    // Don't allow setting virtual elements using the old technique back to\n    // `null` to support `positionReference` + an unstable `reference`\n    // callback ref.\n    node !== null && !isElement(node)) {\n      position.refs.setReference(node);\n    }\n  }, [position.refs]);\n  const refs = React.useMemo(() => ({\n    ...position.refs,\n    setReference,\n    setPositionReference,\n    domReference: domReferenceRef\n  }), [position.refs, setReference, setPositionReference]);\n  const elements = React.useMemo(() => ({\n    ...position.elements,\n    domReference: domReference\n  }), [position.elements, domReference]);\n  const context = React.useMemo(() => ({\n    ...position,\n    refs,\n    elements,\n    dataRef,\n    nodeId,\n    floatingId,\n    events,\n    open,\n    onOpenChange\n  }), [position, nodeId, floatingId, events, open, onOpenChange, refs, elements]);\n  index(() => {\n    const node = tree == null ? void 0 : tree.nodesRef.current.find(node => node.id === nodeId);\n    if (node) {\n      node.context = context;\n    }\n  });\n  return React.useMemo(() => ({\n    ...position,\n    context,\n    refs,\n    elements\n  }), [position, refs, elements, context]);\n}\n\n/**\n * Opens the floating element while the reference element has focus, like CSS\n * `:focus`.\n * @see https://floating-ui.com/docs/useFocus\n */\nfunction useFocus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    events,\n    refs,\n    elements: {\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    visibleOnly = true\n  } = props;\n  const blockFocusRef = React.useRef(false);\n  const timeoutRef = React.useRef();\n  const keyboardModalityRef = React.useRef(true);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    const win = getWindow(domReference);\n\n    // If the reference was focused and the user left the tab/window, and the\n    // floating element was not open, the focus should be blocked when they\n    // return to the tab/window.\n    function onBlur() {\n      if (!open && isHTMLElement(domReference) && domReference === activeElement(getDocument(domReference))) {\n        blockFocusRef.current = true;\n      }\n    }\n    function onKeyDown() {\n      keyboardModalityRef.current = true;\n    }\n    win.addEventListener('blur', onBlur);\n    win.addEventListener('keydown', onKeyDown, true);\n    return () => {\n      win.removeEventListener('blur', onBlur);\n      win.removeEventListener('keydown', onKeyDown, true);\n    };\n  }, [domReference, open, enabled]);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onOpenChange(_ref) {\n      let {\n        reason\n      } = _ref;\n      if (reason === 'reference-press' || reason === 'escape-key') {\n        blockFocusRef.current = true;\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n    };\n  }, [events, enabled]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        onPointerDown(event) {\n          if (isVirtualPointerEvent(event.nativeEvent)) return;\n          keyboardModalityRef.current = false;\n        },\n        onMouseLeave() {\n          blockFocusRef.current = false;\n        },\n        onFocus(event) {\n          if (blockFocusRef.current) return;\n          const target = getTarget(event.nativeEvent);\n          if (visibleOnly && isElement(target)) {\n            try {\n              // Mac Safari unreliably matches `:focus-visible` on the reference\n              // if focus was outside the page initially - use the fallback\n              // instead.\n              if (isSafari() && isMac()) throw Error();\n              if (!target.matches(':focus-visible')) return;\n            } catch (e) {\n              // Old browsers will throw an error when using `:focus-visible`.\n              if (!keyboardModalityRef.current && !isTypeableElement(target)) {\n                return;\n              }\n            }\n          }\n          onOpenChange(true, event.nativeEvent, 'focus');\n        },\n        onBlur(event) {\n          blockFocusRef.current = false;\n          const relatedTarget = event.relatedTarget;\n\n          // Hit the non-modal focus management portal guard. Focus will be\n          // moved into the floating element immediately after.\n          const movedToFocusGuard = isElement(relatedTarget) && relatedTarget.hasAttribute(createAttribute('focus-guard')) && relatedTarget.getAttribute('data-type') === 'outside';\n\n          // Wait for the window blur listener to fire.\n          timeoutRef.current = window.setTimeout(() => {\n            const activeEl = activeElement(domReference ? domReference.ownerDocument : document);\n\n            // Focus left the page, keep it open.\n            if (!relatedTarget && activeEl === domReference) return;\n\n            // When focusing the reference element (e.g. regular click), then\n            // clicking into the floating element, prevent it from hiding.\n            // Note: it must be focusable, e.g. `tabindex=\"-1\"`.\n            // We can not rely on relatedTarget to point to the correct element\n            // as it will only point to the shadow host of the newly focused element\n            // and not the element that actually has received focus if it is located\n            // inside a shadow root.\n            if (contains(refs.floating.current, activeEl) || contains(domReference, activeEl) || movedToFocusGuard) {\n              return;\n            }\n            onOpenChange(false, event.nativeEvent, 'focus');\n          });\n        }\n      }\n    };\n  }, [enabled, visibleOnly, domReference, refs, onOpenChange]);\n}\nconst ACTIVE_KEY = 'active';\nconst SELECTED_KEY = 'selected';\nfunction mergeProps(userProps, propsList, elementKey) {\n  const map = new Map();\n  const isItem = elementKey === 'item';\n  let domUserProps = userProps;\n  if (isItem && userProps) {\n    const {\n      [ACTIVE_KEY]: _,\n      [SELECTED_KEY]: __,\n      ...validProps\n    } = userProps;\n    domUserProps = validProps;\n  }\n  return {\n    ...(elementKey === 'floating' && {\n      tabIndex: -1\n    }),\n    ...domUserProps,\n    ...propsList.map(value => {\n      const propsOrGetProps = value ? value[elementKey] : null;\n      if (typeof propsOrGetProps === 'function') {\n        return userProps ? propsOrGetProps(userProps) : null;\n      }\n      return propsOrGetProps;\n    }).concat(userProps).reduce((acc, props) => {\n      if (!props) {\n        return acc;\n      }\n      Object.entries(props).forEach(_ref => {\n        let [key, value] = _ref;\n        if (isItem && [ACTIVE_KEY, SELECTED_KEY].includes(key)) {\n          return;\n        }\n        if (key.indexOf('on') === 0) {\n          if (!map.has(key)) {\n            map.set(key, []);\n          }\n          if (typeof value === 'function') {\n            var _map$get;\n            (_map$get = map.get(key)) == null || _map$get.push(value);\n            acc[key] = function () {\n              var _map$get2;\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n              return (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.map(fn => fn(...args)).find(val => val !== undefined);\n            };\n          }\n        } else {\n          acc[key] = value;\n        }\n      });\n      return acc;\n    }, {})\n  };\n}\n\n/**\n * Merges an array of interaction hooks' props into prop getters, allowing\n * event handler functions to be composed together without overwriting one\n * another.\n * @see https://floating-ui.com/docs/useInteractions\n */\nfunction useInteractions(propsList) {\n  if (propsList === void 0) {\n    propsList = [];\n  }\n  // The dependencies are a dynamic array, so we can't use the linter's\n  // suggestion to add it to the deps array.\n  const deps = propsList;\n  const getReferenceProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'reference'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n  const getFloatingProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'floating'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n  const getItemProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'item'),\n  // Granularly check for `item` changes, because the `getItemProps` getter\n  // should be as referentially stable as possible since it may be passed as\n  // a prop to many components. All `item` key values must therefore be\n  // memoized.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  propsList.map(key => key == null ? void 0 : key.item));\n  return React.useMemo(() => ({\n    getReferenceProps,\n    getFloatingProps,\n    getItemProps\n  }), [getReferenceProps, getFloatingProps, getItemProps]);\n}\nlet isPreventScrollSupported = false;\nfunction doSwitch(orientation, vertical, horizontal) {\n  switch (orientation) {\n    case 'vertical':\n      return vertical;\n    case 'horizontal':\n      return horizontal;\n    default:\n      return vertical || horizontal;\n  }\n}\nfunction isMainOrientationKey(key, orientation) {\n  const vertical = key === ARROW_UP || key === ARROW_DOWN;\n  const horizontal = key === ARROW_LEFT || key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isMainOrientationToEndKey(key, orientation, rtl) {\n  const vertical = key === ARROW_DOWN;\n  const horizontal = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal) || key === 'Enter' || key === ' ' || key === '';\n}\nfunction isCrossOrientationOpenKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  const horizontal = key === ARROW_DOWN;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isCrossOrientationCloseKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_RIGHT : key === ARROW_LEFT;\n  const horizontal = key === ARROW_UP;\n  return doSwitch(orientation, vertical, horizontal);\n}\n/**\n * Adds arrow key-based navigation of a list of items, either using real DOM\n * focus or virtual focus.\n * @see https://floating-ui.com/docs/useListNavigation\n */\nfunction useListNavigation(context, props) {\n  const {\n    open,\n    onOpenChange,\n    refs,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onNavigate: unstable_onNavigate = () => {},\n    enabled = true,\n    selectedIndex = null,\n    allowEscape = false,\n    loop = false,\n    nested = false,\n    rtl = false,\n    virtual = false,\n    focusItemOnOpen = 'auto',\n    focusItemOnHover = true,\n    openOnArrowKeyDown = true,\n    disabledIndices = undefined,\n    orientation = 'vertical',\n    cols = 1,\n    scrollItemIntoView = true,\n    virtualItemRef,\n    itemSizes,\n    dense = false\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (allowEscape) {\n      if (!loop) {\n        warn('`useListNavigation` looping must be enabled to allow escaping.');\n      }\n      if (!virtual) {\n        warn('`useListNavigation` must be virtual to allow escaping.');\n      }\n    }\n    if (orientation === 'vertical' && cols > 1) {\n      warn('In grid list navigation mode (`cols` > 1), the `orientation` should', 'be either \"horizontal\" or \"both\".');\n    }\n  }\n  const parentId = useFloatingParentNodeId();\n  const tree = useFloatingTree();\n  const onNavigate = useEffectEvent(unstable_onNavigate);\n  const focusItemOnOpenRef = React.useRef(focusItemOnOpen);\n  const indexRef = React.useRef(selectedIndex != null ? selectedIndex : -1);\n  const keyRef = React.useRef(null);\n  const isPointerModalityRef = React.useRef(true);\n  const previousOnNavigateRef = React.useRef(onNavigate);\n  const previousMountedRef = React.useRef(!!floating);\n  const forceSyncFocus = React.useRef(false);\n  const forceScrollIntoViewRef = React.useRef(false);\n  const disabledIndicesRef = useLatestRef(disabledIndices);\n  const latestOpenRef = useLatestRef(open);\n  const scrollItemIntoViewRef = useLatestRef(scrollItemIntoView);\n  const [activeId, setActiveId] = React.useState();\n  const [virtualId, setVirtualId] = React.useState();\n  const focusItem = useEffectEvent(function (listRef, indexRef, forceScrollIntoView) {\n    if (forceScrollIntoView === void 0) {\n      forceScrollIntoView = false;\n    }\n    const item = listRef.current[indexRef.current];\n    if (!item) return;\n    if (virtual) {\n      setActiveId(item.id);\n      tree == null || tree.events.emit('virtualfocus', item);\n      if (virtualItemRef) {\n        virtualItemRef.current = item;\n      }\n    } else {\n      enqueueFocus(item, {\n        preventScroll: true,\n        // Mac Safari does not move the virtual cursor unless the focus call\n        // is sync. However, for the very first focus call, we need to wait\n        // for the position to be ready in order to prevent unwanted\n        // scrolling. This means the virtual cursor will not move to the first\n        // item when first opening the floating element, but will on\n        // subsequent calls. `preventScroll` is supported in modern Safari,\n        // so we can use that instead.\n        // iOS Safari must be async or the first item will not be focused.\n        sync: isMac() && isSafari() ? isPreventScrollSupported || forceSyncFocus.current : false\n      });\n    }\n    requestAnimationFrame(() => {\n      const scrollIntoViewOptions = scrollItemIntoViewRef.current;\n      const shouldScrollIntoView = scrollIntoViewOptions && item && (forceScrollIntoView || !isPointerModalityRef.current);\n      if (shouldScrollIntoView) {\n        // JSDOM doesn't support `.scrollIntoView()` but it's widely supported\n        // by all browsers.\n        item.scrollIntoView == null || item.scrollIntoView(typeof scrollIntoViewOptions === 'boolean' ? {\n          block: 'nearest',\n          inline: 'nearest'\n        } : scrollIntoViewOptions);\n      }\n    });\n  });\n  index(() => {\n    document.createElement('div').focus({\n      get preventScroll() {\n        isPreventScrollSupported = true;\n        return false;\n      }\n    });\n  }, []);\n\n  // Sync `selectedIndex` to be the `activeIndex` upon opening the floating\n  // element. Also, reset `activeIndex` upon closing the floating element.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (open && floating) {\n      if (focusItemOnOpenRef.current && selectedIndex != null) {\n        // Regardless of the pointer modality, we want to ensure the selected\n        // item comes into view when the floating element is opened.\n        forceScrollIntoViewRef.current = true;\n        indexRef.current = selectedIndex;\n        onNavigate(selectedIndex);\n      }\n    } else if (previousMountedRef.current) {\n      // Since the user can specify `onNavigate` conditionally\n      // (onNavigate: open ? setActiveIndex : setSelectedIndex),\n      // we store and call the previous function.\n      indexRef.current = -1;\n      previousOnNavigateRef.current(null);\n    }\n  }, [enabled, open, floating, selectedIndex, onNavigate]);\n\n  // Sync `activeIndex` to be the focused item while the floating element is\n  // open.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (open && floating) {\n      if (activeIndex == null) {\n        forceSyncFocus.current = false;\n        if (selectedIndex != null) {\n          return;\n        }\n\n        // Reset while the floating element was open (e.g. the list changed).\n        if (previousMountedRef.current) {\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n        }\n\n        // Initial sync.\n        if (!previousMountedRef.current && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === true && keyRef.current == null)) {\n          let runs = 0;\n          const waitForListPopulated = () => {\n            if (listRef.current[0] == null) {\n              // Avoid letting the browser paint if possible on the first try,\n              // otherwise use rAF. Don't try more than twice, since something\n              // is wrong otherwise.\n              if (runs < 2) {\n                const scheduler = runs ? requestAnimationFrame : queueMicrotask;\n                scheduler(waitForListPopulated);\n              }\n              runs++;\n            } else {\n              indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current);\n              keyRef.current = null;\n              onNavigate(indexRef.current);\n            }\n          };\n          waitForListPopulated();\n        }\n      } else if (!isIndexOutOfBounds(listRef, activeIndex)) {\n        indexRef.current = activeIndex;\n        focusItem(listRef, indexRef, forceScrollIntoViewRef.current);\n        forceScrollIntoViewRef.current = false;\n      }\n    }\n  }, [enabled, open, floating, activeIndex, selectedIndex, nested, listRef, orientation, rtl, onNavigate, focusItem, disabledIndicesRef]);\n\n  // Ensure the parent floating element has focus when a nested child closes\n  // to allow arrow key navigation to work after the pointer leaves the child.\n  index(() => {\n    var _nodes$find;\n    if (!enabled || floating || !tree || virtual || !previousMountedRef.current) {\n      return;\n    }\n    const nodes = tree.nodesRef.current;\n    const parent = (_nodes$find = nodes.find(node => node.id === parentId)) == null || (_nodes$find = _nodes$find.context) == null ? void 0 : _nodes$find.elements.floating;\n    const activeEl = activeElement(getDocument(floating));\n    const treeContainsActiveEl = nodes.some(node => node.context && contains(node.context.elements.floating, activeEl));\n    if (parent && !treeContainsActiveEl && isPointerModalityRef.current) {\n      parent.focus({\n        preventScroll: true\n      });\n    }\n  }, [enabled, floating, tree, parentId, virtual]);\n  index(() => {\n    if (!enabled || !tree || !virtual || parentId) return;\n    function handleVirtualFocus(item) {\n      setVirtualId(item.id);\n      if (virtualItemRef) {\n        virtualItemRef.current = item;\n      }\n    }\n    tree.events.on('virtualfocus', handleVirtualFocus);\n    return () => {\n      tree.events.off('virtualfocus', handleVirtualFocus);\n    };\n  }, [enabled, tree, virtual, parentId, virtualItemRef]);\n  index(() => {\n    previousOnNavigateRef.current = onNavigate;\n    previousMountedRef.current = !!floating;\n  });\n  index(() => {\n    if (!open) {\n      keyRef.current = null;\n    }\n  }, [open]);\n  const hasActiveIndex = activeIndex != null;\n  const item = React.useMemo(() => {\n    function syncCurrentTarget(currentTarget) {\n      if (!open) return;\n      const index = listRef.current.indexOf(currentTarget);\n      if (index !== -1) {\n        onNavigate(index);\n      }\n    }\n    const props = {\n      onFocus(_ref) {\n        let {\n          currentTarget\n        } = _ref;\n        syncCurrentTarget(currentTarget);\n      },\n      onClick: _ref2 => {\n        let {\n          currentTarget\n        } = _ref2;\n        return currentTarget.focus({\n          preventScroll: true\n        });\n      },\n      // Safari\n      ...(focusItemOnHover && {\n        onMouseMove(_ref3) {\n          let {\n            currentTarget\n          } = _ref3;\n          syncCurrentTarget(currentTarget);\n        },\n        onPointerLeave(_ref4) {\n          let {\n            pointerType\n          } = _ref4;\n          if (!isPointerModalityRef.current || pointerType === 'touch') {\n            return;\n          }\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n          onNavigate(null);\n          if (!virtual) {\n            enqueueFocus(refs.floating.current, {\n              preventScroll: true\n            });\n          }\n        }\n      })\n    };\n    return props;\n  }, [open, refs, focusItem, focusItemOnHover, listRef, onNavigate, virtual]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    const disabledIndices = disabledIndicesRef.current;\n    function onKeyDown(event) {\n      isPointerModalityRef.current = false;\n      forceSyncFocus.current = true;\n\n      // If the floating element is animating out, ignore navigation. Otherwise,\n      // the `activeIndex` gets set to 0 despite not being open so the next time\n      // the user ArrowDowns, the first item won't be focused.\n      if (!latestOpenRef.current && event.currentTarget === refs.floating.current) {\n        return;\n      }\n      if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl)) {\n        stopEvent(event);\n        onOpenChange(false, event.nativeEvent, 'list-navigation');\n        if (isHTMLElement(domReference) && !virtual) {\n          domReference.focus();\n        }\n        return;\n      }\n      const currentIndex = indexRef.current;\n      const minIndex = getMinIndex(listRef, disabledIndices);\n      const maxIndex = getMaxIndex(listRef, disabledIndices);\n      if (event.key === 'Home') {\n        stopEvent(event);\n        indexRef.current = minIndex;\n        onNavigate(indexRef.current);\n      }\n      if (event.key === 'End') {\n        stopEvent(event);\n        indexRef.current = maxIndex;\n        onNavigate(indexRef.current);\n      }\n\n      // Grid navigation.\n      if (cols > 1) {\n        const sizes = itemSizes || Array.from({\n          length: listRef.current.length\n        }, () => ({\n          width: 1,\n          height: 1\n        }));\n        // To calculate movements on the grid, we use hypothetical cell indices\n        // as if every item was 1x1, then convert back to real indices.\n        const cellMap = buildCellMap(sizes, cols, dense);\n        const minGridIndex = cellMap.findIndex(index => index != null && !(disabledIndices != null && disabledIndices.includes(index)));\n        // last enabled index\n        const maxGridIndex = cellMap.reduce((foundIndex, index, cellIndex) => index != null && !(disabledIndices != null && disabledIndices.includes(index)) ? cellIndex : foundIndex, -1);\n        indexRef.current = cellMap[getGridNavigatedIndex({\n          current: cellMap.map(itemIndex => itemIndex != null ? listRef.current[itemIndex] : null)\n        }, {\n          event,\n          orientation,\n          loop,\n          cols,\n          // treat undefined (empty grid spaces) as disabled indices so we\n          // don't end up in them\n          disabledIndices: getCellIndices([...(disabledIndices || []), undefined], cellMap),\n          minIndex: minGridIndex,\n          maxIndex: maxGridIndex,\n          prevIndex: getCellIndexOfCorner(indexRef.current, sizes, cellMap, cols,\n          // use a corner matching the edge closest to the direction\n          // we're moving in so we don't end up in the same item. Prefer\n          // top/left over bottom/right.\n          event.key === ARROW_DOWN ? 'bl' : event.key === ARROW_RIGHT ? 'tr' : 'tl'),\n          stopEvent: true\n        })]; // navigated cell will never be nullish\n\n        onNavigate(indexRef.current);\n        if (orientation === 'both') {\n          return;\n        }\n      }\n      if (isMainOrientationKey(event.key, orientation)) {\n        stopEvent(event);\n\n        // Reset the index if no item is focused.\n        if (open && !virtual && activeElement(event.currentTarget.ownerDocument) === event.currentTarget) {\n          indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex;\n          onNavigate(indexRef.current);\n          return;\n        }\n        if (isMainOrientationToEndKey(event.key, orientation, rtl)) {\n          if (loop) {\n            indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              disabledIndices\n            });\n          } else {\n            indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              disabledIndices\n            }));\n          }\n        } else {\n          if (loop) {\n            indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              decrement: true,\n              disabledIndices\n            });\n          } else {\n            indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              decrement: true,\n              disabledIndices\n            }));\n          }\n        }\n        if (isIndexOutOfBounds(listRef, indexRef.current)) {\n          onNavigate(null);\n        } else {\n          onNavigate(indexRef.current);\n        }\n      }\n    }\n    function checkVirtualMouse(event) {\n      if (focusItemOnOpen === 'auto' && isVirtualClick(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    function checkVirtualPointer(event) {\n      // `pointerdown` fires first, reset the state then perform the checks.\n      focusItemOnOpenRef.current = focusItemOnOpen;\n      if (focusItemOnOpen === 'auto' && isVirtualPointerEvent(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    const ariaActiveDescendantProp = virtual && open && hasActiveIndex && {\n      'aria-activedescendant': virtualId || activeId\n    };\n    const activeItem = listRef.current.find(item => (item == null ? void 0 : item.id) === activeId);\n    return {\n      reference: {\n        ...ariaActiveDescendantProp,\n        onKeyDown(event) {\n          isPointerModalityRef.current = false;\n          const isArrowKey = event.key.indexOf('Arrow') === 0;\n          const isCrossOpenKey = isCrossOrientationOpenKey(event.key, orientation, rtl);\n          const isCrossCloseKey = isCrossOrientationCloseKey(event.key, orientation, rtl);\n          const isMainKey = isMainOrientationKey(event.key, orientation);\n          const isNavigationKey = (nested ? isCrossOpenKey : isMainKey) || event.key === 'Enter' || event.key.trim() === '';\n          if (virtual && open) {\n            const rootNode = tree == null ? void 0 : tree.nodesRef.current.find(node => node.parentId == null);\n            const deepestNode = tree && rootNode ? getDeepestNode(tree.nodesRef.current, rootNode.id) : null;\n            if (isArrowKey && deepestNode && virtualItemRef) {\n              const eventObject = new KeyboardEvent('keydown', {\n                key: event.key,\n                bubbles: true\n              });\n              if (isCrossOpenKey || isCrossCloseKey) {\n                var _deepestNode$context, _deepestNode$context2;\n                const isCurrentTarget = ((_deepestNode$context = deepestNode.context) == null ? void 0 : _deepestNode$context.elements.domReference) === event.currentTarget;\n                const dispatchItem = isCrossCloseKey && !isCurrentTarget ? (_deepestNode$context2 = deepestNode.context) == null ? void 0 : _deepestNode$context2.elements.domReference : isCrossOpenKey ? activeItem : null;\n                if (dispatchItem) {\n                  stopEvent(event);\n                  dispatchItem.dispatchEvent(eventObject);\n                  setVirtualId(undefined);\n                }\n              }\n              if (isMainKey && deepestNode.context) {\n                if (deepestNode.context.open && deepestNode.parentId && event.currentTarget !== deepestNode.context.elements.domReference) {\n                  var _deepestNode$context$;\n                  stopEvent(event);\n                  (_deepestNode$context$ = deepestNode.context.elements.domReference) == null || _deepestNode$context$.dispatchEvent(eventObject);\n                  return;\n                }\n              }\n            }\n            return onKeyDown(event);\n          }\n\n          // If a floating element should not open on arrow key down, avoid\n          // setting `activeIndex` while it's closed.\n          if (!open && !openOnArrowKeyDown && isArrowKey) {\n            return;\n          }\n          if (isNavigationKey) {\n            keyRef.current = nested && isMainKey ? null : event.key;\n          }\n          if (nested) {\n            if (isCrossOpenKey) {\n              stopEvent(event);\n              if (open) {\n                indexRef.current = getMinIndex(listRef, disabledIndices);\n                onNavigate(indexRef.current);\n              } else {\n                onOpenChange(true, event.nativeEvent, 'list-navigation');\n              }\n            }\n            return;\n          }\n          if (isMainKey) {\n            if (selectedIndex != null) {\n              indexRef.current = selectedIndex;\n            }\n            stopEvent(event);\n            if (!open && openOnArrowKeyDown) {\n              onOpenChange(true, event.nativeEvent, 'list-navigation');\n            } else {\n              onKeyDown(event);\n            }\n            if (open) {\n              onNavigate(indexRef.current);\n            }\n          }\n        },\n        onFocus() {\n          if (open) {\n            onNavigate(null);\n          }\n        },\n        onPointerDown: checkVirtualPointer,\n        onMouseDown: checkVirtualMouse,\n        onClick: checkVirtualMouse\n      },\n      floating: {\n        'aria-orientation': orientation === 'both' ? undefined : orientation,\n        ...(!isTypeableCombobox(domReference) && ariaActiveDescendantProp),\n        onKeyDown,\n        onPointerMove() {\n          isPointerModalityRef.current = true;\n        }\n      },\n      item\n    };\n  }, [domReference, refs, activeId, virtualId, disabledIndicesRef, latestOpenRef, listRef, enabled, orientation, rtl, virtual, open, hasActiveIndex, nested, selectedIndex, openOnArrowKeyDown, allowEscape, cols, loop, focusItemOnOpen, onNavigate, onOpenChange, item, tree, virtualItemRef, itemSizes, dense]);\n}\nconst componentRoleToAriaRoleMap = /*#__PURE__*/new Map([['select', 'listbox'], ['combobox', 'listbox'], ['label', false]]);\n\n/**\n * Adds base screen reader props to the reference and floating elements for a\n * given floating element `role`.\n * @see https://floating-ui.com/docs/useRole\n */\nfunction useRole(context, props) {\n  var _componentRoleToAriaR;\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    floatingId\n  } = context;\n  const {\n    enabled = true,\n    role = 'dialog'\n  } = props;\n  const ariaRole = (_componentRoleToAriaR = componentRoleToAriaRoleMap.get(role)) != null ? _componentRoleToAriaR : role;\n  const referenceId = useId();\n  const parentId = useFloatingParentNodeId();\n  const isNested = parentId != null;\n  return React.useMemo(() => {\n    if (!enabled) return {};\n    const floatingProps = {\n      id: floatingId,\n      ...(ariaRole && {\n        role: ariaRole\n      })\n    };\n    if (ariaRole === 'tooltip' || role === 'label') {\n      return {\n        reference: {\n          [\"aria-\" + (role === 'label' ? 'labelledby' : 'describedby')]: open ? floatingId : undefined\n        },\n        floating: floatingProps\n      };\n    }\n    return {\n      reference: {\n        'aria-expanded': open ? 'true' : 'false',\n        'aria-haspopup': ariaRole === 'alertdialog' ? 'dialog' : ariaRole,\n        'aria-controls': open ? floatingId : undefined,\n        ...(ariaRole === 'listbox' && {\n          role: 'combobox'\n        }),\n        ...(ariaRole === 'menu' && {\n          id: referenceId\n        }),\n        ...(ariaRole === 'menu' && isNested && {\n          role: 'menuitem'\n        }),\n        ...(role === 'select' && {\n          'aria-autocomplete': 'none'\n        }),\n        ...(role === 'combobox' && {\n          'aria-autocomplete': 'list'\n        })\n      },\n      floating: {\n        ...floatingProps,\n        ...(ariaRole === 'menu' && {\n          'aria-labelledby': referenceId\n        })\n      },\n      item(_ref) {\n        let {\n          active,\n          selected\n        } = _ref;\n        const commonProps = {\n          role: 'option',\n          ...(active && {\n            id: floatingId + \"-option\"\n          })\n        };\n\n        // For `menu`, we are unable to tell if the item is a `menuitemradio`\n        // or `menuitemcheckbox`. For backwards-compatibility reasons, also\n        // avoid defaulting to `menuitem` as it may overwrite custom role props.\n        switch (role) {\n          case 'select':\n            return {\n              ...commonProps,\n              'aria-selected': active && selected\n            };\n          case 'combobox':\n            {\n              return {\n                ...commonProps,\n                ...(active && {\n                  'aria-selected': true\n                })\n              };\n            }\n        }\n        return {};\n      }\n    };\n  }, [enabled, role, ariaRole, open, floatingId, referenceId, isNested]);\n}\n\n// Converts a JS style key like `backgroundColor` to a CSS transition-property\n// like `background-color`.\nconst camelCaseToKebabCase = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase());\nfunction execWithArgsOrReturn(valueOrFn, args) {\n  return typeof valueOrFn === 'function' ? valueOrFn(args) : valueOrFn;\n}\nfunction useDelayUnmount(open, durationMs) {\n  const [isMounted, setIsMounted] = React.useState(open);\n  if (open && !isMounted) {\n    setIsMounted(true);\n  }\n  React.useEffect(() => {\n    if (!open) {\n      const timeout = setTimeout(() => setIsMounted(false), durationMs);\n      return () => clearTimeout(timeout);\n    }\n  }, [open, durationMs]);\n  return isMounted;\n}\n/**\n * Provides a status string to apply CSS transitions to a floating element,\n * correctly handling placement-aware transitions.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstatus\n */\nfunction useTransitionStatus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    elements: {\n      floating\n    }\n  } = context;\n  const {\n    duration = 250\n  } = props;\n  const isNumberDuration = typeof duration === 'number';\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [initiated, setInitiated] = React.useState(false);\n  const [status, setStatus] = React.useState('unmounted');\n  const isMounted = useDelayUnmount(open, closeDuration);\n\n  // `initiated` check prevents this `setState` call from breaking\n  // <FloatingPortal />. This call is necessary to ensure subsequent opens\n  // after the initial one allows the correct side animation to play when the\n  // placement has changed.\n  index(() => {\n    if (initiated && !isMounted) {\n      setStatus('unmounted');\n    }\n  }, [initiated, isMounted]);\n  index(() => {\n    if (!floating) return;\n    if (open) {\n      setStatus('initial');\n      const frame = requestAnimationFrame(() => {\n        setStatus('open');\n      });\n      return () => {\n        cancelAnimationFrame(frame);\n      };\n    }\n    setInitiated(true);\n    setStatus('close');\n  }, [open, floating]);\n  return {\n    isMounted,\n    status\n  };\n}\n/**\n * Provides styles to apply CSS transitions to a floating element, correctly\n * handling placement-aware transitions. Wrapper around `useTransitionStatus`.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstyles\n */\nfunction useTransitionStyles(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    initial: unstable_initial = {\n      opacity: 0\n    },\n    open: unstable_open,\n    close: unstable_close,\n    common: unstable_common,\n    duration = 250\n  } = props;\n  const placement = context.placement;\n  const side = placement.split('-')[0];\n  const fnArgs = React.useMemo(() => ({\n    side,\n    placement\n  }), [side, placement]);\n  const isNumberDuration = typeof duration === 'number';\n  const openDuration = (isNumberDuration ? duration : duration.open) || 0;\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [styles, setStyles] = React.useState(() => ({\n    ...execWithArgsOrReturn(unstable_common, fnArgs),\n    ...execWithArgsOrReturn(unstable_initial, fnArgs)\n  }));\n  const {\n    isMounted,\n    status\n  } = useTransitionStatus(context, {\n    duration\n  });\n  const initialRef = useLatestRef(unstable_initial);\n  const openRef = useLatestRef(unstable_open);\n  const closeRef = useLatestRef(unstable_close);\n  const commonRef = useLatestRef(unstable_common);\n  index(() => {\n    const initialStyles = execWithArgsOrReturn(initialRef.current, fnArgs);\n    const closeStyles = execWithArgsOrReturn(closeRef.current, fnArgs);\n    const commonStyles = execWithArgsOrReturn(commonRef.current, fnArgs);\n    const openStyles = execWithArgsOrReturn(openRef.current, fnArgs) || Object.keys(initialStyles).reduce((acc, key) => {\n      acc[key] = '';\n      return acc;\n    }, {});\n    if (status === 'initial') {\n      setStyles(styles => ({\n        transitionProperty: styles.transitionProperty,\n        ...commonStyles,\n        ...initialStyles\n      }));\n    }\n    if (status === 'open') {\n      setStyles({\n        transitionProperty: Object.keys(openStyles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: openDuration + \"ms\",\n        ...commonStyles,\n        ...openStyles\n      });\n    }\n    if (status === 'close') {\n      const styles = closeStyles || initialStyles;\n      setStyles({\n        transitionProperty: Object.keys(styles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: closeDuration + \"ms\",\n        ...commonStyles,\n        ...styles\n      });\n    }\n  }, [closeDuration, closeRef, initialRef, openRef, commonRef, openDuration, status, fnArgs]);\n  return {\n    isMounted,\n    styles\n  };\n}\nexport { FloatingArrow, FloatingFocusManager, FloatingPortal, getOverflowAncestors, platform, useClick, useDismiss, useFloating, useFloatingParentNodeId, useFloatingPortalNode, useFloatingTree, useFocus, useHover, useId, useInteractions, useListNavigation, useMergeRefs, useRole, useTransitionStatus, useTransitionStyles };","map":{"version":3,"names":["React","useLayoutEffect","useEffect","useRef","getDocument","isMouseLikePointerType","isTypeableCombobox","activeElement","contains","isVirtualClick","isVirtualPointerEvent","getTarget","isSafari","isMac","isTypeableElement","stopEvent","isReactEvent","isRootElement","isEventTargetWithin","floor","useFloating","useFloating$1","arrow","isElement","isHTMLElement","getOverflowAncestors","getWindow","getNodeName","isLastTraversableNode","getParentNode","getComputedStyle","tabbable","isTabbable","createPortal","platform","autoUpdate","computePosition","flip","shift","size","useMergeRefs","refs","useMemo","every","ref","value","forEach","current","SafeReact","useInsertionEffect","useSafeInsertionEffect","fn","useEffectEvent","callback","process","env","NODE_ENV","Error","useCallback","_len","arguments","length","args","Array","_key","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","isDifferentRow","index","cols","prevRow","Math","isIndexOutOfBounds","listRef","getMinIndex","disabledIndices","findNonDisabledIndex","getMaxIndex","decrement","startingIndex","_temp","amount","list","isDisabledIndex","includes","element","hasAttribute","getAttribute","getGridNavigatedIndex","elementsRef","_ref","event","orientation","loop","minIndex","maxIndex","prevIndex","stop","nextIndex","key","col","maxCol","offset","lastRow","buildCellMap","sizes","dense","cellMap","startIndex","_ref2","width","height","itemPlaced","targetCells","i","j","push","cell","getCellIndexOfCorner","corner","firstCellIndex","indexOf","lastIndexOf","getCellIndices","indices","flatMap","cellIndex","rafId","enqueueFocus","el","options","preventScroll","cancelPrevious","sync","cancelAnimationFrame","exec","focus","requestAnimationFrame","document","_extends","Object","assign","bind","target","source","prototype","hasOwnProperty","call","apply","serverHandoffComplete","count","genId","random","toString","slice","useFloatingId","id","setId","useState","undefined","useReactId","useId","devMessageSet","Set","warn","_devMessageSet","messages","message","join","has","_devMessageSet2","add","console","error","_devMessageSet3","_len2","_key2","_devMessageSet4","FloatingArrow","forwardRef","props","context","placement","elements","floating","middlewareData","tipRadius","strokeWidth","staticOffset","stroke","d","style","transform","restStyle","rest","clipPathId","computedStrokeWidth","halfStrokeWidth","svgX","svgY","side","alignment","split","isRTL","isCustomShape","isVerticalSide","yOffsetProp","xOffsetProp","arrowX","x","arrowY","y","dValue","rotation","top","left","bottom","right","createElement","viewBox","position","pointerEvents","clipPath","fill","createPubSub","map","Map","emit","data","_map$get","get","handler","on","listener","set","off","_map$get2","filter","l","FloatingNodeContext","createContext","FloatingTreeContext","useFloatingParentNodeId","_React$useContext","useContext","useFloatingTree","createAttribute","name","useLatestRef","safePolygonIdentifier","getDelay","prop","pointerType","useHover","open","onOpenChange","dataRef","events","domReference","enabled","delay","handleClose","mouseOnly","restMs","move","tree","parentId","handleCloseRef","delayRef","pointerTypeRef","timeoutRef","handlerRef","restTimeoutRef","blockMouseMoveRef","performedPointerEventsMutationRef","unbindMouseMoveRef","isHoverOpen","_dataRef$current$open","type","openEvent","clearTimeout","onLeave","html","documentElement","addEventListener","removeEventListener","closeWithDelay","runElseBranch","reason","closeDelay","setTimeout","cleanupMouseMoveHandler","clearPointerEvents","body","removeAttribute","isClickLikeOpenEvent","onMouseEnter","openDelay","onMouseLeave","doc","clientX","clientY","onClose","shouldClose","relatedTarget","onScrollMouseLeave","once","_handleCloseRef$curre","__options","blockPointerEvents","setAttribute","_tree$nodesRef$curren","parentFloating","nodesRef","find","node","setPointerRef","reference","onPointerDown","onPointerEnter","onMouseMove","handleMouseMove","nativeEvent","getAncestors","nodes","_nodes$find","allAncestors","currentParentId","currentNode","concat","getChildren","allChildren","_node$context","currentChildren","_currentChildren","some","n","_node$context2","getDeepestNode","deepestNodeId","maxDepth","findDeepest","nodeId","depth","children","child","counterMap","WeakMap","uncontrolledElementsSet","WeakSet","markerMap","lockCount","supportsInert","HTMLElement","unwrapHost","host","parentNode","correctElements","parent","targets","correctedTarget","applyAttributeToOthers","uncorrectedAvoidElements","ariaHidden","inert","markerName","controlAttribute","avoidElements","elementsToKeep","elementsToStop","hiddenElements","markerCounter","keep","deep","clear","attr","alreadyHidden","counterValue","markerValue","delete","markOthers","from","querySelectorAll","getTabbableOptions","getShadowRoot","displayCheck","ResizeObserver","getTabbableIn","container","direction","allTabbable","reverse","activeIndex","nextTabbableElements","getNextTabbable","getPreviousTabbable","isOutsideEvent","containerElement","currentTarget","disableFocusInside","tabbableElements","dataset","tabindex","enableFocusInside","HIDDEN_STYLES","border","clip","margin","overflow","padding","whiteSpace","timeoutId","setActiveElementOnTab","FocusGuard","role","setRole","restProps","tabIndex","PortalContext","useFloatingPortalNode","root","uniqueId","portalContext","usePortalContext","portalNode","setPortalNode","portalNodeRef","remove","queueMicrotask","existingIdRoot","getElementById","subRoot","appendChild","idWrapper","FloatingPortal","preserveTabOrder","focusManagerState","setFocusManagerState","beforeOutsideRef","afterOutsideRef","beforeInsideRef","afterInsideRef","shouldRenderGuards","modal","onFocus","focusing","manageFocus","Provider","_beforeInsideRef$curr","prevTabbable","_afterInsideRef$curre","nextTabbable","closeOnFocusOut","LIST_LIMIT","previouslyFocusedElements","addPreviouslyFocusedElement","isConnected","tabbableEl","tabbableChild","getPreviouslyFocusedElement","VisuallyHiddenDismiss","FloatingFocusManager","disabled","order","guards","_guards","initialFocus","returnFocus","visuallyHiddenDismiss","ignoreInitialFocus","isUntrappedTypeableCombobox","orderRef","initialFocusRef","returnFocusRef","startDismissButtonRef","endDismissButtonRef","preventReturnFocusRef","isPointerDownRef","isInsidePortal","getTabbableContent","getTabbableElements","content","Boolean","flat","onKeyDown","els","shiftKey","handlePointerDown","handleFocusOutside","movedToUnrelatedNode","_node$context3","_node$context4","_portalContext$portal","portalNodes","insideElements","cleanup","previouslyFocusedElement","focusableElements","initialFocusValue","elToFocus","focusAlreadyInsideFloatingEl","preventReturnFocusScroll","contextData","nested","activeEl","isFocusInsideFloatingTree","_node$context5","shouldFocusReference","returnElement","MutationObserver","handleMutation","observer","observe","childList","subtree","attributes","disconnect","renderDismissButton","location","onClick","Fragment","_portalContext$before","_portalContext$afterO","isButtonTarget","tagName","isSpaceIgnored","useClick","eventOption","toggle","ignoreMouse","keyboardHandlers","didKeyDownRef","onMouseDown","button","preventDefault","defaultPrevented","onKeyUp","bubbleHandlerKeys","pointerdown","mousedown","click","captureHandlerKeys","normalizeProp","normalizable","_normalizable$escapeK","_normalizable$outside","escapeKey","outsidePress","useDismiss","unstable_outsidePress","outsidePressEvent","referencePress","referencePressEvent","ancestorScroll","bubbles","capture","outsidePressFn","insideReactTreeRef","endedOrStartedInsideRef","escapeKeyBubbles","outsidePressBubbles","escapeKeyCapture","outsidePressCapture","closeOnEscapeKeyDown","stopPropagation","shouldDismiss","_child$context","__escapeKeyBubbles","closeOnEscapeKeyDownCapture","_getTarget2","_getTarget","closeOnPressOutside","insideReactTree","endedOrStartedInside","inertSelector","markers","targetRootAncestor","nextParent","marker","canScrollX","clientWidth","scrollWidth","canScrollY","clientHeight","scrollHeight","xCond","offsetX","offsetWidth","offsetY","targetIsInsideChildren","_child$context2","__outsidePressBubbles","closeOnPressOutsideCapture","_getTarget4","_getTarget3","onScroll","ancestors","contextElement","ancestor","_doc$defaultView","defaultView","visualViewport","passive","onMouseUp","_options$elements","unstable_onOpenChange","_domReference","setDomReference","positionReference","_setPositionReference","optionDomReference","domReferenceRef","floatingId","setPositionReference","computedPositionReference","getBoundingClientRect","setReference","useFocus","visibleOnly","blockFocusRef","keyboardModalityRef","win","onBlur","matches","e","movedToFocusGuard","window","ownerDocument","ACTIVE_KEY","SELECTED_KEY","mergeProps","userProps","propsList","elementKey","isItem","domUserProps","_","__","validProps","propsOrGetProps","reduce","acc","entries","val","useInteractions","deps","getReferenceProps","getFloatingProps","getItemProps","item","isPreventScrollSupported","doSwitch","vertical","horizontal","isMainOrientationKey","isMainOrientationToEndKey","rtl","isCrossOrientationOpenKey","isCrossOrientationCloseKey","useListNavigation","onNavigate","unstable_onNavigate","selectedIndex","allowEscape","virtual","focusItemOnOpen","focusItemOnHover","openOnArrowKeyDown","scrollItemIntoView","virtualItemRef","itemSizes","focusItemOnOpenRef","indexRef","keyRef","isPointerModalityRef","previousOnNavigateRef","previousMountedRef","forceSyncFocus","forceScrollIntoViewRef","disabledIndicesRef","latestOpenRef","scrollItemIntoViewRef","activeId","setActiveId","virtualId","setVirtualId","focusItem","forceScrollIntoView","scrollIntoViewOptions","shouldScrollIntoView","scrollIntoView","block","inline","runs","waitForListPopulated","scheduler","treeContainsActiveEl","handleVirtualFocus","hasActiveIndex","syncCurrentTarget","_ref3","onPointerLeave","_ref4","currentIndex","minGridIndex","findIndex","maxGridIndex","foundIndex","itemIndex","min","max","checkVirtualMouse","checkVirtualPointer","ariaActiveDescendantProp","activeItem","isArrowKey","isCrossOpenKey","isCrossCloseKey","isMainKey","isNavigationKey","trim","rootNode","deepestNode","eventObject","KeyboardEvent","_deepestNode$context","_deepestNode$context2","isCurrentTarget","dispatchItem","dispatchEvent","_deepestNode$context$","onPointerMove","componentRoleToAriaRoleMap","useRole","_componentRoleToAriaR","ariaRole","referenceId","isNested","floatingProps","active","selected","commonProps","camelCaseToKebabCase","str","replace","$","ofs","toLowerCase","execWithArgsOrReturn","valueOrFn","useDelayUnmount","durationMs","isMounted","setIsMounted","timeout","useTransitionStatus","duration","isNumberDuration","closeDuration","close","initiated","setInitiated","status","setStatus","frame","useTransitionStyles","initial","unstable_initial","opacity","unstable_open","unstable_close","common","unstable_common","fnArgs","openDuration","styles","setStyles","initialRef","openRef","closeRef","commonRef","initialStyles","closeStyles","commonStyles","openStyles","keys","transitionProperty","transitionDuration"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/node_modules/@floating-ui/react/dist/floating-ui.react.js"],"sourcesContent":["'use client';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect, useRef } from 'react';\nimport { getDocument, isMouseLikePointerType, isTypeableCombobox, activeElement, contains, isVirtualClick, isVirtualPointerEvent, getTarget, isSafari, isMac, isTypeableElement, stopEvent, isReactEvent, isRootElement, isEventTargetWithin } from './floating-ui.react.utils.js';\nimport { floor } from '../../utils/dist/floating-ui.utils.js';\nimport { useFloating as useFloating$1 } from '../../react-dom/dist/floating-ui.react-dom.js';\nexport { arrow } from '../../react-dom/dist/floating-ui.react-dom.js';\nimport { isElement, isHTMLElement, getOverflowAncestors, getWindow, getNodeName, isLastTraversableNode, getParentNode, getComputedStyle } from '../../utils/dist/floating-ui.utils.dom.js';\nimport { tabbable, isTabbable } from '../../../tabbable/dist/index.esm.js';\nimport { createPortal } from 'react-dom';\nimport { platform } from '../../dom/dist/floating-ui.dom.js';\nexport { autoUpdate, computePosition, flip, shift, size } from '../../dom/dist/floating-ui.dom.js';\n\n/**\n * Merges an array of refs into a single memoized callback ref or `null`.\n * @see https://floating-ui.com/docs/react-utils#usemergerefs\n */\nfunction useMergeRefs(refs) {\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return value => {\n      refs.forEach(ref => {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref != null) {\n          ref.current = value;\n        }\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n\n// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379\nconst SafeReact = {\n  ...React\n};\n\nconst useInsertionEffect = SafeReact.useInsertionEffect;\nconst useSafeInsertionEffect = useInsertionEffect || (fn => fn());\nfunction useEffectEvent(callback) {\n  const ref = React.useRef(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error('Cannot call an event handler while rendering.');\n    }\n  });\n  useSafeInsertionEffect(() => {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return ref.current == null ? void 0 : ref.current(...args);\n  }, []);\n}\n\nconst ARROW_UP = 'ArrowUp';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_LEFT = 'ArrowLeft';\nconst ARROW_RIGHT = 'ArrowRight';\nfunction isDifferentRow(index, cols, prevRow) {\n  return Math.floor(index / cols) !== prevRow;\n}\nfunction isIndexOutOfBounds(listRef, index) {\n  return index < 0 || index >= listRef.current.length;\n}\nfunction getMinIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    disabledIndices\n  });\n}\nfunction getMaxIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    decrement: true,\n    startingIndex: listRef.current.length,\n    disabledIndices\n  });\n}\nfunction findNonDisabledIndex(listRef, _temp) {\n  let {\n    startingIndex = -1,\n    decrement = false,\n    disabledIndices,\n    amount = 1\n  } = _temp === void 0 ? {} : _temp;\n  const list = listRef.current;\n  const isDisabledIndex = disabledIndices ? index => disabledIndices.includes(index) : index => {\n    const element = list[index];\n    return element == null || element.hasAttribute('disabled') || element.getAttribute('aria-disabled') === 'true';\n  };\n  let index = startingIndex;\n  do {\n    index += decrement ? -amount : amount;\n  } while (index >= 0 && index <= list.length - 1 && isDisabledIndex(index));\n  return index;\n}\nfunction getGridNavigatedIndex(elementsRef, _ref) {\n  let {\n    event,\n    orientation,\n    loop,\n    cols,\n    disabledIndices,\n    minIndex,\n    maxIndex,\n    prevIndex,\n    stopEvent: stop = false\n  } = _ref;\n  let nextIndex = prevIndex;\n  if (event.key === ARROW_UP) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = maxIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: nextIndex,\n        amount: cols,\n        decrement: true,\n        disabledIndices\n      });\n      if (loop && (prevIndex - cols < minIndex || nextIndex < 0)) {\n        const col = prevIndex % cols;\n        const maxCol = maxIndex % cols;\n        const offset = maxIndex - (maxCol - col);\n        if (maxCol === col) {\n          nextIndex = maxIndex;\n        } else {\n          nextIndex = maxCol > col ? offset : offset - cols;\n        }\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n  if (event.key === ARROW_DOWN) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = minIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: prevIndex,\n        amount: cols,\n        disabledIndices\n      });\n      if (loop && prevIndex + cols > maxIndex) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex % cols - cols,\n          amount: cols,\n          disabledIndices\n        });\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n\n  // Remains on the same row/column.\n  if (orientation === 'both') {\n    const prevRow = floor(prevIndex / cols);\n    if (event.key === ARROW_RIGHT) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== cols - 1) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          disabledIndices\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex - prevIndex % cols - 1,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    if (event.key === ARROW_LEFT) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== 0) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          disabledIndices,\n          decrement: true\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex + (cols - prevIndex % cols),\n            decrement: true,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex + (cols - prevIndex % cols),\n          decrement: true,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    const lastRow = floor(maxIndex / cols) === prevRow;\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      if (loop && lastRow) {\n        nextIndex = event.key === ARROW_LEFT ? maxIndex : findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      } else {\n        nextIndex = prevIndex;\n      }\n    }\n  }\n  return nextIndex;\n}\n\n/** For each cell index, gets the item index that occupies that cell */\nfunction buildCellMap(sizes, cols, dense) {\n  const cellMap = [];\n  let startIndex = 0;\n  sizes.forEach((_ref2, index) => {\n    let {\n      width,\n      height\n    } = _ref2;\n    if (width > cols) {\n      if (process.env.NODE_ENV !== \"production\") {\n        throw new Error(\"[Floating UI]: Invalid grid - item width at index \" + index + \" is greater than grid columns\");\n      }\n    }\n    let itemPlaced = false;\n    if (dense) {\n      startIndex = 0;\n    }\n    while (!itemPlaced) {\n      const targetCells = [];\n      for (let i = 0; i < width; i++) {\n        for (let j = 0; j < height; j++) {\n          targetCells.push(startIndex + i + j * cols);\n        }\n      }\n      if (startIndex % cols + width <= cols && targetCells.every(cell => cellMap[cell] == null)) {\n        targetCells.forEach(cell => {\n          cellMap[cell] = index;\n        });\n        itemPlaced = true;\n      } else {\n        startIndex++;\n      }\n    }\n  });\n\n  // convert into a non-sparse array\n  return [...cellMap];\n}\n\n/** Gets cell index of an item's corner or -1 when index is -1. */\nfunction getCellIndexOfCorner(index, sizes, cellMap, cols, corner) {\n  if (index === -1) return -1;\n  const firstCellIndex = cellMap.indexOf(index);\n  switch (corner) {\n    case 'tl':\n      return firstCellIndex;\n    case 'tr':\n      return firstCellIndex + sizes[index].width - 1;\n    case 'bl':\n      return firstCellIndex + (sizes[index].height - 1) * cols;\n    case 'br':\n      return cellMap.lastIndexOf(index);\n  }\n}\n\n/** Gets all cell indices that correspond to the specified indices */\nfunction getCellIndices(indices, cellMap) {\n  return cellMap.flatMap((index, cellIndex) => indices.includes(index) ? [cellIndex] : []);\n}\n\nlet rafId = 0;\nfunction enqueueFocus(el, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    preventScroll = false,\n    cancelPrevious = true,\n    sync = false\n  } = options;\n  cancelPrevious && cancelAnimationFrame(rafId);\n  const exec = () => el == null ? void 0 : el.focus({\n    preventScroll\n  });\n  if (sync) {\n    exec();\n  } else {\n    rafId = requestAnimationFrame(exec);\n  }\n}\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nlet serverHandoffComplete = false;\nlet count = 0;\nconst genId = () => // Ensure the id is unique with multiple independent versions of Floating UI\n// on <React 18\n\"floating-ui-\" + Math.random().toString(36).slice(2, 6) + count++;\nfunction useFloatingId() {\n  const [id, setId] = React.useState(() => serverHandoffComplete ? genId() : undefined);\n  index(() => {\n    if (id == null) {\n      setId(genId());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    serverHandoffComplete = true;\n  }, []);\n  return id;\n}\nconst useReactId = SafeReact.useId;\n\n/**\n * Uses React 18's built-in `useId()` when available, or falls back to a\n * slightly less performant (requiring a double render) implementation for\n * earlier React versions.\n * @see https://floating-ui.com/docs/react-utils#useid\n */\nconst useId = useReactId || useFloatingId;\n\nlet devMessageSet;\nif (process.env.NODE_ENV !== \"production\") {\n  devMessageSet = /*#__PURE__*/new Set();\n}\nfunction warn() {\n  var _devMessageSet;\n  for (var _len = arguments.length, messages = new Array(_len), _key = 0; _key < _len; _key++) {\n    messages[_key] = arguments[_key];\n  }\n  const message = \"Floating UI: \" + messages.join(' ');\n  if (!((_devMessageSet = devMessageSet) != null && _devMessageSet.has(message))) {\n    var _devMessageSet2;\n    (_devMessageSet2 = devMessageSet) == null || _devMessageSet2.add(message);\n    console.warn(message);\n  }\n}\nfunction error() {\n  var _devMessageSet3;\n  for (var _len2 = arguments.length, messages = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    messages[_key2] = arguments[_key2];\n  }\n  const message = \"Floating UI: \" + messages.join(' ');\n  if (!((_devMessageSet3 = devMessageSet) != null && _devMessageSet3.has(message))) {\n    var _devMessageSet4;\n    (_devMessageSet4 = devMessageSet) == null || _devMessageSet4.add(message);\n    console.error(message);\n  }\n}\n\n/**\n * Renders a pointing arrow triangle.\n * @see https://floating-ui.com/docs/FloatingArrow\n */\nconst FloatingArrow = /*#__PURE__*/React.forwardRef(function FloatingArrow(props, ref) {\n  const {\n    context: {\n      placement,\n      elements: {\n        floating\n      },\n      middlewareData: {\n        arrow\n      }\n    },\n    width = 14,\n    height = 7,\n    tipRadius = 0,\n    strokeWidth = 0,\n    staticOffset,\n    stroke,\n    d,\n    style: {\n      transform,\n      ...restStyle\n    } = {},\n    ...rest\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!ref) {\n      warn('The `ref` prop is required for `FloatingArrow`.');\n    }\n  }\n  const clipPathId = useId();\n  if (!floating) {\n    return null;\n  }\n\n  // Strokes must be double the border width, this ensures the stroke's width\n  // works as you'd expect.\n  const computedStrokeWidth = strokeWidth * 2;\n  const halfStrokeWidth = computedStrokeWidth / 2;\n  const svgX = width / 2 * (tipRadius / -8 + 1);\n  const svgY = height / 2 * tipRadius / 4;\n  const [side, alignment] = placement.split('-');\n  const isRTL = platform.isRTL(floating);\n  const isCustomShape = !!d;\n  const isVerticalSide = side === 'top' || side === 'bottom';\n  const yOffsetProp = staticOffset && alignment === 'end' ? 'bottom' : 'top';\n  let xOffsetProp = staticOffset && alignment === 'end' ? 'right' : 'left';\n  if (staticOffset && isRTL) {\n    xOffsetProp = alignment === 'end' ? 'left' : 'right';\n  }\n  const arrowX = (arrow == null ? void 0 : arrow.x) != null ? staticOffset || arrow.x : '';\n  const arrowY = (arrow == null ? void 0 : arrow.y) != null ? staticOffset || arrow.y : '';\n  const dValue = d || 'M0,0' + (\" H\" + width) + (\" L\" + (width - svgX) + \",\" + (height - svgY)) + (\" Q\" + width / 2 + \",\" + height + \" \" + svgX + \",\" + (height - svgY)) + ' Z';\n  const rotation = {\n    top: isCustomShape ? 'rotate(180deg)' : '',\n    left: isCustomShape ? 'rotate(90deg)' : 'rotate(-90deg)',\n    bottom: isCustomShape ? '' : 'rotate(180deg)',\n    right: isCustomShape ? 'rotate(-90deg)' : 'rotate(90deg)'\n  }[side];\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, rest, {\n    \"aria-hidden\": true,\n    ref: ref,\n    width: isCustomShape ? width : width + computedStrokeWidth,\n    height: width,\n    viewBox: \"0 0 \" + width + \" \" + (height > width ? height : width),\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      [xOffsetProp]: arrowX,\n      [yOffsetProp]: arrowY,\n      [side]: isVerticalSide || isCustomShape ? '100%' : \"calc(100% - \" + computedStrokeWidth / 2 + \"px)\",\n      transform: \"\" + rotation + (transform != null ? transform : ''),\n      ...restStyle\n    }\n  }), computedStrokeWidth > 0 && /*#__PURE__*/React.createElement(\"path\", {\n    clipPath: \"url(#\" + clipPathId + \")\",\n    fill: \"none\",\n    stroke: stroke\n    // Account for the stroke on the fill path rendered below.\n    ,\n    strokeWidth: computedStrokeWidth + (d ? 0 : 1),\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: computedStrokeWidth && !d ? rest.fill : 'none',\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: clipPathId\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: -halfStrokeWidth,\n    y: halfStrokeWidth * (isCustomShape ? -1 : 1),\n    width: width + computedStrokeWidth,\n    height: width\n  })));\n});\n\nfunction createPubSub() {\n  const map = new Map();\n  return {\n    emit(event, data) {\n      var _map$get;\n      (_map$get = map.get(event)) == null || _map$get.forEach(handler => handler(data));\n    },\n    on(event, listener) {\n      map.set(event, [...(map.get(event) || []), listener]);\n    },\n    off(event, listener) {\n      var _map$get2;\n      map.set(event, ((_map$get2 = map.get(event)) == null ? void 0 : _map$get2.filter(l => l !== listener)) || []);\n    }\n  };\n}\n\nconst FloatingNodeContext = /*#__PURE__*/React.createContext(null);\nconst FloatingTreeContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the parent node id for nested floating elements, if available.\n * Returns `null` for top-level floating elements.\n */\nconst useFloatingParentNodeId = () => {\n  var _React$useContext;\n  return ((_React$useContext = React.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;\n};\n\n/**\n * Returns the nearest floating tree context, if available.\n */\nconst useFloatingTree = () => React.useContext(FloatingTreeContext);\n\nfunction createAttribute(name) {\n  return \"data-floating-ui-\" + name;\n}\n\nfunction useLatestRef(value) {\n  const ref = useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\nconst safePolygonIdentifier = /*#__PURE__*/createAttribute('safe-polygon');\nfunction getDelay(value, prop, pointerType) {\n  if (pointerType && !isMouseLikePointerType(pointerType)) {\n    return 0;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return value == null ? void 0 : value[prop];\n}\n/**\n * Opens the floating element while hovering over the reference element, like\n * CSS `:hover`.\n * @see https://floating-ui.com/docs/useHover\n */\nfunction useHover(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    events,\n    elements: {\n      domReference,\n      floating\n    },\n    refs\n  } = context;\n  const {\n    enabled = true,\n    delay = 0,\n    handleClose = null,\n    mouseOnly = false,\n    restMs = 0,\n    move = true\n  } = props;\n  const tree = useFloatingTree();\n  const parentId = useFloatingParentNodeId();\n  const handleCloseRef = useLatestRef(handleClose);\n  const delayRef = useLatestRef(delay);\n  const pointerTypeRef = React.useRef();\n  const timeoutRef = React.useRef();\n  const handlerRef = React.useRef();\n  const restTimeoutRef = React.useRef();\n  const blockMouseMoveRef = React.useRef(true);\n  const performedPointerEventsMutationRef = React.useRef(false);\n  const unbindMouseMoveRef = React.useRef(() => {});\n  const isHoverOpen = React.useCallback(() => {\n    var _dataRef$current$open;\n    const type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;\n    return (type == null ? void 0 : type.includes('mouse')) && type !== 'mousedown';\n  }, [dataRef]);\n\n  // When closing before opening, clear the delay timeouts to cancel it\n  // from showing.\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onOpenChange(_ref) {\n      let {\n        open\n      } = _ref;\n      if (!open) {\n        clearTimeout(timeoutRef.current);\n        clearTimeout(restTimeoutRef.current);\n        blockMouseMoveRef.current = true;\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n    };\n  }, [enabled, events]);\n  React.useEffect(() => {\n    if (!enabled || !handleCloseRef.current || !open) {\n      return;\n    }\n    function onLeave(event) {\n      if (isHoverOpen()) {\n        onOpenChange(false, event, 'hover');\n      }\n    }\n    const html = getDocument(floating).documentElement;\n    html.addEventListener('mouseleave', onLeave);\n    return () => {\n      html.removeEventListener('mouseleave', onLeave);\n    };\n  }, [floating, open, onOpenChange, enabled, handleCloseRef, isHoverOpen]);\n  const closeWithDelay = React.useCallback(function (event, runElseBranch, reason) {\n    if (runElseBranch === void 0) {\n      runElseBranch = true;\n    }\n    if (reason === void 0) {\n      reason = 'hover';\n    }\n    const closeDelay = getDelay(delayRef.current, 'close', pointerTypeRef.current);\n    if (closeDelay && !handlerRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = setTimeout(() => onOpenChange(false, event, reason), closeDelay);\n    } else if (runElseBranch) {\n      clearTimeout(timeoutRef.current);\n      onOpenChange(false, event, reason);\n    }\n  }, [delayRef, onOpenChange]);\n  const cleanupMouseMoveHandler = React.useCallback(() => {\n    unbindMouseMoveRef.current();\n    handlerRef.current = undefined;\n  }, []);\n  const clearPointerEvents = React.useCallback(() => {\n    if (performedPointerEventsMutationRef.current) {\n      const body = getDocument(refs.floating.current).body;\n      body.style.pointerEvents = '';\n      body.removeAttribute(safePolygonIdentifier);\n      performedPointerEventsMutationRef.current = false;\n    }\n  }, [refs]);\n\n  // Registering the mouse events on the reference directly to bypass React's\n  // delegation system. If the cursor was on a disabled element and then entered\n  // the reference (no gap), `mouseenter` doesn't fire in the delegation system.\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function isClickLikeOpenEvent() {\n      return dataRef.current.openEvent ? ['click', 'mousedown'].includes(dataRef.current.openEvent.type) : false;\n    }\n    function onMouseEnter(event) {\n      clearTimeout(timeoutRef.current);\n      blockMouseMoveRef.current = false;\n      if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current) || restMs > 0 && getDelay(delayRef.current, 'open') === 0) {\n        return;\n      }\n      const openDelay = getDelay(delayRef.current, 'open', pointerTypeRef.current);\n      if (openDelay) {\n        timeoutRef.current = setTimeout(() => {\n          onOpenChange(true, event, 'hover');\n        }, openDelay);\n      } else {\n        onOpenChange(true, event, 'hover');\n      }\n    }\n    function onMouseLeave(event) {\n      if (isClickLikeOpenEvent()) {\n        return;\n      }\n      unbindMouseMoveRef.current();\n      const doc = getDocument(floating);\n      clearTimeout(restTimeoutRef.current);\n      if (handleCloseRef.current) {\n        // Prevent clearing `onScrollMouseLeave` timeout.\n        if (!open) {\n          clearTimeout(timeoutRef.current);\n        }\n        handlerRef.current = handleCloseRef.current({\n          ...context,\n          tree,\n          x: event.clientX,\n          y: event.clientY,\n          onClose() {\n            clearPointerEvents();\n            cleanupMouseMoveHandler();\n            closeWithDelay(event, true, 'safe-polygon');\n          }\n        });\n        const handler = handlerRef.current;\n        doc.addEventListener('mousemove', handler);\n        unbindMouseMoveRef.current = () => {\n          doc.removeEventListener('mousemove', handler);\n        };\n        return;\n      }\n\n      // Allow interactivity without `safePolygon` on touch devices. With a\n      // pointer, a short close delay is an alternative, so it should work\n      // consistently.\n      const shouldClose = pointerTypeRef.current === 'touch' ? !contains(floating, event.relatedTarget) : true;\n      if (shouldClose) {\n        closeWithDelay(event);\n      }\n    }\n\n    // Ensure the floating element closes after scrolling even if the pointer\n    // did not move.\n    // https://github.com/floating-ui/floating-ui/discussions/1692\n    function onScrollMouseLeave(event) {\n      if (isClickLikeOpenEvent()) {\n        return;\n      }\n      handleCloseRef.current == null || handleCloseRef.current({\n        ...context,\n        tree,\n        x: event.clientX,\n        y: event.clientY,\n        onClose() {\n          clearPointerEvents();\n          cleanupMouseMoveHandler();\n          closeWithDelay(event);\n        }\n      })(event);\n    }\n    if (isElement(domReference)) {\n      const ref = domReference;\n      open && ref.addEventListener('mouseleave', onScrollMouseLeave);\n      floating == null || floating.addEventListener('mouseleave', onScrollMouseLeave);\n      move && ref.addEventListener('mousemove', onMouseEnter, {\n        once: true\n      });\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      return () => {\n        open && ref.removeEventListener('mouseleave', onScrollMouseLeave);\n        floating == null || floating.removeEventListener('mouseleave', onScrollMouseLeave);\n        move && ref.removeEventListener('mousemove', onMouseEnter);\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n  }, [domReference, floating, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupMouseMoveHandler, clearPointerEvents, onOpenChange, open, tree, delayRef, handleCloseRef, dataRef]);\n\n  // Block pointer-events of every element other than the reference and floating\n  // while the floating element is open and has a `handleClose` handler. Also\n  // handles nested floating elements.\n  // https://github.com/floating-ui/floating-ui/issues/1722\n  index(() => {\n    var _handleCloseRef$curre;\n    if (!enabled) {\n      return;\n    }\n    if (open && (_handleCloseRef$curre = handleCloseRef.current) != null && _handleCloseRef$curre.__options.blockPointerEvents && isHoverOpen()) {\n      const body = getDocument(floating).body;\n      body.setAttribute(safePolygonIdentifier, '');\n      body.style.pointerEvents = 'none';\n      performedPointerEventsMutationRef.current = true;\n      if (isElement(domReference) && floating) {\n        var _tree$nodesRef$curren;\n        const ref = domReference;\n        const parentFloating = tree == null || (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null || (_tree$nodesRef$curren = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren.elements.floating;\n        if (parentFloating) {\n          parentFloating.style.pointerEvents = '';\n        }\n        ref.style.pointerEvents = 'auto';\n        floating.style.pointerEvents = 'auto';\n        return () => {\n          ref.style.pointerEvents = '';\n          floating.style.pointerEvents = '';\n        };\n      }\n    }\n  }, [enabled, open, parentId, floating, domReference, tree, handleCloseRef, isHoverOpen]);\n  index(() => {\n    if (!open) {\n      pointerTypeRef.current = undefined;\n      cleanupMouseMoveHandler();\n      clearPointerEvents();\n    }\n  }, [open, cleanupMouseMoveHandler, clearPointerEvents]);\n  React.useEffect(() => {\n    return () => {\n      cleanupMouseMoveHandler();\n      clearTimeout(timeoutRef.current);\n      clearTimeout(restTimeoutRef.current);\n      clearPointerEvents();\n    };\n  }, [enabled, domReference, cleanupMouseMoveHandler, clearPointerEvents]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    function setPointerRef(event) {\n      pointerTypeRef.current = event.pointerType;\n    }\n    return {\n      reference: {\n        onPointerDown: setPointerRef,\n        onPointerEnter: setPointerRef,\n        onMouseMove(event) {\n          function handleMouseMove() {\n            if (!blockMouseMoveRef.current) {\n              onOpenChange(true, event.nativeEvent, 'hover');\n            }\n          }\n          if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current)) {\n            return;\n          }\n          if (open || restMs === 0) {\n            return;\n          }\n          clearTimeout(restTimeoutRef.current);\n          if (pointerTypeRef.current === 'touch') {\n            handleMouseMove();\n          } else {\n            restTimeoutRef.current = setTimeout(handleMouseMove, restMs);\n          }\n        }\n      },\n      floating: {\n        onMouseEnter() {\n          clearTimeout(timeoutRef.current);\n        },\n        onMouseLeave(event) {\n          closeWithDelay(event.nativeEvent, false);\n        }\n      }\n    };\n  }, [enabled, mouseOnly, open, restMs, onOpenChange, closeWithDelay]);\n}\n\nfunction getAncestors(nodes, id) {\n  var _nodes$find;\n  let allAncestors = [];\n  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;\n  while (currentParentId) {\n    const currentNode = nodes.find(node => node.id === currentParentId);\n    currentParentId = currentNode == null ? void 0 : currentNode.parentId;\n    if (currentNode) {\n      allAncestors = allAncestors.concat(currentNode);\n    }\n  }\n  return allAncestors;\n}\n\nfunction getChildren(nodes, id) {\n  let allChildren = nodes.filter(node => {\n    var _node$context;\n    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);\n  });\n  let currentChildren = allChildren;\n  while (currentChildren.length) {\n    currentChildren = nodes.filter(node => {\n      var _currentChildren;\n      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {\n        var _node$context2;\n        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);\n      });\n    });\n    allChildren = allChildren.concat(currentChildren);\n  }\n  return allChildren;\n}\nfunction getDeepestNode(nodes, id) {\n  let deepestNodeId;\n  let maxDepth = -1;\n  function findDeepest(nodeId, depth) {\n    if (depth > maxDepth) {\n      deepestNodeId = nodeId;\n      maxDepth = depth;\n    }\n    const children = getChildren(nodes, nodeId);\n    children.forEach(child => {\n      findDeepest(child.id, depth + 1);\n    });\n  }\n  findDeepest(id, 0);\n  return nodes.find(node => node.id === deepestNodeId);\n}\n\n// Modified to add conditional `aria-hidden` support:\n// https://github.com/theKashey/aria-hidden/blob/9220c8f4a4fd35f63bee5510a9f41a37264382d4/src/index.ts\nlet counterMap = /*#__PURE__*/new WeakMap();\nlet uncontrolledElementsSet = /*#__PURE__*/new WeakSet();\nlet markerMap = {};\nlet lockCount = 0;\nconst supportsInert = () => typeof HTMLElement !== 'undefined' && 'inert' in HTMLElement.prototype;\nconst unwrapHost = node => node && (node.host || unwrapHost(node.parentNode));\nconst correctElements = (parent, targets) => targets.map(target => {\n  if (parent.contains(target)) {\n    return target;\n  }\n  const correctedTarget = unwrapHost(target);\n  if (parent.contains(correctedTarget)) {\n    return correctedTarget;\n  }\n  return null;\n}).filter(x => x != null);\nfunction applyAttributeToOthers(uncorrectedAvoidElements, body, ariaHidden, inert) {\n  const markerName = 'data-floating-ui-inert';\n  const controlAttribute = inert ? 'inert' : ariaHidden ? 'aria-hidden' : null;\n  const avoidElements = correctElements(body, uncorrectedAvoidElements);\n  const elementsToKeep = new Set();\n  const elementsToStop = new Set(avoidElements);\n  const hiddenElements = [];\n  if (!markerMap[markerName]) {\n    markerMap[markerName] = new WeakMap();\n  }\n  const markerCounter = markerMap[markerName];\n  avoidElements.forEach(keep);\n  deep(body);\n  elementsToKeep.clear();\n  function keep(el) {\n    if (!el || elementsToKeep.has(el)) {\n      return;\n    }\n    elementsToKeep.add(el);\n    el.parentNode && keep(el.parentNode);\n  }\n  function deep(parent) {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    Array.prototype.forEach.call(parent.children, node => {\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        const attr = controlAttribute ? node.getAttribute(controlAttribute) : null;\n        const alreadyHidden = attr !== null && attr !== 'false';\n        const counterValue = (counterMap.get(node) || 0) + 1;\n        const markerValue = (markerCounter.get(node) || 0) + 1;\n        counterMap.set(node, counterValue);\n        markerCounter.set(node, markerValue);\n        hiddenElements.push(node);\n        if (counterValue === 1 && alreadyHidden) {\n          uncontrolledElementsSet.add(node);\n        }\n        if (markerValue === 1) {\n          node.setAttribute(markerName, '');\n        }\n        if (!alreadyHidden && controlAttribute) {\n          node.setAttribute(controlAttribute, 'true');\n        }\n      }\n    });\n  }\n  lockCount++;\n  return () => {\n    hiddenElements.forEach(element => {\n      const counterValue = (counterMap.get(element) || 0) - 1;\n      const markerValue = (markerCounter.get(element) || 0) - 1;\n      counterMap.set(element, counterValue);\n      markerCounter.set(element, markerValue);\n      if (!counterValue) {\n        if (!uncontrolledElementsSet.has(element) && controlAttribute) {\n          element.removeAttribute(controlAttribute);\n        }\n        uncontrolledElementsSet.delete(element);\n      }\n      if (!markerValue) {\n        element.removeAttribute(markerName);\n      }\n    });\n    lockCount--;\n    if (!lockCount) {\n      counterMap = new WeakMap();\n      counterMap = new WeakMap();\n      uncontrolledElementsSet = new WeakSet();\n      markerMap = {};\n    }\n  };\n}\nfunction markOthers(avoidElements, ariaHidden, inert) {\n  if (ariaHidden === void 0) {\n    ariaHidden = false;\n  }\n  if (inert === void 0) {\n    inert = false;\n  }\n  const body = getDocument(avoidElements[0]).body;\n  return applyAttributeToOthers(avoidElements.concat(Array.from(body.querySelectorAll('[aria-live]'))), body, ariaHidden, inert);\n}\n\nconst getTabbableOptions = () => ({\n  getShadowRoot: true,\n  displayCheck:\n  // JSDOM does not support the `tabbable` library. To solve this we can\n  // check if `ResizeObserver` is a real function (not polyfilled), which\n  // determines if the current environment is JSDOM-like.\n  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'\n});\nfunction getTabbableIn(container, direction) {\n  const allTabbable = tabbable(container, getTabbableOptions());\n  if (direction === 'prev') {\n    allTabbable.reverse();\n  }\n  const activeIndex = allTabbable.indexOf(activeElement(getDocument(container)));\n  const nextTabbableElements = allTabbable.slice(activeIndex + 1);\n  return nextTabbableElements[0];\n}\nfunction getNextTabbable() {\n  return getTabbableIn(document.body, 'next');\n}\nfunction getPreviousTabbable() {\n  return getTabbableIn(document.body, 'prev');\n}\nfunction isOutsideEvent(event, container) {\n  const containerElement = container || event.currentTarget;\n  const relatedTarget = event.relatedTarget;\n  return !relatedTarget || !contains(containerElement, relatedTarget);\n}\nfunction disableFocusInside(container) {\n  const tabbableElements = tabbable(container, getTabbableOptions());\n  tabbableElements.forEach(element => {\n    element.dataset.tabindex = element.getAttribute('tabindex') || '';\n    element.setAttribute('tabindex', '-1');\n  });\n}\nfunction enableFocusInside(container) {\n  const elements = container.querySelectorAll('[data-tabindex]');\n  elements.forEach(element => {\n    const tabindex = element.dataset.tabindex;\n    delete element.dataset.tabindex;\n    if (tabindex) {\n      element.setAttribute('tabindex', tabindex);\n    } else {\n      element.removeAttribute('tabindex');\n    }\n  });\n}\n\n// See Diego Haz's Sandbox for making this logic work well on Safari/iOS:\n// https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/FocusTrap.tsx\n\nconst HIDDEN_STYLES = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'fixed',\n  whiteSpace: 'nowrap',\n  width: '1px',\n  top: 0,\n  left: 0\n};\nlet timeoutId;\nfunction setActiveElementOnTab(event) {\n  if (event.key === 'Tab') {\n    event.target;\n    clearTimeout(timeoutId);\n  }\n}\nconst FocusGuard = /*#__PURE__*/React.forwardRef(function FocusGuard(props, ref) {\n  const [role, setRole] = React.useState();\n  index(() => {\n    if (isSafari()) {\n      // Unlike other screen readers such as NVDA and JAWS, the virtual cursor\n      // on VoiceOver does trigger the onFocus event, so we can use the focus\n      // trap element. On Safari, only buttons trigger the onFocus event.\n      // NB: \"group\" role in the Sandbox no longer appears to work, must be a\n      // button role.\n      setRole('button');\n    }\n    document.addEventListener('keydown', setActiveElementOnTab);\n    return () => {\n      document.removeEventListener('keydown', setActiveElementOnTab);\n    };\n  }, []);\n  const restProps = {\n    ref,\n    tabIndex: 0,\n    // Role is only for VoiceOver\n    role,\n    'aria-hidden': role ? undefined : true,\n    [createAttribute('focus-guard')]: '',\n    style: HIDDEN_STYLES\n  };\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, props, restProps));\n});\n\nconst PortalContext = /*#__PURE__*/React.createContext(null);\nconst attr = /*#__PURE__*/createAttribute('portal');\n\n/**\n * @see https://floating-ui.com/docs/FloatingPortal#usefloatingportalnode\n */\nfunction useFloatingPortalNode(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    id,\n    root\n  } = props;\n  const uniqueId = useId();\n  const portalContext = usePortalContext();\n  const [portalNode, setPortalNode] = React.useState(null);\n  const portalNodeRef = React.useRef(null);\n  index(() => {\n    return () => {\n      portalNode == null || portalNode.remove();\n      // Allow the subsequent layout effects to create a new node on updates.\n      // The portal node will still be cleaned up on unmount.\n      // https://github.com/floating-ui/floating-ui/issues/2454\n      queueMicrotask(() => {\n        portalNodeRef.current = null;\n      });\n    };\n  }, [portalNode]);\n  index(() => {\n    if (portalNodeRef.current) return;\n    const existingIdRoot = id ? document.getElementById(id) : null;\n    if (!existingIdRoot) return;\n    const subRoot = document.createElement('div');\n    subRoot.id = uniqueId;\n    subRoot.setAttribute(attr, '');\n    existingIdRoot.appendChild(subRoot);\n    portalNodeRef.current = subRoot;\n    setPortalNode(subRoot);\n  }, [id, uniqueId]);\n  index(() => {\n    if (portalNodeRef.current) return;\n    let container = root || (portalContext == null ? void 0 : portalContext.portalNode);\n    if (container && !isElement(container)) container = container.current;\n    container = container || document.body;\n    let idWrapper = null;\n    if (id) {\n      idWrapper = document.createElement('div');\n      idWrapper.id = id;\n      container.appendChild(idWrapper);\n    }\n    const subRoot = document.createElement('div');\n    subRoot.id = uniqueId;\n    subRoot.setAttribute(attr, '');\n    container = idWrapper || container;\n    container.appendChild(subRoot);\n    portalNodeRef.current = subRoot;\n    setPortalNode(subRoot);\n  }, [id, root, uniqueId, portalContext]);\n  return portalNode;\n}\n/**\n * Portals the floating element into a given container element — by default,\n * outside of the app root and into the body.\n * This is necessary to ensure the floating element can appear outside any\n * potential parent containers that cause clipping (such as `overflow: hidden`),\n * while retaining its location in the React tree.\n * @see https://floating-ui.com/docs/FloatingPortal\n */\nfunction FloatingPortal(props) {\n  const {\n    children,\n    id,\n    root = null,\n    preserveTabOrder = true\n  } = props;\n  const portalNode = useFloatingPortalNode({\n    id,\n    root\n  });\n  const [focusManagerState, setFocusManagerState] = React.useState(null);\n  const beforeOutsideRef = React.useRef(null);\n  const afterOutsideRef = React.useRef(null);\n  const beforeInsideRef = React.useRef(null);\n  const afterInsideRef = React.useRef(null);\n  const shouldRenderGuards =\n  // The FocusManager and therefore floating element are currently open/\n  // rendered.\n  !!focusManagerState &&\n  // Guards are only for non-modal focus management.\n  !focusManagerState.modal &&\n  // Don't render if unmount is transitioning.\n  focusManagerState.open && preserveTabOrder && !!(root || portalNode);\n\n  // https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/TabbablePortal.tsx\n  React.useEffect(() => {\n    if (!portalNode || !preserveTabOrder || focusManagerState != null && focusManagerState.modal) {\n      return;\n    }\n\n    // Make sure elements inside the portal element are tabbable only when the\n    // portal has already been focused, either by tabbing into a focus trap\n    // element outside or using the mouse.\n    function onFocus(event) {\n      if (portalNode && isOutsideEvent(event)) {\n        const focusing = event.type === 'focusin';\n        const manageFocus = focusing ? enableFocusInside : disableFocusInside;\n        manageFocus(portalNode);\n      }\n    }\n    // Listen to the event on the capture phase so they run before the focus\n    // trap elements onFocus prop is called.\n    portalNode.addEventListener('focusin', onFocus, true);\n    portalNode.addEventListener('focusout', onFocus, true);\n    return () => {\n      portalNode.removeEventListener('focusin', onFocus, true);\n      portalNode.removeEventListener('focusout', onFocus, true);\n    };\n  }, [portalNode, preserveTabOrder, focusManagerState == null ? void 0 : focusManagerState.modal]);\n  return /*#__PURE__*/React.createElement(PortalContext.Provider, {\n    value: React.useMemo(() => ({\n      preserveTabOrder,\n      beforeOutsideRef,\n      afterOutsideRef,\n      beforeInsideRef,\n      afterInsideRef,\n      portalNode,\n      setFocusManagerState\n    }), [preserveTabOrder, portalNode])\n  }, shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: beforeOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _beforeInsideRef$curr;\n        (_beforeInsideRef$curr = beforeInsideRef.current) == null || _beforeInsideRef$curr.focus();\n      } else {\n        const prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        prevTabbable == null || prevTabbable.focus();\n      }\n    }\n  }), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-owns\": portalNode.id,\n    style: HIDDEN_STYLES\n  }), portalNode && /*#__PURE__*/createPortal(children, portalNode), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: afterOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _afterInsideRef$curre;\n        (_afterInsideRef$curre = afterInsideRef.current) == null || _afterInsideRef$curre.focus();\n      } else {\n        const nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        nextTabbable == null || nextTabbable.focus();\n        (focusManagerState == null ? void 0 : focusManagerState.closeOnFocusOut) && (focusManagerState == null ? void 0 : focusManagerState.onOpenChange(false, event.nativeEvent));\n      }\n    }\n  }));\n}\nconst usePortalContext = () => React.useContext(PortalContext);\n\nconst LIST_LIMIT = 20;\nlet previouslyFocusedElements = [];\nfunction addPreviouslyFocusedElement(element) {\n  previouslyFocusedElements = previouslyFocusedElements.filter(el => el.isConnected);\n  let tabbableEl = element;\n  if (!tabbableEl || getNodeName(tabbableEl) === 'body') return;\n  if (!isTabbable(tabbableEl, getTabbableOptions())) {\n    const tabbableChild = tabbable(tabbableEl, getTabbableOptions())[0];\n    if (!tabbableChild) return;\n    tabbableEl = tabbableChild;\n  }\n  previouslyFocusedElements.push(tabbableEl);\n  if (previouslyFocusedElements.length > LIST_LIMIT) {\n    previouslyFocusedElements = previouslyFocusedElements.slice(-LIST_LIMIT);\n  }\n}\nfunction getPreviouslyFocusedElement() {\n  return previouslyFocusedElements.slice().reverse().find(el => el.isConnected);\n}\nconst VisuallyHiddenDismiss = /*#__PURE__*/React.forwardRef(function VisuallyHiddenDismiss(props, ref) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, props, {\n    type: \"button\",\n    ref: ref,\n    tabIndex: -1,\n    style: HIDDEN_STYLES\n  }));\n});\n/**\n * Provides focus management for the floating element.\n * @see https://floating-ui.com/docs/FloatingFocusManager\n */\nfunction FloatingFocusManager(props) {\n  const {\n    context,\n    children,\n    disabled = false,\n    order = ['content'],\n    guards: _guards = true,\n    initialFocus = 0,\n    returnFocus = true,\n    modal = true,\n    visuallyHiddenDismiss = false,\n    closeOnFocusOut = true\n  } = props;\n  const {\n    open,\n    refs,\n    nodeId,\n    onOpenChange,\n    events,\n    dataRef,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const ignoreInitialFocus = typeof initialFocus === 'number' && initialFocus < 0;\n  // If the reference is a combobox and is typeable (e.g. input/textarea),\n  // there are different focus semantics. The guards should not be rendered, but\n  // aria-hidden should be applied to all nodes still. Further, the visually\n  // hidden dismiss button should only appear at the end of the list, not the\n  // start.\n  const isUntrappedTypeableCombobox = isTypeableCombobox(domReference) && ignoreInitialFocus;\n\n  // Force the guards to be rendered if the `inert` attribute is not supported.\n  const guards = supportsInert() ? _guards : true;\n  const orderRef = useLatestRef(order);\n  const initialFocusRef = useLatestRef(initialFocus);\n  const returnFocusRef = useLatestRef(returnFocus);\n  const tree = useFloatingTree();\n  const portalContext = usePortalContext();\n  const startDismissButtonRef = React.useRef(null);\n  const endDismissButtonRef = React.useRef(null);\n  const preventReturnFocusRef = React.useRef(false);\n  const isPointerDownRef = React.useRef(false);\n  const isInsidePortal = portalContext != null;\n  const getTabbableContent = React.useCallback(function (container) {\n    if (container === void 0) {\n      container = floating;\n    }\n    return container ? tabbable(container, getTabbableOptions()) : [];\n  }, [floating]);\n  const getTabbableElements = React.useCallback(container => {\n    const content = getTabbableContent(container);\n    return orderRef.current.map(type => {\n      if (domReference && type === 'reference') {\n        return domReference;\n      }\n      if (floating && type === 'floating') {\n        return floating;\n      }\n      return content;\n    }).filter(Boolean).flat();\n  }, [domReference, floating, orderRef, getTabbableContent]);\n  React.useEffect(() => {\n    if (disabled || !modal) return;\n    function onKeyDown(event) {\n      if (event.key === 'Tab') {\n        // The focus guards have nothing to focus, so we need to stop the event.\n        if (contains(floating, activeElement(getDocument(floating))) && getTabbableContent().length === 0 && !isUntrappedTypeableCombobox) {\n          stopEvent(event);\n        }\n        const els = getTabbableElements();\n        const target = getTarget(event);\n        if (orderRef.current[0] === 'reference' && target === domReference) {\n          stopEvent(event);\n          if (event.shiftKey) {\n            enqueueFocus(els[els.length - 1]);\n          } else {\n            enqueueFocus(els[1]);\n          }\n        }\n        if (orderRef.current[1] === 'floating' && target === floating && event.shiftKey) {\n          stopEvent(event);\n          enqueueFocus(els[0]);\n        }\n      }\n    }\n    const doc = getDocument(floating);\n    doc.addEventListener('keydown', onKeyDown);\n    return () => {\n      doc.removeEventListener('keydown', onKeyDown);\n    };\n  }, [disabled, domReference, floating, modal, orderRef, isUntrappedTypeableCombobox, getTabbableContent, getTabbableElements]);\n  React.useEffect(() => {\n    if (disabled || !closeOnFocusOut) return;\n\n    // In Safari, buttons lose focus when pressing them.\n    function handlePointerDown() {\n      isPointerDownRef.current = true;\n      setTimeout(() => {\n        isPointerDownRef.current = false;\n      });\n    }\n    function handleFocusOutside(event) {\n      const relatedTarget = event.relatedTarget;\n      queueMicrotask(() => {\n        const movedToUnrelatedNode = !(contains(domReference, relatedTarget) || contains(floating, relatedTarget) || contains(relatedTarget, floating) || contains(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute(createAttribute('focus-guard')) || tree && (getChildren(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context, _node$context2;\n          return contains((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || contains((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);\n        }) || getAncestors(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context3, _node$context4;\n          return ((_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating) === relatedTarget || ((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.domReference) === relatedTarget;\n        })));\n\n        // Focus did not move inside the floating tree, and there are no tabbable\n        // portal guards to handle closing.\n        if (relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current &&\n        // Fix React 18 Strict Mode returnFocus due to double rendering.\n        relatedTarget !== getPreviouslyFocusedElement()) {\n          preventReturnFocusRef.current = true;\n          onOpenChange(false, event);\n        }\n      });\n    }\n    if (floating && isHTMLElement(domReference)) {\n      domReference.addEventListener('focusout', handleFocusOutside);\n      domReference.addEventListener('pointerdown', handlePointerDown);\n      !modal && floating.addEventListener('focusout', handleFocusOutside);\n      return () => {\n        domReference.removeEventListener('focusout', handleFocusOutside);\n        domReference.removeEventListener('pointerdown', handlePointerDown);\n        !modal && floating.removeEventListener('focusout', handleFocusOutside);\n      };\n    }\n  }, [disabled, domReference, floating, modal, nodeId, tree, portalContext, onOpenChange, closeOnFocusOut]);\n  React.useEffect(() => {\n    var _portalContext$portal;\n    if (disabled) return;\n\n    // Don't hide portals nested within the parent portal.\n    const portalNodes = Array.from((portalContext == null || (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll(\"[\" + createAttribute('portal') + \"]\")) || []);\n    if (floating) {\n      const insideElements = [floating, ...portalNodes, startDismissButtonRef.current, endDismissButtonRef.current, orderRef.current.includes('reference') || isUntrappedTypeableCombobox ? domReference : null].filter(x => x != null);\n      const cleanup = modal || isUntrappedTypeableCombobox ? markOthers(insideElements, guards, !guards) : markOthers(insideElements);\n      return () => {\n        cleanup();\n      };\n    }\n  }, [disabled, domReference, floating, modal, orderRef, portalContext, isUntrappedTypeableCombobox, guards]);\n  index(() => {\n    if (disabled || !floating) return;\n    const doc = getDocument(floating);\n    const previouslyFocusedElement = activeElement(doc);\n\n    // Wait for any layout effect state setters to execute to set `tabIndex`.\n    queueMicrotask(() => {\n      const focusableElements = getTabbableElements(floating);\n      const initialFocusValue = initialFocusRef.current;\n      const elToFocus = (typeof initialFocusValue === 'number' ? focusableElements[initialFocusValue] : initialFocusValue.current) || floating;\n      const focusAlreadyInsideFloatingEl = contains(floating, previouslyFocusedElement);\n      if (!ignoreInitialFocus && !focusAlreadyInsideFloatingEl && open) {\n        enqueueFocus(elToFocus, {\n          preventScroll: elToFocus === floating\n        });\n      }\n    });\n  }, [disabled, open, floating, ignoreInitialFocus, getTabbableElements, initialFocusRef]);\n  index(() => {\n    if (disabled || !floating) return;\n    let preventReturnFocusScroll = false;\n    const doc = getDocument(floating);\n    const previouslyFocusedElement = activeElement(doc);\n    const contextData = dataRef.current;\n    addPreviouslyFocusedElement(previouslyFocusedElement);\n\n    // Dismissing via outside press should always ignore `returnFocus` to\n    // prevent unwanted scrolling.\n    function onOpenChange(_ref) {\n      let {\n        reason,\n        event,\n        nested\n      } = _ref;\n      if (reason === 'escape-key' && refs.domReference.current) {\n        addPreviouslyFocusedElement(refs.domReference.current);\n      }\n      if (reason === 'hover' && event.type === 'mouseleave') {\n        preventReturnFocusRef.current = true;\n      }\n      if (reason !== 'outside-press') return;\n      if (nested) {\n        preventReturnFocusRef.current = false;\n        preventReturnFocusScroll = true;\n      } else {\n        preventReturnFocusRef.current = !(isVirtualClick(event) || isVirtualPointerEvent(event));\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n      const activeEl = activeElement(doc);\n      const isFocusInsideFloatingTree = contains(floating, activeEl) || tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n        var _node$context5;\n        return contains((_node$context5 = node.context) == null ? void 0 : _node$context5.elements.floating, activeEl);\n      });\n      const shouldFocusReference = isFocusInsideFloatingTree || contextData.openEvent && ['click', 'mousedown'].includes(contextData.openEvent.type);\n      if (shouldFocusReference && refs.domReference.current) {\n        addPreviouslyFocusedElement(refs.domReference.current);\n      }\n      const returnElement = getPreviouslyFocusedElement();\n      if (\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      returnFocusRef.current && !preventReturnFocusRef.current && isHTMLElement(returnElement) && (\n      // If the focus moved somewhere else after mount, avoid returning focus\n      // since it likely entered a different element which should be\n      // respected: https://github.com/floating-ui/floating-ui/issues/2607\n      returnElement !== activeEl && activeEl !== doc.body ? isFocusInsideFloatingTree : true)) {\n        enqueueFocus(returnElement, {\n          // When dismissing nested floating elements, by the time the rAF has\n          // executed, the menus will all have been unmounted. When they try\n          // to get focused, the calls get ignored — leaving the root\n          // reference focused as desired.\n          cancelPrevious: false,\n          preventScroll: preventReturnFocusScroll\n        });\n      }\n    };\n  }, [disabled, floating, returnFocusRef, dataRef, refs, events, tree, nodeId]);\n\n  // Synchronize the `context` & `modal` value to the FloatingPortal context.\n  // It will decide whether or not it needs to render its own guards.\n  index(() => {\n    if (disabled || !portalContext) return;\n    portalContext.setFocusManagerState({\n      modal,\n      closeOnFocusOut,\n      open,\n      onOpenChange,\n      refs\n    });\n    return () => {\n      portalContext.setFocusManagerState(null);\n    };\n  }, [disabled, portalContext, modal, open, onOpenChange, refs, closeOnFocusOut]);\n  index(() => {\n    if (disabled || !floating || typeof MutationObserver !== 'function' || ignoreInitialFocus) {\n      return;\n    }\n    const handleMutation = () => {\n      const tabIndex = floating.getAttribute('tabindex');\n      if (orderRef.current.includes('floating') || activeElement(getDocument(floating)) !== refs.domReference.current && getTabbableContent().length === 0) {\n        if (tabIndex !== '0') {\n          floating.setAttribute('tabindex', '0');\n        }\n      } else if (tabIndex !== '-1') {\n        floating.setAttribute('tabindex', '-1');\n      }\n    };\n    handleMutation();\n    const observer = new MutationObserver(handleMutation);\n    observer.observe(floating, {\n      childList: true,\n      subtree: true,\n      attributes: true\n    });\n    return () => {\n      observer.disconnect();\n    };\n  }, [disabled, floating, refs, orderRef, getTabbableContent, ignoreInitialFocus]);\n  function renderDismissButton(location) {\n    if (disabled || !visuallyHiddenDismiss || !modal) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(VisuallyHiddenDismiss, {\n      ref: location === 'start' ? startDismissButtonRef : endDismissButtonRef,\n      onClick: event => onOpenChange(false, event.nativeEvent)\n    }, typeof visuallyHiddenDismiss === 'string' ? visuallyHiddenDismiss : 'Dismiss');\n  }\n  const shouldRenderGuards = !disabled && guards && (isInsidePortal || modal);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.beforeInsideRef,\n    onFocus: event => {\n      if (modal) {\n        const els = getTabbableElements();\n        enqueueFocus(order[0] === 'reference' ? els[0] : els[els.length - 1]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        preventReturnFocusRef.current = false;\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const nextTabbable = getNextTabbable() || domReference;\n          nextTabbable == null || nextTabbable.focus();\n        } else {\n          var _portalContext$before;\n          (_portalContext$before = portalContext.beforeOutsideRef.current) == null || _portalContext$before.focus();\n        }\n      }\n    }\n  }), !isUntrappedTypeableCombobox && renderDismissButton('start'), children, renderDismissButton('end'), shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.afterInsideRef,\n    onFocus: event => {\n      if (modal) {\n        enqueueFocus(getTabbableElements()[0]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        if (closeOnFocusOut) {\n          preventReturnFocusRef.current = true;\n        }\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const prevTabbable = getPreviousTabbable() || domReference;\n          prevTabbable == null || prevTabbable.focus();\n        } else {\n          var _portalContext$afterO;\n          (_portalContext$afterO = portalContext.afterOutsideRef.current) == null || _portalContext$afterO.focus();\n        }\n      }\n    }\n  }));\n}\n\nfunction isButtonTarget(event) {\n  return isHTMLElement(event.target) && event.target.tagName === 'BUTTON';\n}\nfunction isSpaceIgnored(element) {\n  return isTypeableElement(element);\n}\n/**\n * Opens or closes the floating element when clicking the reference element.\n * @see https://floating-ui.com/docs/useClick\n */\nfunction useClick(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    elements: {\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    event: eventOption = 'click',\n    toggle = true,\n    ignoreMouse = false,\n    keyboardHandlers = true\n  } = props;\n  const pointerTypeRef = React.useRef();\n  const didKeyDownRef = React.useRef(false);\n  return React.useMemo(() => {\n    if (!enabled) return {};\n    return {\n      reference: {\n        onPointerDown(event) {\n          pointerTypeRef.current = event.pointerType;\n        },\n        onMouseDown(event) {\n          // Ignore all buttons except for the \"main\" button.\n          // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n          if (event.button !== 0) {\n            return;\n          }\n          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {\n            return;\n          }\n          if (eventOption === 'click') {\n            return;\n          }\n          if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'mousedown' : true)) {\n            onOpenChange(false, event.nativeEvent, 'click');\n          } else {\n            // Prevent stealing focus from the floating element\n            event.preventDefault();\n            onOpenChange(true, event.nativeEvent, 'click');\n          }\n        },\n        onClick(event) {\n          if (eventOption === 'mousedown' && pointerTypeRef.current) {\n            pointerTypeRef.current = undefined;\n            return;\n          }\n          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {\n            return;\n          }\n          if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'click' : true)) {\n            onOpenChange(false, event.nativeEvent, 'click');\n          } else {\n            onOpenChange(true, event.nativeEvent, 'click');\n          }\n        },\n        onKeyDown(event) {\n          pointerTypeRef.current = undefined;\n          if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event)) {\n            return;\n          }\n          if (event.key === ' ' && !isSpaceIgnored(domReference)) {\n            // Prevent scrolling\n            event.preventDefault();\n            didKeyDownRef.current = true;\n          }\n          if (event.key === 'Enter') {\n            if (open && toggle) {\n              onOpenChange(false, event.nativeEvent, 'click');\n            } else {\n              onOpenChange(true, event.nativeEvent, 'click');\n            }\n          }\n        },\n        onKeyUp(event) {\n          if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event) || isSpaceIgnored(domReference)) {\n            return;\n          }\n          if (event.key === ' ' && didKeyDownRef.current) {\n            didKeyDownRef.current = false;\n            if (open && toggle) {\n              onOpenChange(false, event.nativeEvent, 'click');\n            } else {\n              onOpenChange(true, event.nativeEvent, 'click');\n            }\n          }\n        }\n      }\n    };\n  }, [enabled, dataRef, eventOption, ignoreMouse, keyboardHandlers, domReference, toggle, open, onOpenChange]);\n}\n\nconst bubbleHandlerKeys = {\n  pointerdown: 'onPointerDown',\n  mousedown: 'onMouseDown',\n  click: 'onClick'\n};\nconst captureHandlerKeys = {\n  pointerdown: 'onPointerDownCapture',\n  mousedown: 'onMouseDownCapture',\n  click: 'onClickCapture'\n};\nconst normalizeProp = normalizable => {\n  var _normalizable$escapeK, _normalizable$outside;\n  return {\n    escapeKey: typeof normalizable === 'boolean' ? normalizable : (_normalizable$escapeK = normalizable == null ? void 0 : normalizable.escapeKey) != null ? _normalizable$escapeK : false,\n    outsidePress: typeof normalizable === 'boolean' ? normalizable : (_normalizable$outside = normalizable == null ? void 0 : normalizable.outsidePress) != null ? _normalizable$outside : true\n  };\n};\n/**\n * Closes the floating element when a dismissal is requested — by default, when\n * the user presses the `escape` key or outside of the floating element.\n * @see https://floating-ui.com/docs/useDismiss\n */\nfunction useDismiss(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    nodeId,\n    elements: {\n      reference,\n      domReference,\n      floating\n    },\n    dataRef\n  } = context;\n  const {\n    enabled = true,\n    escapeKey = true,\n    outsidePress: unstable_outsidePress = true,\n    outsidePressEvent = 'pointerdown',\n    referencePress = false,\n    referencePressEvent = 'pointerdown',\n    ancestorScroll = false,\n    bubbles,\n    capture\n  } = props;\n  const tree = useFloatingTree();\n  const outsidePressFn = useEffectEvent(typeof unstable_outsidePress === 'function' ? unstable_outsidePress : () => false);\n  const outsidePress = typeof unstable_outsidePress === 'function' ? outsidePressFn : unstable_outsidePress;\n  const insideReactTreeRef = React.useRef(false);\n  const endedOrStartedInsideRef = React.useRef(false);\n  const {\n    escapeKey: escapeKeyBubbles,\n    outsidePress: outsidePressBubbles\n  } = normalizeProp(bubbles);\n  const {\n    escapeKey: escapeKeyCapture,\n    outsidePress: outsidePressCapture\n  } = normalizeProp(capture);\n  const closeOnEscapeKeyDown = useEffectEvent(event => {\n    if (!open || !enabled || !escapeKey || event.key !== 'Escape') {\n      return;\n    }\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (!escapeKeyBubbles) {\n      event.stopPropagation();\n      if (children.length > 0) {\n        let shouldDismiss = true;\n        children.forEach(child => {\n          var _child$context;\n          if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {\n            shouldDismiss = false;\n            return;\n          }\n        });\n        if (!shouldDismiss) {\n          return;\n        }\n      }\n    }\n    onOpenChange(false, isReactEvent(event) ? event.nativeEvent : event, 'escape-key');\n  });\n  const closeOnEscapeKeyDownCapture = useEffectEvent(event => {\n    var _getTarget2;\n    const callback = () => {\n      var _getTarget;\n      closeOnEscapeKeyDown(event);\n      (_getTarget = getTarget(event)) == null || _getTarget.removeEventListener('keydown', callback);\n    };\n    (_getTarget2 = getTarget(event)) == null || _getTarget2.addEventListener('keydown', callback);\n  });\n  const closeOnPressOutside = useEffectEvent(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = insideReactTreeRef.current;\n    insideReactTreeRef.current = false;\n\n    // When click outside is lazy (`click` event), handle dragging.\n    // Don't close if:\n    // - The click started inside the floating element.\n    // - The click ended inside the floating element.\n    const endedOrStartedInside = endedOrStartedInsideRef.current;\n    endedOrStartedInsideRef.current = false;\n    if (outsidePressEvent === 'click' && endedOrStartedInside) {\n      return;\n    }\n    if (insideReactTree) {\n      return;\n    }\n    if (typeof outsidePress === 'function' && !outsidePress(event)) {\n      return;\n    }\n    const target = getTarget(event);\n    const inertSelector = \"[\" + createAttribute('inert') + \"]\";\n    const markers = getDocument(floating).querySelectorAll(inertSelector);\n    let targetRootAncestor = isElement(target) ? target : null;\n    while (targetRootAncestor && !isLastTraversableNode(targetRootAncestor)) {\n      const nextParent = getParentNode(targetRootAncestor);\n      if (isLastTraversableNode(nextParent) || !isElement(nextParent)) {\n        break;\n      }\n      targetRootAncestor = nextParent;\n    }\n\n    // Check if the click occurred on a third-party element injected after the\n    // floating element rendered.\n    if (markers.length && isElement(target) && !isRootElement(target) &&\n    // Clicked on a direct ancestor (e.g. FloatingOverlay).\n    !contains(target, floating) &&\n    // If the target root element contains none of the markers, then the\n    // element was injected after the floating element rendered.\n    Array.from(markers).every(marker => !contains(targetRootAncestor, marker))) {\n      return;\n    }\n\n    // Check if the click occurred on the scrollbar\n    if (isHTMLElement(target) && floating) {\n      // In Firefox, `target.scrollWidth > target.clientWidth` for inline\n      // elements.\n      const canScrollX = target.clientWidth > 0 && target.scrollWidth > target.clientWidth;\n      const canScrollY = target.clientHeight > 0 && target.scrollHeight > target.clientHeight;\n      let xCond = canScrollY && event.offsetX > target.clientWidth;\n\n      // In some browsers it is possible to change the <body> (or window)\n      // scrollbar to the left side, but is very rare and is difficult to\n      // check for. Plus, for modal dialogs with backdrops, it is more\n      // important that the backdrop is checked but not so much the window.\n      if (canScrollY) {\n        const isRTL = getComputedStyle(target).direction === 'rtl';\n        if (isRTL) {\n          xCond = event.offsetX <= target.offsetWidth - target.clientWidth;\n        }\n      }\n      if (xCond || canScrollX && event.offsetY > target.clientHeight) {\n        return;\n      }\n    }\n    const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n      var _node$context;\n      return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);\n    });\n    if (isEventTargetWithin(event, floating) || isEventTargetWithin(event, domReference) || targetIsInsideChildren) {\n      return;\n    }\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (children.length > 0) {\n      let shouldDismiss = true;\n      children.forEach(child => {\n        var _child$context2;\n        if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {\n          shouldDismiss = false;\n          return;\n        }\n      });\n      if (!shouldDismiss) {\n        return;\n      }\n    }\n    onOpenChange(false, event, 'outside-press');\n  });\n  const closeOnPressOutsideCapture = useEffectEvent(event => {\n    var _getTarget4;\n    const callback = () => {\n      var _getTarget3;\n      closeOnPressOutside(event);\n      (_getTarget3 = getTarget(event)) == null || _getTarget3.removeEventListener(outsidePressEvent, callback);\n    };\n    (_getTarget4 = getTarget(event)) == null || _getTarget4.addEventListener(outsidePressEvent, callback);\n  });\n  React.useEffect(() => {\n    if (!open || !enabled) {\n      return;\n    }\n    dataRef.current.__escapeKeyBubbles = escapeKeyBubbles;\n    dataRef.current.__outsidePressBubbles = outsidePressBubbles;\n    function onScroll(event) {\n      onOpenChange(false, event, 'ancestor-scroll');\n    }\n    const doc = getDocument(floating);\n    escapeKey && doc.addEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);\n    outsidePress && doc.addEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);\n    let ancestors = [];\n    if (ancestorScroll) {\n      if (isElement(domReference)) {\n        ancestors = getOverflowAncestors(domReference);\n      }\n      if (isElement(floating)) {\n        ancestors = ancestors.concat(getOverflowAncestors(floating));\n      }\n      if (!isElement(reference) && reference && reference.contextElement) {\n        ancestors = ancestors.concat(getOverflowAncestors(reference.contextElement));\n      }\n    }\n\n    // Ignore the visual viewport for scrolling dismissal (allow pinch-zoom)\n    ancestors = ancestors.filter(ancestor => {\n      var _doc$defaultView;\n      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);\n    });\n    ancestors.forEach(ancestor => {\n      ancestor.addEventListener('scroll', onScroll, {\n        passive: true\n      });\n    });\n    return () => {\n      escapeKey && doc.removeEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);\n      outsidePress && doc.removeEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);\n      ancestors.forEach(ancestor => {\n        ancestor.removeEventListener('scroll', onScroll);\n      });\n    };\n  }, [dataRef, floating, domReference, reference, escapeKey, outsidePress, outsidePressEvent, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, closeOnEscapeKeyDown, escapeKeyCapture, closeOnEscapeKeyDownCapture, closeOnPressOutside, outsidePressCapture, closeOnPressOutsideCapture]);\n  React.useEffect(() => {\n    insideReactTreeRef.current = false;\n  }, [outsidePress, outsidePressEvent]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        onKeyDown: closeOnEscapeKeyDown,\n        [bubbleHandlerKeys[referencePressEvent]]: event => {\n          if (referencePress) {\n            onOpenChange(false, event.nativeEvent, 'reference-press');\n          }\n        }\n      },\n      floating: {\n        onKeyDown: closeOnEscapeKeyDown,\n        onMouseDown() {\n          endedOrStartedInsideRef.current = true;\n        },\n        onMouseUp() {\n          endedOrStartedInsideRef.current = true;\n        },\n        [captureHandlerKeys[outsidePressEvent]]: () => {\n          insideReactTreeRef.current = true;\n        }\n      }\n    };\n  }, [enabled, referencePress, outsidePressEvent, referencePressEvent, onOpenChange, closeOnEscapeKeyDown]);\n}\n\n/**\n * Provides data to position a floating element and context to add interactions.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  var _options$elements;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    open = false,\n    onOpenChange: unstable_onOpenChange,\n    nodeId\n  } = options;\n  const [_domReference, setDomReference] = React.useState(null);\n  const [positionReference, _setPositionReference] = React.useState(null);\n  const optionDomReference = (_options$elements = options.elements) == null ? void 0 : _options$elements.reference;\n  const domReference = optionDomReference || _domReference;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (optionDomReference && !isElement(optionDomReference)) {\n      error('Cannot pass a virtual element to the `elements.reference` option,', 'as it must be a real DOM element. Use `refs.setPositionReference()`', 'instead.');\n    }\n  }\n  index(() => {\n    if (domReference) {\n      domReferenceRef.current = domReference;\n    }\n  }, [domReference]);\n  const position = useFloating$1({\n    ...options,\n    elements: {\n      ...options.elements,\n      ...(positionReference && {\n        reference: positionReference\n      })\n    }\n  });\n  const tree = useFloatingTree();\n  const nested = useFloatingParentNodeId() != null;\n  const onOpenChange = useEffectEvent((open, event, reason) => {\n    dataRef.current.openEvent = open ? event : undefined;\n    events.emit('openchange', {\n      open,\n      event,\n      reason,\n      nested\n    });\n    unstable_onOpenChange == null || unstable_onOpenChange(open, event, reason);\n  });\n  const domReferenceRef = React.useRef(null);\n  const dataRef = React.useRef({});\n  const events = React.useState(() => createPubSub())[0];\n  const floatingId = useId();\n  const setPositionReference = React.useCallback(node => {\n    const computedPositionReference = isElement(node) ? {\n      getBoundingClientRect: () => node.getBoundingClientRect(),\n      contextElement: node\n    } : node;\n    // Store the positionReference in state if the DOM reference is specified externally via the\n    // `elements.reference` option. This ensures that it won't be overridden on future renders.\n    _setPositionReference(computedPositionReference);\n    position.refs.setReference(computedPositionReference);\n  }, [position.refs]);\n  const setReference = React.useCallback(node => {\n    if (isElement(node) || node === null) {\n      domReferenceRef.current = node;\n      setDomReference(node);\n    }\n\n    // Backwards-compatibility for passing a virtual element to `reference`\n    // after it has set the DOM reference.\n    if (isElement(position.refs.reference.current) || position.refs.reference.current === null ||\n    // Don't allow setting virtual elements using the old technique back to\n    // `null` to support `positionReference` + an unstable `reference`\n    // callback ref.\n    node !== null && !isElement(node)) {\n      position.refs.setReference(node);\n    }\n  }, [position.refs]);\n  const refs = React.useMemo(() => ({\n    ...position.refs,\n    setReference,\n    setPositionReference,\n    domReference: domReferenceRef\n  }), [position.refs, setReference, setPositionReference]);\n  const elements = React.useMemo(() => ({\n    ...position.elements,\n    domReference: domReference\n  }), [position.elements, domReference]);\n  const context = React.useMemo(() => ({\n    ...position,\n    refs,\n    elements,\n    dataRef,\n    nodeId,\n    floatingId,\n    events,\n    open,\n    onOpenChange\n  }), [position, nodeId, floatingId, events, open, onOpenChange, refs, elements]);\n  index(() => {\n    const node = tree == null ? void 0 : tree.nodesRef.current.find(node => node.id === nodeId);\n    if (node) {\n      node.context = context;\n    }\n  });\n  return React.useMemo(() => ({\n    ...position,\n    context,\n    refs,\n    elements\n  }), [position, refs, elements, context]);\n}\n\n/**\n * Opens the floating element while the reference element has focus, like CSS\n * `:focus`.\n * @see https://floating-ui.com/docs/useFocus\n */\nfunction useFocus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    events,\n    refs,\n    elements: {\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    visibleOnly = true\n  } = props;\n  const blockFocusRef = React.useRef(false);\n  const timeoutRef = React.useRef();\n  const keyboardModalityRef = React.useRef(true);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    const win = getWindow(domReference);\n\n    // If the reference was focused and the user left the tab/window, and the\n    // floating element was not open, the focus should be blocked when they\n    // return to the tab/window.\n    function onBlur() {\n      if (!open && isHTMLElement(domReference) && domReference === activeElement(getDocument(domReference))) {\n        blockFocusRef.current = true;\n      }\n    }\n    function onKeyDown() {\n      keyboardModalityRef.current = true;\n    }\n    win.addEventListener('blur', onBlur);\n    win.addEventListener('keydown', onKeyDown, true);\n    return () => {\n      win.removeEventListener('blur', onBlur);\n      win.removeEventListener('keydown', onKeyDown, true);\n    };\n  }, [domReference, open, enabled]);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onOpenChange(_ref) {\n      let {\n        reason\n      } = _ref;\n      if (reason === 'reference-press' || reason === 'escape-key') {\n        blockFocusRef.current = true;\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n    };\n  }, [events, enabled]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        onPointerDown(event) {\n          if (isVirtualPointerEvent(event.nativeEvent)) return;\n          keyboardModalityRef.current = false;\n        },\n        onMouseLeave() {\n          blockFocusRef.current = false;\n        },\n        onFocus(event) {\n          if (blockFocusRef.current) return;\n          const target = getTarget(event.nativeEvent);\n          if (visibleOnly && isElement(target)) {\n            try {\n              // Mac Safari unreliably matches `:focus-visible` on the reference\n              // if focus was outside the page initially - use the fallback\n              // instead.\n              if (isSafari() && isMac()) throw Error();\n              if (!target.matches(':focus-visible')) return;\n            } catch (e) {\n              // Old browsers will throw an error when using `:focus-visible`.\n              if (!keyboardModalityRef.current && !isTypeableElement(target)) {\n                return;\n              }\n            }\n          }\n          onOpenChange(true, event.nativeEvent, 'focus');\n        },\n        onBlur(event) {\n          blockFocusRef.current = false;\n          const relatedTarget = event.relatedTarget;\n\n          // Hit the non-modal focus management portal guard. Focus will be\n          // moved into the floating element immediately after.\n          const movedToFocusGuard = isElement(relatedTarget) && relatedTarget.hasAttribute(createAttribute('focus-guard')) && relatedTarget.getAttribute('data-type') === 'outside';\n\n          // Wait for the window blur listener to fire.\n          timeoutRef.current = window.setTimeout(() => {\n            const activeEl = activeElement(domReference ? domReference.ownerDocument : document);\n\n            // Focus left the page, keep it open.\n            if (!relatedTarget && activeEl === domReference) return;\n\n            // When focusing the reference element (e.g. regular click), then\n            // clicking into the floating element, prevent it from hiding.\n            // Note: it must be focusable, e.g. `tabindex=\"-1\"`.\n            // We can not rely on relatedTarget to point to the correct element\n            // as it will only point to the shadow host of the newly focused element\n            // and not the element that actually has received focus if it is located\n            // inside a shadow root.\n            if (contains(refs.floating.current, activeEl) || contains(domReference, activeEl) || movedToFocusGuard) {\n              return;\n            }\n            onOpenChange(false, event.nativeEvent, 'focus');\n          });\n        }\n      }\n    };\n  }, [enabled, visibleOnly, domReference, refs, onOpenChange]);\n}\n\nconst ACTIVE_KEY = 'active';\nconst SELECTED_KEY = 'selected';\nfunction mergeProps(userProps, propsList, elementKey) {\n  const map = new Map();\n  const isItem = elementKey === 'item';\n  let domUserProps = userProps;\n  if (isItem && userProps) {\n    const {\n      [ACTIVE_KEY]: _,\n      [SELECTED_KEY]: __,\n      ...validProps\n    } = userProps;\n    domUserProps = validProps;\n  }\n  return {\n    ...(elementKey === 'floating' && {\n      tabIndex: -1\n    }),\n    ...domUserProps,\n    ...propsList.map(value => {\n      const propsOrGetProps = value ? value[elementKey] : null;\n      if (typeof propsOrGetProps === 'function') {\n        return userProps ? propsOrGetProps(userProps) : null;\n      }\n      return propsOrGetProps;\n    }).concat(userProps).reduce((acc, props) => {\n      if (!props) {\n        return acc;\n      }\n      Object.entries(props).forEach(_ref => {\n        let [key, value] = _ref;\n        if (isItem && [ACTIVE_KEY, SELECTED_KEY].includes(key)) {\n          return;\n        }\n        if (key.indexOf('on') === 0) {\n          if (!map.has(key)) {\n            map.set(key, []);\n          }\n          if (typeof value === 'function') {\n            var _map$get;\n            (_map$get = map.get(key)) == null || _map$get.push(value);\n            acc[key] = function () {\n              var _map$get2;\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n              return (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.map(fn => fn(...args)).find(val => val !== undefined);\n            };\n          }\n        } else {\n          acc[key] = value;\n        }\n      });\n      return acc;\n    }, {})\n  };\n}\n\n/**\n * Merges an array of interaction hooks' props into prop getters, allowing\n * event handler functions to be composed together without overwriting one\n * another.\n * @see https://floating-ui.com/docs/useInteractions\n */\nfunction useInteractions(propsList) {\n  if (propsList === void 0) {\n    propsList = [];\n  }\n  // The dependencies are a dynamic array, so we can't use the linter's\n  // suggestion to add it to the deps array.\n  const deps = propsList;\n  const getReferenceProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'reference'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n  const getFloatingProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'floating'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n  const getItemProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'item'),\n  // Granularly check for `item` changes, because the `getItemProps` getter\n  // should be as referentially stable as possible since it may be passed as\n  // a prop to many components. All `item` key values must therefore be\n  // memoized.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  propsList.map(key => key == null ? void 0 : key.item));\n  return React.useMemo(() => ({\n    getReferenceProps,\n    getFloatingProps,\n    getItemProps\n  }), [getReferenceProps, getFloatingProps, getItemProps]);\n}\n\nlet isPreventScrollSupported = false;\nfunction doSwitch(orientation, vertical, horizontal) {\n  switch (orientation) {\n    case 'vertical':\n      return vertical;\n    case 'horizontal':\n      return horizontal;\n    default:\n      return vertical || horizontal;\n  }\n}\nfunction isMainOrientationKey(key, orientation) {\n  const vertical = key === ARROW_UP || key === ARROW_DOWN;\n  const horizontal = key === ARROW_LEFT || key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isMainOrientationToEndKey(key, orientation, rtl) {\n  const vertical = key === ARROW_DOWN;\n  const horizontal = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal) || key === 'Enter' || key === ' ' || key === '';\n}\nfunction isCrossOrientationOpenKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  const horizontal = key === ARROW_DOWN;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isCrossOrientationCloseKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_RIGHT : key === ARROW_LEFT;\n  const horizontal = key === ARROW_UP;\n  return doSwitch(orientation, vertical, horizontal);\n}\n/**\n * Adds arrow key-based navigation of a list of items, either using real DOM\n * focus or virtual focus.\n * @see https://floating-ui.com/docs/useListNavigation\n */\nfunction useListNavigation(context, props) {\n  const {\n    open,\n    onOpenChange,\n    refs,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onNavigate: unstable_onNavigate = () => {},\n    enabled = true,\n    selectedIndex = null,\n    allowEscape = false,\n    loop = false,\n    nested = false,\n    rtl = false,\n    virtual = false,\n    focusItemOnOpen = 'auto',\n    focusItemOnHover = true,\n    openOnArrowKeyDown = true,\n    disabledIndices = undefined,\n    orientation = 'vertical',\n    cols = 1,\n    scrollItemIntoView = true,\n    virtualItemRef,\n    itemSizes,\n    dense = false\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (allowEscape) {\n      if (!loop) {\n        warn('`useListNavigation` looping must be enabled to allow escaping.');\n      }\n      if (!virtual) {\n        warn('`useListNavigation` must be virtual to allow escaping.');\n      }\n    }\n    if (orientation === 'vertical' && cols > 1) {\n      warn('In grid list navigation mode (`cols` > 1), the `orientation` should', 'be either \"horizontal\" or \"both\".');\n    }\n  }\n  const parentId = useFloatingParentNodeId();\n  const tree = useFloatingTree();\n  const onNavigate = useEffectEvent(unstable_onNavigate);\n  const focusItemOnOpenRef = React.useRef(focusItemOnOpen);\n  const indexRef = React.useRef(selectedIndex != null ? selectedIndex : -1);\n  const keyRef = React.useRef(null);\n  const isPointerModalityRef = React.useRef(true);\n  const previousOnNavigateRef = React.useRef(onNavigate);\n  const previousMountedRef = React.useRef(!!floating);\n  const forceSyncFocus = React.useRef(false);\n  const forceScrollIntoViewRef = React.useRef(false);\n  const disabledIndicesRef = useLatestRef(disabledIndices);\n  const latestOpenRef = useLatestRef(open);\n  const scrollItemIntoViewRef = useLatestRef(scrollItemIntoView);\n  const [activeId, setActiveId] = React.useState();\n  const [virtualId, setVirtualId] = React.useState();\n  const focusItem = useEffectEvent(function (listRef, indexRef, forceScrollIntoView) {\n    if (forceScrollIntoView === void 0) {\n      forceScrollIntoView = false;\n    }\n    const item = listRef.current[indexRef.current];\n    if (!item) return;\n    if (virtual) {\n      setActiveId(item.id);\n      tree == null || tree.events.emit('virtualfocus', item);\n      if (virtualItemRef) {\n        virtualItemRef.current = item;\n      }\n    } else {\n      enqueueFocus(item, {\n        preventScroll: true,\n        // Mac Safari does not move the virtual cursor unless the focus call\n        // is sync. However, for the very first focus call, we need to wait\n        // for the position to be ready in order to prevent unwanted\n        // scrolling. This means the virtual cursor will not move to the first\n        // item when first opening the floating element, but will on\n        // subsequent calls. `preventScroll` is supported in modern Safari,\n        // so we can use that instead.\n        // iOS Safari must be async or the first item will not be focused.\n        sync: isMac() && isSafari() ? isPreventScrollSupported || forceSyncFocus.current : false\n      });\n    }\n    requestAnimationFrame(() => {\n      const scrollIntoViewOptions = scrollItemIntoViewRef.current;\n      const shouldScrollIntoView = scrollIntoViewOptions && item && (forceScrollIntoView || !isPointerModalityRef.current);\n      if (shouldScrollIntoView) {\n        // JSDOM doesn't support `.scrollIntoView()` but it's widely supported\n        // by all browsers.\n        item.scrollIntoView == null || item.scrollIntoView(typeof scrollIntoViewOptions === 'boolean' ? {\n          block: 'nearest',\n          inline: 'nearest'\n        } : scrollIntoViewOptions);\n      }\n    });\n  });\n  index(() => {\n    document.createElement('div').focus({\n      get preventScroll() {\n        isPreventScrollSupported = true;\n        return false;\n      }\n    });\n  }, []);\n\n  // Sync `selectedIndex` to be the `activeIndex` upon opening the floating\n  // element. Also, reset `activeIndex` upon closing the floating element.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (open && floating) {\n      if (focusItemOnOpenRef.current && selectedIndex != null) {\n        // Regardless of the pointer modality, we want to ensure the selected\n        // item comes into view when the floating element is opened.\n        forceScrollIntoViewRef.current = true;\n        indexRef.current = selectedIndex;\n        onNavigate(selectedIndex);\n      }\n    } else if (previousMountedRef.current) {\n      // Since the user can specify `onNavigate` conditionally\n      // (onNavigate: open ? setActiveIndex : setSelectedIndex),\n      // we store and call the previous function.\n      indexRef.current = -1;\n      previousOnNavigateRef.current(null);\n    }\n  }, [enabled, open, floating, selectedIndex, onNavigate]);\n\n  // Sync `activeIndex` to be the focused item while the floating element is\n  // open.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (open && floating) {\n      if (activeIndex == null) {\n        forceSyncFocus.current = false;\n        if (selectedIndex != null) {\n          return;\n        }\n\n        // Reset while the floating element was open (e.g. the list changed).\n        if (previousMountedRef.current) {\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n        }\n\n        // Initial sync.\n        if (!previousMountedRef.current && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === true && keyRef.current == null)) {\n          let runs = 0;\n          const waitForListPopulated = () => {\n            if (listRef.current[0] == null) {\n              // Avoid letting the browser paint if possible on the first try,\n              // otherwise use rAF. Don't try more than twice, since something\n              // is wrong otherwise.\n              if (runs < 2) {\n                const scheduler = runs ? requestAnimationFrame : queueMicrotask;\n                scheduler(waitForListPopulated);\n              }\n              runs++;\n            } else {\n              indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current);\n              keyRef.current = null;\n              onNavigate(indexRef.current);\n            }\n          };\n          waitForListPopulated();\n        }\n      } else if (!isIndexOutOfBounds(listRef, activeIndex)) {\n        indexRef.current = activeIndex;\n        focusItem(listRef, indexRef, forceScrollIntoViewRef.current);\n        forceScrollIntoViewRef.current = false;\n      }\n    }\n  }, [enabled, open, floating, activeIndex, selectedIndex, nested, listRef, orientation, rtl, onNavigate, focusItem, disabledIndicesRef]);\n\n  // Ensure the parent floating element has focus when a nested child closes\n  // to allow arrow key navigation to work after the pointer leaves the child.\n  index(() => {\n    var _nodes$find;\n    if (!enabled || floating || !tree || virtual || !previousMountedRef.current) {\n      return;\n    }\n    const nodes = tree.nodesRef.current;\n    const parent = (_nodes$find = nodes.find(node => node.id === parentId)) == null || (_nodes$find = _nodes$find.context) == null ? void 0 : _nodes$find.elements.floating;\n    const activeEl = activeElement(getDocument(floating));\n    const treeContainsActiveEl = nodes.some(node => node.context && contains(node.context.elements.floating, activeEl));\n    if (parent && !treeContainsActiveEl && isPointerModalityRef.current) {\n      parent.focus({\n        preventScroll: true\n      });\n    }\n  }, [enabled, floating, tree, parentId, virtual]);\n  index(() => {\n    if (!enabled || !tree || !virtual || parentId) return;\n    function handleVirtualFocus(item) {\n      setVirtualId(item.id);\n      if (virtualItemRef) {\n        virtualItemRef.current = item;\n      }\n    }\n    tree.events.on('virtualfocus', handleVirtualFocus);\n    return () => {\n      tree.events.off('virtualfocus', handleVirtualFocus);\n    };\n  }, [enabled, tree, virtual, parentId, virtualItemRef]);\n  index(() => {\n    previousOnNavigateRef.current = onNavigate;\n    previousMountedRef.current = !!floating;\n  });\n  index(() => {\n    if (!open) {\n      keyRef.current = null;\n    }\n  }, [open]);\n  const hasActiveIndex = activeIndex != null;\n  const item = React.useMemo(() => {\n    function syncCurrentTarget(currentTarget) {\n      if (!open) return;\n      const index = listRef.current.indexOf(currentTarget);\n      if (index !== -1) {\n        onNavigate(index);\n      }\n    }\n    const props = {\n      onFocus(_ref) {\n        let {\n          currentTarget\n        } = _ref;\n        syncCurrentTarget(currentTarget);\n      },\n      onClick: _ref2 => {\n        let {\n          currentTarget\n        } = _ref2;\n        return currentTarget.focus({\n          preventScroll: true\n        });\n      },\n      // Safari\n      ...(focusItemOnHover && {\n        onMouseMove(_ref3) {\n          let {\n            currentTarget\n          } = _ref3;\n          syncCurrentTarget(currentTarget);\n        },\n        onPointerLeave(_ref4) {\n          let {\n            pointerType\n          } = _ref4;\n          if (!isPointerModalityRef.current || pointerType === 'touch') {\n            return;\n          }\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n          onNavigate(null);\n          if (!virtual) {\n            enqueueFocus(refs.floating.current, {\n              preventScroll: true\n            });\n          }\n        }\n      })\n    };\n    return props;\n  }, [open, refs, focusItem, focusItemOnHover, listRef, onNavigate, virtual]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    const disabledIndices = disabledIndicesRef.current;\n    function onKeyDown(event) {\n      isPointerModalityRef.current = false;\n      forceSyncFocus.current = true;\n\n      // If the floating element is animating out, ignore navigation. Otherwise,\n      // the `activeIndex` gets set to 0 despite not being open so the next time\n      // the user ArrowDowns, the first item won't be focused.\n      if (!latestOpenRef.current && event.currentTarget === refs.floating.current) {\n        return;\n      }\n      if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl)) {\n        stopEvent(event);\n        onOpenChange(false, event.nativeEvent, 'list-navigation');\n        if (isHTMLElement(domReference) && !virtual) {\n          domReference.focus();\n        }\n        return;\n      }\n      const currentIndex = indexRef.current;\n      const minIndex = getMinIndex(listRef, disabledIndices);\n      const maxIndex = getMaxIndex(listRef, disabledIndices);\n      if (event.key === 'Home') {\n        stopEvent(event);\n        indexRef.current = minIndex;\n        onNavigate(indexRef.current);\n      }\n      if (event.key === 'End') {\n        stopEvent(event);\n        indexRef.current = maxIndex;\n        onNavigate(indexRef.current);\n      }\n\n      // Grid navigation.\n      if (cols > 1) {\n        const sizes = itemSizes || Array.from({\n          length: listRef.current.length\n        }, () => ({\n          width: 1,\n          height: 1\n        }));\n        // To calculate movements on the grid, we use hypothetical cell indices\n        // as if every item was 1x1, then convert back to real indices.\n        const cellMap = buildCellMap(sizes, cols, dense);\n        const minGridIndex = cellMap.findIndex(index => index != null && !(disabledIndices != null && disabledIndices.includes(index)));\n        // last enabled index\n        const maxGridIndex = cellMap.reduce((foundIndex, index, cellIndex) => index != null && !(disabledIndices != null && disabledIndices.includes(index)) ? cellIndex : foundIndex, -1);\n        indexRef.current = cellMap[getGridNavigatedIndex({\n          current: cellMap.map(itemIndex => itemIndex != null ? listRef.current[itemIndex] : null)\n        }, {\n          event,\n          orientation,\n          loop,\n          cols,\n          // treat undefined (empty grid spaces) as disabled indices so we\n          // don't end up in them\n          disabledIndices: getCellIndices([...(disabledIndices || []), undefined], cellMap),\n          minIndex: minGridIndex,\n          maxIndex: maxGridIndex,\n          prevIndex: getCellIndexOfCorner(indexRef.current, sizes, cellMap, cols,\n          // use a corner matching the edge closest to the direction\n          // we're moving in so we don't end up in the same item. Prefer\n          // top/left over bottom/right.\n          event.key === ARROW_DOWN ? 'bl' : event.key === ARROW_RIGHT ? 'tr' : 'tl'),\n          stopEvent: true\n        })]; // navigated cell will never be nullish\n\n        onNavigate(indexRef.current);\n        if (orientation === 'both') {\n          return;\n        }\n      }\n      if (isMainOrientationKey(event.key, orientation)) {\n        stopEvent(event);\n\n        // Reset the index if no item is focused.\n        if (open && !virtual && activeElement(event.currentTarget.ownerDocument) === event.currentTarget) {\n          indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex;\n          onNavigate(indexRef.current);\n          return;\n        }\n        if (isMainOrientationToEndKey(event.key, orientation, rtl)) {\n          if (loop) {\n            indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              disabledIndices\n            });\n          } else {\n            indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              disabledIndices\n            }));\n          }\n        } else {\n          if (loop) {\n            indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              decrement: true,\n              disabledIndices\n            });\n          } else {\n            indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              decrement: true,\n              disabledIndices\n            }));\n          }\n        }\n        if (isIndexOutOfBounds(listRef, indexRef.current)) {\n          onNavigate(null);\n        } else {\n          onNavigate(indexRef.current);\n        }\n      }\n    }\n    function checkVirtualMouse(event) {\n      if (focusItemOnOpen === 'auto' && isVirtualClick(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    function checkVirtualPointer(event) {\n      // `pointerdown` fires first, reset the state then perform the checks.\n      focusItemOnOpenRef.current = focusItemOnOpen;\n      if (focusItemOnOpen === 'auto' && isVirtualPointerEvent(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    const ariaActiveDescendantProp = virtual && open && hasActiveIndex && {\n      'aria-activedescendant': virtualId || activeId\n    };\n    const activeItem = listRef.current.find(item => (item == null ? void 0 : item.id) === activeId);\n    return {\n      reference: {\n        ...ariaActiveDescendantProp,\n        onKeyDown(event) {\n          isPointerModalityRef.current = false;\n          const isArrowKey = event.key.indexOf('Arrow') === 0;\n          const isCrossOpenKey = isCrossOrientationOpenKey(event.key, orientation, rtl);\n          const isCrossCloseKey = isCrossOrientationCloseKey(event.key, orientation, rtl);\n          const isMainKey = isMainOrientationKey(event.key, orientation);\n          const isNavigationKey = (nested ? isCrossOpenKey : isMainKey) || event.key === 'Enter' || event.key.trim() === '';\n          if (virtual && open) {\n            const rootNode = tree == null ? void 0 : tree.nodesRef.current.find(node => node.parentId == null);\n            const deepestNode = tree && rootNode ? getDeepestNode(tree.nodesRef.current, rootNode.id) : null;\n            if (isArrowKey && deepestNode && virtualItemRef) {\n              const eventObject = new KeyboardEvent('keydown', {\n                key: event.key,\n                bubbles: true\n              });\n              if (isCrossOpenKey || isCrossCloseKey) {\n                var _deepestNode$context, _deepestNode$context2;\n                const isCurrentTarget = ((_deepestNode$context = deepestNode.context) == null ? void 0 : _deepestNode$context.elements.domReference) === event.currentTarget;\n                const dispatchItem = isCrossCloseKey && !isCurrentTarget ? (_deepestNode$context2 = deepestNode.context) == null ? void 0 : _deepestNode$context2.elements.domReference : isCrossOpenKey ? activeItem : null;\n                if (dispatchItem) {\n                  stopEvent(event);\n                  dispatchItem.dispatchEvent(eventObject);\n                  setVirtualId(undefined);\n                }\n              }\n              if (isMainKey && deepestNode.context) {\n                if (deepestNode.context.open && deepestNode.parentId && event.currentTarget !== deepestNode.context.elements.domReference) {\n                  var _deepestNode$context$;\n                  stopEvent(event);\n                  (_deepestNode$context$ = deepestNode.context.elements.domReference) == null || _deepestNode$context$.dispatchEvent(eventObject);\n                  return;\n                }\n              }\n            }\n            return onKeyDown(event);\n          }\n\n          // If a floating element should not open on arrow key down, avoid\n          // setting `activeIndex` while it's closed.\n          if (!open && !openOnArrowKeyDown && isArrowKey) {\n            return;\n          }\n          if (isNavigationKey) {\n            keyRef.current = nested && isMainKey ? null : event.key;\n          }\n          if (nested) {\n            if (isCrossOpenKey) {\n              stopEvent(event);\n              if (open) {\n                indexRef.current = getMinIndex(listRef, disabledIndices);\n                onNavigate(indexRef.current);\n              } else {\n                onOpenChange(true, event.nativeEvent, 'list-navigation');\n              }\n            }\n            return;\n          }\n          if (isMainKey) {\n            if (selectedIndex != null) {\n              indexRef.current = selectedIndex;\n            }\n            stopEvent(event);\n            if (!open && openOnArrowKeyDown) {\n              onOpenChange(true, event.nativeEvent, 'list-navigation');\n            } else {\n              onKeyDown(event);\n            }\n            if (open) {\n              onNavigate(indexRef.current);\n            }\n          }\n        },\n        onFocus() {\n          if (open) {\n            onNavigate(null);\n          }\n        },\n        onPointerDown: checkVirtualPointer,\n        onMouseDown: checkVirtualMouse,\n        onClick: checkVirtualMouse\n      },\n      floating: {\n        'aria-orientation': orientation === 'both' ? undefined : orientation,\n        ...(!isTypeableCombobox(domReference) && ariaActiveDescendantProp),\n        onKeyDown,\n        onPointerMove() {\n          isPointerModalityRef.current = true;\n        }\n      },\n      item\n    };\n  }, [domReference, refs, activeId, virtualId, disabledIndicesRef, latestOpenRef, listRef, enabled, orientation, rtl, virtual, open, hasActiveIndex, nested, selectedIndex, openOnArrowKeyDown, allowEscape, cols, loop, focusItemOnOpen, onNavigate, onOpenChange, item, tree, virtualItemRef, itemSizes, dense]);\n}\n\nconst componentRoleToAriaRoleMap = /*#__PURE__*/new Map([['select', 'listbox'], ['combobox', 'listbox'], ['label', false]]);\n\n/**\n * Adds base screen reader props to the reference and floating elements for a\n * given floating element `role`.\n * @see https://floating-ui.com/docs/useRole\n */\nfunction useRole(context, props) {\n  var _componentRoleToAriaR;\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    floatingId\n  } = context;\n  const {\n    enabled = true,\n    role = 'dialog'\n  } = props;\n  const ariaRole = (_componentRoleToAriaR = componentRoleToAriaRoleMap.get(role)) != null ? _componentRoleToAriaR : role;\n  const referenceId = useId();\n  const parentId = useFloatingParentNodeId();\n  const isNested = parentId != null;\n  return React.useMemo(() => {\n    if (!enabled) return {};\n    const floatingProps = {\n      id: floatingId,\n      ...(ariaRole && {\n        role: ariaRole\n      })\n    };\n    if (ariaRole === 'tooltip' || role === 'label') {\n      return {\n        reference: {\n          [\"aria-\" + (role === 'label' ? 'labelledby' : 'describedby')]: open ? floatingId : undefined\n        },\n        floating: floatingProps\n      };\n    }\n    return {\n      reference: {\n        'aria-expanded': open ? 'true' : 'false',\n        'aria-haspopup': ariaRole === 'alertdialog' ? 'dialog' : ariaRole,\n        'aria-controls': open ? floatingId : undefined,\n        ...(ariaRole === 'listbox' && {\n          role: 'combobox'\n        }),\n        ...(ariaRole === 'menu' && {\n          id: referenceId\n        }),\n        ...(ariaRole === 'menu' && isNested && {\n          role: 'menuitem'\n        }),\n        ...(role === 'select' && {\n          'aria-autocomplete': 'none'\n        }),\n        ...(role === 'combobox' && {\n          'aria-autocomplete': 'list'\n        })\n      },\n      floating: {\n        ...floatingProps,\n        ...(ariaRole === 'menu' && {\n          'aria-labelledby': referenceId\n        })\n      },\n      item(_ref) {\n        let {\n          active,\n          selected\n        } = _ref;\n        const commonProps = {\n          role: 'option',\n          ...(active && {\n            id: floatingId + \"-option\"\n          })\n        };\n\n        // For `menu`, we are unable to tell if the item is a `menuitemradio`\n        // or `menuitemcheckbox`. For backwards-compatibility reasons, also\n        // avoid defaulting to `menuitem` as it may overwrite custom role props.\n        switch (role) {\n          case 'select':\n            return {\n              ...commonProps,\n              'aria-selected': active && selected\n            };\n          case 'combobox':\n            {\n              return {\n                ...commonProps,\n                ...(active && {\n                  'aria-selected': true\n                })\n              };\n            }\n        }\n        return {};\n      }\n    };\n  }, [enabled, role, ariaRole, open, floatingId, referenceId, isNested]);\n}\n\n// Converts a JS style key like `backgroundColor` to a CSS transition-property\n// like `background-color`.\nconst camelCaseToKebabCase = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase());\nfunction execWithArgsOrReturn(valueOrFn, args) {\n  return typeof valueOrFn === 'function' ? valueOrFn(args) : valueOrFn;\n}\nfunction useDelayUnmount(open, durationMs) {\n  const [isMounted, setIsMounted] = React.useState(open);\n  if (open && !isMounted) {\n    setIsMounted(true);\n  }\n  React.useEffect(() => {\n    if (!open) {\n      const timeout = setTimeout(() => setIsMounted(false), durationMs);\n      return () => clearTimeout(timeout);\n    }\n  }, [open, durationMs]);\n  return isMounted;\n}\n/**\n * Provides a status string to apply CSS transitions to a floating element,\n * correctly handling placement-aware transitions.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstatus\n */\nfunction useTransitionStatus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    elements: {\n      floating\n    }\n  } = context;\n  const {\n    duration = 250\n  } = props;\n  const isNumberDuration = typeof duration === 'number';\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [initiated, setInitiated] = React.useState(false);\n  const [status, setStatus] = React.useState('unmounted');\n  const isMounted = useDelayUnmount(open, closeDuration);\n\n  // `initiated` check prevents this `setState` call from breaking\n  // <FloatingPortal />. This call is necessary to ensure subsequent opens\n  // after the initial one allows the correct side animation to play when the\n  // placement has changed.\n  index(() => {\n    if (initiated && !isMounted) {\n      setStatus('unmounted');\n    }\n  }, [initiated, isMounted]);\n  index(() => {\n    if (!floating) return;\n    if (open) {\n      setStatus('initial');\n      const frame = requestAnimationFrame(() => {\n        setStatus('open');\n      });\n      return () => {\n        cancelAnimationFrame(frame);\n      };\n    }\n    setInitiated(true);\n    setStatus('close');\n  }, [open, floating]);\n  return {\n    isMounted,\n    status\n  };\n}\n/**\n * Provides styles to apply CSS transitions to a floating element, correctly\n * handling placement-aware transitions. Wrapper around `useTransitionStatus`.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstyles\n */\nfunction useTransitionStyles(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    initial: unstable_initial = {\n      opacity: 0\n    },\n    open: unstable_open,\n    close: unstable_close,\n    common: unstable_common,\n    duration = 250\n  } = props;\n  const placement = context.placement;\n  const side = placement.split('-')[0];\n  const fnArgs = React.useMemo(() => ({\n    side,\n    placement\n  }), [side, placement]);\n  const isNumberDuration = typeof duration === 'number';\n  const openDuration = (isNumberDuration ? duration : duration.open) || 0;\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [styles, setStyles] = React.useState(() => ({\n    ...execWithArgsOrReturn(unstable_common, fnArgs),\n    ...execWithArgsOrReturn(unstable_initial, fnArgs)\n  }));\n  const {\n    isMounted,\n    status\n  } = useTransitionStatus(context, {\n    duration\n  });\n  const initialRef = useLatestRef(unstable_initial);\n  const openRef = useLatestRef(unstable_open);\n  const closeRef = useLatestRef(unstable_close);\n  const commonRef = useLatestRef(unstable_common);\n  index(() => {\n    const initialStyles = execWithArgsOrReturn(initialRef.current, fnArgs);\n    const closeStyles = execWithArgsOrReturn(closeRef.current, fnArgs);\n    const commonStyles = execWithArgsOrReturn(commonRef.current, fnArgs);\n    const openStyles = execWithArgsOrReturn(openRef.current, fnArgs) || Object.keys(initialStyles).reduce((acc, key) => {\n      acc[key] = '';\n      return acc;\n    }, {});\n    if (status === 'initial') {\n      setStyles(styles => ({\n        transitionProperty: styles.transitionProperty,\n        ...commonStyles,\n        ...initialStyles\n      }));\n    }\n    if (status === 'open') {\n      setStyles({\n        transitionProperty: Object.keys(openStyles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: openDuration + \"ms\",\n        ...commonStyles,\n        ...openStyles\n      });\n    }\n    if (status === 'close') {\n      const styles = closeStyles || initialStyles;\n      setStyles({\n        transitionProperty: Object.keys(styles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: closeDuration + \"ms\",\n        ...commonStyles,\n        ...styles\n      });\n    }\n  }, [closeDuration, closeRef, initialRef, openRef, commonRef, openDuration, status, fnArgs]);\n  return {\n    isMounted,\n    styles\n  };\n}\n\nexport { FloatingArrow, FloatingFocusManager, FloatingPortal, getOverflowAncestors, platform, useClick, useDismiss, useFloating, useFloatingParentNodeId, useFloatingPortalNode, useFloatingTree, useFocus, useHover, useId, useInteractions, useListNavigation, useMergeRefs, useRole, useTransitionStatus, useTransitionStyles };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}