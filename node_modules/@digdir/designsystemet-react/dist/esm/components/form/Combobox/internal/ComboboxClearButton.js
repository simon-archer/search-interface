'use client';
import { jsx } from 'react/jsx-runtime';
import { useContext } from 'react';
import { XMarkIcon } from '@navikt/aksel-icons';
import { clsx } from '../../../../node_modules/clsx/dist/lite.js';
import { ComboboxContext } from '../ComboboxContext.js';

const ComboboxClearButton = () => {
    const context = useContext(ComboboxContext);
    if (!context) {
        throw new Error('ComboboxContext is missing');
    }
    const { readOnly, disabled, clearButtonLabel, handleSelectOption } = context;
    return (jsx("button", { disabled: disabled, className: clsx('fds-combobox__clear-button', `fds-focus`), onClick: () => {
            if (readOnly)
                return;
            if (disabled)
                return;
            handleSelectOption({ option: null, clear: true });
        }, onKeyDown: (e) => {
            if (readOnly)
                return;
            if (disabled)
                return;
            if (e.key === 'Enter') {
                e.stopPropagation();
                handleSelectOption({ option: null, clear: true });
            }
        }, type: 'button', "aria-label": clearButtonLabel, children: jsx(XMarkIcon, { fontSize: '1.5em', title: 'Clear selection' }) }));
};
ComboboxClearButton.displayName = 'ComboboxClearButton';
var ComboboxClearButton$1 = ComboboxClearButton;

export { ComboboxClearButton, ComboboxClearButton$1 as default };
