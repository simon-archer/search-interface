'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var lite = require('../../../../node_modules/clsx/dist/lite.js');
var ComboboxContext = require('../ComboboxContext.js');
var SelectedIcon = require('./SelectedIcon.js');
var Description = require('./Description.js');
var useComboboxOption = require('./useComboboxOption.js');
var objectUtils = require('../../../../utilities/objectUtils.js');
var Label = require('../../../Typography/Label/Label.js');

const ComboboxOption = React.memo(React.forwardRef(({ value, description, children, className, ...rest }, forwardedRef) => {
    const labelId = React.useId();
    const { id, ref, selected, active, onOptionClick } = useComboboxOption({
        id: rest.id,
        ref: forwardedRef,
        value,
    });
    const context = React.useContext(ComboboxContext.ComboboxContext);
    if (!context) {
        throw new Error('ComboboxOption must be used within a Combobox');
    }
    const { size, multiple, getItemProps } = context;
    const props = getItemProps();
    return (jsxRuntime.jsxs("button", { ref: ref, id: id, role: 'option', type: 'button', "aria-selected": !!selected, "aria-labelledby": labelId, tabIndex: -1, onClick: (e) => {
            onOptionClick();
            rest.onClick?.(e);
        }, className: lite.clsx('fds-combobox__option', active && 'fds-combobox__option--active', multiple && 'fds-combobox__option--multiple', className), ...objectUtils.omit(['displayValue'], rest), ...objectUtils.omit(['onClick', 'onPointerLeave'], props), children: [jsxRuntime.jsx(Label.Label, { asChild: true, size: size, children: jsxRuntime.jsx("span", { children: jsxRuntime.jsx(SelectedIcon.SelectedIcon, { multiple: multiple, selected: !!selected }) }) }), jsxRuntime.jsxs(Label.Label, { className: 'fds-combobox__option__label', size: size, id: labelId, children: [children, description && (jsxRuntime.jsx(Description.default, { children: description }))] })] }));
}));
ComboboxOption.displayName = 'ComboboxOption';

exports.ComboboxOption = ComboboxOption;
