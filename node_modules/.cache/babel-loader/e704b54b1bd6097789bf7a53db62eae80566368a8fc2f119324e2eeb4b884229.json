{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useFloating, useMergeRefs, FloatingFocusManager } from '../../node_modules/@floating-ui/react/dist/floating-ui.react.js';\nimport { forwardRef, useRef, useContext, useEffect } from 'react';\nimport { Slot as $5e63c961fc1ce211$export$8c6ed5c666ac1360 } from '../../node_modules/@radix-ui/react-slot/dist/index.js';\nimport { clsx } from '../../node_modules/clsx/dist/lite.js';\nimport { useScrollLock } from './useScrollLock.js';\nimport { useModalState } from './useModalState.js';\nimport { ModalContext } from './ModalRoot.js';\nconst ModalDialog = forwardRef(({\n  onInteractOutside,\n  onClose,\n  onBeforeClose,\n  asChild,\n  className,\n  children,\n  ...rest\n}, ref) => {\n  const Component = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : 'dialog';\n  // This local ref is used to make sure the modal works without a ModalRoot\n  const modalDialogRef = useRef(null);\n  const {\n    context\n  } = useFloating();\n  const modal = useContext(ModalContext);\n  const open = useModalState(modalDialogRef);\n  const {\n    modalRef,\n    setOpen\n  } = modal;\n  modal.closeModal = () => {\n    if (onBeforeClose && onBeforeClose() === false) return;\n    modalDialogRef.current?.close();\n  };\n  const mergedRefs = useMergeRefs([modalRef, ref, modalDialogRef]);\n  useScrollLock(modalDialogRef, 'fds-modal--lock-scroll');\n  useEffect(() => {\n    setOpen(open);\n  }, [open, setOpen]);\n  useEffect(() => {\n    const modalEl = modalRef.current;\n    const handleBackdropClick = e => {\n      if (e.target === modalEl && onInteractOutside) {\n        // Fix bug where if you select text spanning two divs it thinks you clicked outside\n        if (window.getSelection()?.toString()) return;\n        onInteractOutside?.();\n      }\n    };\n    if (modalEl) modalEl.addEventListener('click', handleBackdropClick);\n    return () => {\n      if (modalEl) {\n        modalEl.removeEventListener('click', handleBackdropClick);\n      }\n    };\n  }, [onInteractOutside, modalRef, onBeforeClose, ref]);\n  useEffect(() => {\n    const modalEl = modalRef.current;\n    const handleModalClose = () => {\n      onClose?.();\n    };\n    if (modalEl) modalEl.addEventListener('close', handleModalClose);\n    return () => {\n      if (modalEl) {\n        modalEl.removeEventListener('close', handleModalClose);\n      }\n    };\n  }, [modalRef, onClose]);\n  const onCancel = e => {\n    if (onBeforeClose && onBeforeClose() === false) {\n      e.preventDefault();\n      return;\n    }\n    modalRef.current?.close();\n  };\n  return jsx(Component, {\n    ref: mergedRefs,\n    className: clsx('fds-modal', className),\n    onCancel: onCancel,\n    ...rest,\n    children: open && jsx(FloatingFocusManager, {\n      context: context,\n      children: jsx(Fragment, {\n        children: children\n      })\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport { ModalDialog };","map":{"version":3,"names":["jsx","Fragment","useFloating","useMergeRefs","FloatingFocusManager","forwardRef","useRef","useContext","useEffect","Slot","$5e63c961fc1ce211$export$8c6ed5c666ac1360","clsx","useScrollLock","useModalState","ModalContext","ModalDialog","onInteractOutside","onClose","onBeforeClose","asChild","className","children","rest","ref","Component","modalDialogRef","context","modal","open","modalRef","setOpen","closeModal","current","close","mergedRefs","modalEl","handleBackdropClick","e","target","window","getSelection","toString","addEventListener","removeEventListener","handleModalClose","onCancel","preventDefault","displayName"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/components/Modal/ModalDialog.js"],"sourcesContent":["'use client';\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useFloating, useMergeRefs, FloatingFocusManager } from '../../node_modules/@floating-ui/react/dist/floating-ui.react.js';\nimport { forwardRef, useRef, useContext, useEffect } from 'react';\nimport { Slot as $5e63c961fc1ce211$export$8c6ed5c666ac1360 } from '../../node_modules/@radix-ui/react-slot/dist/index.js';\nimport { clsx } from '../../node_modules/clsx/dist/lite.js';\nimport { useScrollLock } from './useScrollLock.js';\nimport { useModalState } from './useModalState.js';\nimport { ModalContext } from './ModalRoot.js';\n\nconst ModalDialog = forwardRef(({ onInteractOutside, onClose, onBeforeClose, asChild, className, children, ...rest }, ref) => {\n    const Component = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : 'dialog';\n    // This local ref is used to make sure the modal works without a ModalRoot\n    const modalDialogRef = useRef(null);\n    const { context } = useFloating();\n    const modal = useContext(ModalContext);\n    const open = useModalState(modalDialogRef);\n    const { modalRef, setOpen } = modal;\n    modal.closeModal = () => {\n        if (onBeforeClose && onBeforeClose() === false)\n            return;\n        modalDialogRef.current?.close();\n    };\n    const mergedRefs = useMergeRefs([modalRef, ref, modalDialogRef]);\n    useScrollLock(modalDialogRef, 'fds-modal--lock-scroll');\n    useEffect(() => {\n        setOpen(open);\n    }, [open, setOpen]);\n    useEffect(() => {\n        const modalEl = modalRef.current;\n        const handleBackdropClick = (e) => {\n            if (e.target === modalEl && onInteractOutside) {\n                // Fix bug where if you select text spanning two divs it thinks you clicked outside\n                if (window.getSelection()?.toString())\n                    return;\n                onInteractOutside?.();\n            }\n        };\n        if (modalEl)\n            modalEl.addEventListener('click', handleBackdropClick);\n        return () => {\n            if (modalEl) {\n                modalEl.removeEventListener('click', handleBackdropClick);\n            }\n        };\n    }, [onInteractOutside, modalRef, onBeforeClose, ref]);\n    useEffect(() => {\n        const modalEl = modalRef.current;\n        const handleModalClose = () => {\n            onClose?.();\n        };\n        if (modalEl)\n            modalEl.addEventListener('close', handleModalClose);\n        return () => {\n            if (modalEl) {\n                modalEl.removeEventListener('close', handleModalClose);\n            }\n        };\n    }, [modalRef, onClose]);\n    const onCancel = (e) => {\n        if (onBeforeClose && onBeforeClose() === false) {\n            e.preventDefault();\n            return;\n        }\n        modalRef.current?.close();\n    };\n    return (jsx(Component, { ref: mergedRefs, className: clsx('fds-modal', className), onCancel: onCancel, ...rest, children: open && (jsx(FloatingFocusManager, { context: context, children: jsx(Fragment, { children: children }) })) }));\n});\nModalDialog.displayName = 'ModalDialog';\n\nexport { ModalDialog };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}