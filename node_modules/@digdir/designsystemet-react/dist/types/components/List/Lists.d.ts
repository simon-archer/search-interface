import type { HTMLAttributes, OlHTMLAttributes } from 'react';
export type ListUnorderedProps = {
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
} & Omit<HTMLAttributes<HTMLUListElement>, 'size'>;
export declare const Unordered: import("react").ForwardRefExoticComponent<{
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean | undefined;
} & Omit<HTMLAttributes<HTMLUListElement>, "size"> & import("react").RefAttributes<HTMLUListElement>>;
export type ListOrderedProps = {
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
} & Omit<OlHTMLAttributes<HTMLOListElement>, 'size'>;
export declare const Ordered: import("react").ForwardRefExoticComponent<{
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean | undefined;
} & Omit<OlHTMLAttributes<HTMLOListElement>, "size"> & import("react").RefAttributes<HTMLOListElement>>;
//# sourceMappingURL=Lists.d.ts.map