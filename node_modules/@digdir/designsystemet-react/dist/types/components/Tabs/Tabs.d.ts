import type { HTMLAttributes } from 'react';
type OldTabSize = 'small' | 'medium' | 'large';
export type TabsProps = {
    /** Controlled state for `Tabs` component. */
    value?: string;
    /** Default value. */
    defaultValue?: string;
    /** Callback with selected `TabItem` `value` */
    onChange?: (value: string) => void;
    /**
     * Changes items size and paddings
     * @default md
     * @note `small`, `medium`, `large` is deprecated
     */
    size?: 'sm' | 'md' | 'lg' | OldTabSize;
} & Omit<HTMLAttributes<HTMLDivElement>, 'onChange' | 'value'>;
/** `Tabs` component.
 * @example
 * ```tsx
 * <Tabs onChange={(value) => console.log(value)}>
 *   <Tabs.List>
 *     <Tabs.Item value='1'>Tab 1</Tabs.Item>
 *     <Tabs.Item value='2'>Tab 2</Tabs.Item>
 *     <Tabs.Item value='3'>Tab 3</Tabs.Item>
 *   </Tabs.List>
 *   <Tabs.Content value='1'>content 1</Tabs.Content>
 *   <Tabs.Content value='2'>content 2</Tabs.Content>
 *   <Tabs.Content value='3'>content 3</Tabs.Content>
 * </Tabs>
 * ```
 */
export type TabsContextProps = {
    value?: string;
    defaultValue?: string;
    onChange?: (value: string) => void;
};
export declare const TabsContext: import("react").Context<TabsContextProps>;
export declare const Tabs: import("react").ForwardRefExoticComponent<{
    /** Controlled state for `Tabs` component. */
    value?: string | undefined;
    /** Default value. */
    defaultValue?: string | undefined;
    /** Callback with selected `TabItem` `value` */
    onChange?: ((value: string) => void) | undefined;
    /**
     * Changes items size and paddings
     * @default md
     * @note `small`, `medium`, `large` is deprecated
     */
    size?: "sm" | "md" | "lg" | OldTabSize | undefined;
} & Omit<HTMLAttributes<HTMLDivElement>, "value" | "onChange"> & import("react").RefAttributes<HTMLDivElement>>;
export {};
//# sourceMappingURL=Tabs.d.ts.map