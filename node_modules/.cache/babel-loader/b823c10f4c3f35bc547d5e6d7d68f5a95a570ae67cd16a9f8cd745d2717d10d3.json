{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { createContext, forwardRef, useId, useState } from 'react';\nimport { clsx } from '../../node_modules/clsx/dist/lite.js';\nimport { getSize } from '../../utilities/getSize.js';\nimport { RovingTabindexRoot } from '../../utilities/RovingTabIndex/RovingTabindexRoot.js';\nconst ToggleGroupContext = createContext({});\n/** `ToggleGroup` component.\n * @example\n * ```tsx\n * <ToggleGroup onChange={(value) => console.log(value)}>\n *   <ToggleGroup.Item value='1'>Toggle 1</ToggleGroup.Item>\n *   <ToggleGroup.Item value='2'>Toggle 2</ToggleGroup.Item>\n *   <ToggleGroup.Item value='3'>Toggle 3</ToggleGroup.Item>\n * </ToggleGroup>\n * ```\n */\nconst ToggleGroup = forwardRef((_ref, ref) => {\n  let {\n    children,\n    value,\n    defaultValue,\n    onChange,\n    name,\n    className,\n    ...rest\n  } = _ref;\n  const size = getSize(rest.size || 'md');\n  const nameId = useId();\n  const isControlled = value !== undefined;\n  const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue);\n  let onValueChange = onChange;\n  if (!isControlled) {\n    onValueChange = newValue => {\n      setUncontrolledValue(newValue);\n      onChange?.(newValue);\n    };\n    value = uncontrolledValue;\n  }\n  return jsx(\"div\", {\n    className: clsx('fds-togglegroup', className),\n    ref: ref,\n    ...rest,\n    children: jsxs(ToggleGroupContext.Provider, {\n      value: {\n        value,\n        defaultValue,\n        name: name ?? `togglegroup-name-${nameId}`,\n        onChange: onValueChange,\n        size\n      },\n      children: [name && jsx(\"input\", {\n        className: 'fds-togglegroup__input',\n        name: name,\n        value: value\n      }), jsx(RovingTabindexRoot, {\n        asChild: true,\n        valueId: value,\n        children: jsx(\"div\", {\n          className: 'fds-togglegroup__content',\n          role: 'radiogroup',\n          children: children\n        })\n      })]\n    })\n  });\n});\nToggleGroup.displayName = 'ToggleGroup';\nexport { ToggleGroup, ToggleGroupContext };","map":{"version":3,"names":["jsx","jsxs","createContext","forwardRef","useId","useState","clsx","getSize","RovingTabindexRoot","ToggleGroupContext","ToggleGroup","_ref","ref","children","value","defaultValue","onChange","name","className","rest","size","nameId","isControlled","undefined","uncontrolledValue","setUncontrolledValue","onValueChange","newValue","Provider","asChild","valueId","role","displayName"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/components/ToggleGroup/ToggleGroup.js"],"sourcesContent":["'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { createContext, forwardRef, useId, useState } from 'react';\nimport { clsx } from '../../node_modules/clsx/dist/lite.js';\nimport { getSize } from '../../utilities/getSize.js';\nimport { RovingTabindexRoot } from '../../utilities/RovingTabIndex/RovingTabindexRoot.js';\n\nconst ToggleGroupContext = createContext({});\n/** `ToggleGroup` component.\n * @example\n * ```tsx\n * <ToggleGroup onChange={(value) => console.log(value)}>\n *   <ToggleGroup.Item value='1'>Toggle 1</ToggleGroup.Item>\n *   <ToggleGroup.Item value='2'>Toggle 2</ToggleGroup.Item>\n *   <ToggleGroup.Item value='3'>Toggle 3</ToggleGroup.Item>\n * </ToggleGroup>\n * ```\n */\nconst ToggleGroup = forwardRef(({ children, value, defaultValue, onChange, name, className, ...rest }, ref) => {\n    const size = getSize(rest.size || 'md');\n    const nameId = useId();\n    const isControlled = value !== undefined;\n    const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue);\n    let onValueChange = onChange;\n    if (!isControlled) {\n        onValueChange = (newValue) => {\n            setUncontrolledValue(newValue);\n            onChange?.(newValue);\n        };\n        value = uncontrolledValue;\n    }\n    return (jsx(\"div\", { className: clsx('fds-togglegroup', className), ref: ref, ...rest, children: jsxs(ToggleGroupContext.Provider, { value: {\n                value,\n                defaultValue,\n                name: name ?? `togglegroup-name-${nameId}`,\n                onChange: onValueChange,\n                size,\n            }, children: [name && (jsx(\"input\", { className: 'fds-togglegroup__input', name: name, value: value })), jsx(RovingTabindexRoot, { asChild: true, valueId: value, children: jsx(\"div\", { className: 'fds-togglegroup__content', role: 'radiogroup', children: children }) })] }) }));\n});\nToggleGroup.displayName = 'ToggleGroup';\n\nexport { ToggleGroup, ToggleGroupContext };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,EAAEC,IAAI,QAAQ,mBAAmB;AAC7C,SAASC,aAAa,EAAEC,UAAU,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,IAAI,QAAQ,sCAAsC;AAC3D,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,kBAAkB,QAAQ,sDAAsD;AAEzF,MAAMC,kBAAkB,GAAGP,aAAa,CAAC,CAAC,CAAC,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMQ,WAAW,GAAGP,UAAU,CAAC,CAAAQ,IAAA,EAAwEC,GAAG,KAAK;EAAA,IAA/E;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAAR,IAAA;EACjG,MAAMS,IAAI,GAAGb,OAAO,CAACY,IAAI,CAACC,IAAI,IAAI,IAAI,CAAC;EACvC,MAAMC,MAAM,GAAGjB,KAAK,CAAC,CAAC;EACtB,MAAMkB,YAAY,GAAGR,KAAK,KAAKS,SAAS;EACxC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAACU,YAAY,CAAC;EACxE,IAAIW,aAAa,GAAGV,QAAQ;EAC5B,IAAI,CAACM,YAAY,EAAE;IACfI,aAAa,GAAIC,QAAQ,IAAK;MAC1BF,oBAAoB,CAACE,QAAQ,CAAC;MAC9BX,QAAQ,GAAGW,QAAQ,CAAC;IACxB,CAAC;IACDb,KAAK,GAAGU,iBAAiB;EAC7B;EACA,OAAQxB,GAAG,CAAC,KAAK,EAAE;IAAEkB,SAAS,EAAEZ,IAAI,CAAC,iBAAiB,EAAEY,SAAS,CAAC;IAAEN,GAAG,EAAEA,GAAG;IAAE,GAAGO,IAAI;IAAEN,QAAQ,EAAEZ,IAAI,CAACQ,kBAAkB,CAACmB,QAAQ,EAAE;MAAEd,KAAK,EAAE;QAChIA,KAAK;QACLC,YAAY;QACZE,IAAI,EAAEA,IAAI,IAAI,oBAAoBI,MAAM,EAAE;QAC1CL,QAAQ,EAAEU,aAAa;QACvBN;MACJ,CAAC;MAAEP,QAAQ,EAAE,CAACI,IAAI,IAAKjB,GAAG,CAAC,OAAO,EAAE;QAAEkB,SAAS,EAAE,wBAAwB;QAAED,IAAI,EAAEA,IAAI;QAAEH,KAAK,EAAEA;MAAM,CAAC,CAAE,EAAEd,GAAG,CAACQ,kBAAkB,EAAE;QAAEqB,OAAO,EAAE,IAAI;QAAEC,OAAO,EAAEhB,KAAK;QAAED,QAAQ,EAAEb,GAAG,CAAC,KAAK,EAAE;UAAEkB,SAAS,EAAE,0BAA0B;UAAEa,IAAI,EAAE,YAAY;UAAElB,QAAQ,EAAEA;QAAS,CAAC;MAAE,CAAC,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC;AAC/R,CAAC,CAAC;AACFH,WAAW,CAACsB,WAAW,GAAG,aAAa;AAEvC,SAAStB,WAAW,EAAED,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}