{"ast":null,"code":"'use client';\n\nimport { useContext } from 'react';\nimport { useFormField } from '../useFormField.js';\nimport { CheckboxGroupContext } from './Group/Group.js';\n\n/** Handles props for `Checkbox` in context with `Checkbox.Group` (and `Fieldset`) */\nconst useCheckbox = props => {\n  const checkboxGroup = useContext(CheckboxGroupContext);\n  const {\n    inputProps,\n    readOnly,\n    ...rest\n  } = useFormField(props, 'checkbox');\n  return {\n    ...rest,\n    readOnly,\n    inputProps: {\n      ...inputProps,\n      readOnly,\n      type: 'checkbox',\n      defaultChecked: checkboxGroup?.defaultValue ? checkboxGroup?.defaultValue.includes(props.value) : props.defaultChecked,\n      checked: checkboxGroup?.value ? checkboxGroup?.value.includes(props.value) : props.checked,\n      onClick: e => {\n        if (readOnly) {\n          e.preventDefault();\n          return;\n        }\n        props?.onClick?.(e);\n      },\n      onChange: e => {\n        if (readOnly) {\n          e.preventDefault();\n          return;\n        }\n        props?.onChange?.(e);\n        checkboxGroup?.toggleValue(props.value);\n      }\n    }\n  };\n};\nexport { useCheckbox };","map":{"version":3,"names":["useContext","useFormField","CheckboxGroupContext","useCheckbox","props","checkboxGroup","inputProps","readOnly","rest","type","defaultChecked","defaultValue","includes","value","checked","onClick","e","preventDefault","onChange","toggleValue"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/components/form/Checkbox/useCheckbox.js"],"sourcesContent":["'use client';\nimport { useContext } from 'react';\nimport { useFormField } from '../useFormField.js';\nimport { CheckboxGroupContext } from './Group/Group.js';\n\n/** Handles props for `Checkbox` in context with `Checkbox.Group` (and `Fieldset`) */\nconst useCheckbox = (props) => {\n    const checkboxGroup = useContext(CheckboxGroupContext);\n    const { inputProps, readOnly, ...rest } = useFormField(props, 'checkbox');\n    return {\n        ...rest,\n        readOnly,\n        inputProps: {\n            ...inputProps,\n            readOnly,\n            type: 'checkbox',\n            defaultChecked: checkboxGroup?.defaultValue\n                ? checkboxGroup?.defaultValue.includes(props.value)\n                : props.defaultChecked,\n            checked: checkboxGroup?.value\n                ? checkboxGroup?.value.includes(props.value)\n                : props.checked,\n            onClick: (e) => {\n                if (readOnly) {\n                    e.preventDefault();\n                    return;\n                }\n                props?.onClick?.(e);\n            },\n            onChange: (e) => {\n                if (readOnly) {\n                    e.preventDefault();\n                    return;\n                }\n                props?.onChange?.(e);\n                checkboxGroup?.toggleValue(props.value);\n            },\n        },\n    };\n};\n\nexport { useCheckbox };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,oBAAoB,QAAQ,kBAAkB;;AAEvD;AACA,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC3B,MAAMC,aAAa,GAAGL,UAAU,CAACE,oBAAoB,CAAC;EACtD,MAAM;IAAEI,UAAU;IAAEC,QAAQ;IAAE,GAAGC;EAAK,CAAC,GAAGP,YAAY,CAACG,KAAK,EAAE,UAAU,CAAC;EACzE,OAAO;IACH,GAAGI,IAAI;IACPD,QAAQ;IACRD,UAAU,EAAE;MACR,GAAGA,UAAU;MACbC,QAAQ;MACRE,IAAI,EAAE,UAAU;MAChBC,cAAc,EAAEL,aAAa,EAAEM,YAAY,GACrCN,aAAa,EAAEM,YAAY,CAACC,QAAQ,CAACR,KAAK,CAACS,KAAK,CAAC,GACjDT,KAAK,CAACM,cAAc;MAC1BI,OAAO,EAAET,aAAa,EAAEQ,KAAK,GACvBR,aAAa,EAAEQ,KAAK,CAACD,QAAQ,CAACR,KAAK,CAACS,KAAK,CAAC,GAC1CT,KAAK,CAACU,OAAO;MACnBC,OAAO,EAAGC,CAAC,IAAK;QACZ,IAAIT,QAAQ,EAAE;UACVS,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB;QACJ;QACAb,KAAK,EAAEW,OAAO,GAAGC,CAAC,CAAC;MACvB,CAAC;MACDE,QAAQ,EAAGF,CAAC,IAAK;QACb,IAAIT,QAAQ,EAAE;UACVS,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB;QACJ;QACAb,KAAK,EAAEc,QAAQ,GAAGF,CAAC,CAAC;QACpBX,aAAa,EAAEc,WAAW,CAACf,KAAK,CAACS,KAAK,CAAC;MAC3C;IACJ;EACJ,CAAC;AACL,CAAC;AAED,SAASV,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}