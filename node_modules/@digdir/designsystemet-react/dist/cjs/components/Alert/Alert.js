'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var akselIcons = require('@navikt/aksel-icons');
var lite = require('../../node_modules/clsx/dist/lite.js');
var getSize = require('../../utilities/getSize.js');
var Paragraph = require('../Typography/Paragraph/Paragraph.js');

const icons = {
    info: {
        Icon: akselIcons.InformationSquareFillIcon,
        title: 'Informasjon',
    },
    warning: { Icon: akselIcons.ExclamationmarkTriangleFillIcon, title: 'Advarsel' },
    success: { Icon: akselIcons.CheckmarkCircleFillIcon, title: 'Suksess' },
    danger: {
        Icon: akselIcons.XMarkOctagonFillIcon,
        title: 'Feil',
    },
};
const Alert = React.forwardRef(({ severity = 'info', elevated, iconTitle, children, className, ...rest }, ref) => {
    const size = getSize.getSize(rest.size || 'md');
    const { Icon, title } = icons[severity];
    return (jsxRuntime.jsx("div", { ref: ref, className: lite.clsx('fds-alert', `fds-alert--${size}`, `fds-alert--${severity}`, elevated && `fds-alert--elevated`, className), ...rest, children: jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [jsxRuntime.jsx(Icon, { title: iconTitle || title, className: 'fds-alert__icon' }), jsxRuntime.jsx(Paragraph.Paragraph, { asChild: true, size: size, className: 'fds-alert__content', children: jsxRuntime.jsx("span", { children: children }) })] }) }));
});
Alert.displayName = 'Alert';

exports.Alert = Alert;
