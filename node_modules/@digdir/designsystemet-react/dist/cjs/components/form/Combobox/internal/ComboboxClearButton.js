'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var akselIcons = require('@navikt/aksel-icons');
var lite = require('../../../../node_modules/clsx/dist/lite.js');
var ComboboxContext = require('../ComboboxContext.js');

const ComboboxClearButton = () => {
    const context = React.useContext(ComboboxContext.ComboboxContext);
    if (!context) {
        throw new Error('ComboboxContext is missing');
    }
    const { readOnly, disabled, clearButtonLabel, handleSelectOption } = context;
    return (jsxRuntime.jsx("button", { disabled: disabled, className: lite.clsx('fds-combobox__clear-button', `fds-focus`), onClick: () => {
            if (readOnly)
                return;
            if (disabled)
                return;
            handleSelectOption({ option: null, clear: true });
        }, onKeyDown: (e) => {
            if (readOnly)
                return;
            if (disabled)
                return;
            if (e.key === 'Enter') {
                e.stopPropagation();
                handleSelectOption({ option: null, clear: true });
            }
        }, type: 'button', "aria-label": clearButtonLabel, children: jsxRuntime.jsx(akselIcons.XMarkIcon, { fontSize: '1.5em', title: 'Clear selection' }) }));
};
ComboboxClearButton.displayName = 'ComboboxClearButton';
var ComboboxClearButton$1 = ComboboxClearButton;

exports.ComboboxClearButton = ComboboxClearButton;
exports.default = ComboboxClearButton$1;
