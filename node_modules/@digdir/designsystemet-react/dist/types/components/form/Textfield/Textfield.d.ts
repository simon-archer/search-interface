import type { InputHTMLAttributes, ReactNode } from 'react';
import type { FormFieldProps } from '../useFormField';
import type { CharacterLimitProps } from '../CharacterCounter';
type OldTextfieldSizes = 'small' | 'medium' | 'large';
export type TextfieldProps = {
    /** Label */
    label?: ReactNode;
    /** Visually hides `label` and `description` (still available for screen readers)  */
    hideLabel?: boolean;
    /**
     * Changes field size and paddings
     * @default md
     * @note `small`, `medium`, `large` is deprecated
     */
    size?: 'sm' | 'md' | 'lg' | OldTextfieldSizes;
    /** Prefix for field. */
    prefix?: string;
    /** Suffix for field. */
    suffix?: string;
    /** Supported `input` types */
    type?: 'date' | 'datetime-local' | 'email' | 'file' | 'month' | 'number' | 'password' | 'search' | 'tel' | 'text' | 'time' | 'url' | 'week';
    /**
     *  The characterLimit function calculates remaining characters based on `maxCount`
     *
     *  Provide a `label` function that takes count as parameter and returns a message.
     *
     *  Use `srLabel` to describe `maxCount` for screen readers.
     *
     *  Defaults to Norwegian if no labels are provided.
     */
    characterLimit?: CharacterLimitProps;
    /** Exposes the HTML `size` attribute.
     * @default 20
     */
    htmlSize?: number;
} & Omit<FormFieldProps, 'size'> & Omit<InputHTMLAttributes<HTMLInputElement>, 'size'>;
/** Text input field
 *
 * @example
 * ```tsx
 * <Textfield label="Textfield label">
 * ```
 */
export declare const Textfield: import("react").ForwardRefExoticComponent<{
    /** Label */
    label?: ReactNode;
    /** Visually hides `label` and `description` (still available for screen readers)  */
    hideLabel?: boolean | undefined;
    /**
     * Changes field size and paddings
     * @default md
     * @note `small`, `medium`, `large` is deprecated
     */
    size?: "sm" | "md" | "lg" | OldTextfieldSizes | undefined;
    /** Prefix for field. */
    prefix?: string | undefined;
    /** Suffix for field. */
    suffix?: string | undefined;
    /** Supported `input` types */
    type?: "number" | "search" | "time" | "text" | "tel" | "url" | "email" | "date" | "datetime-local" | "file" | "month" | "password" | "week" | undefined;
    /**
     *  The characterLimit function calculates remaining characters based on `maxCount`
     *
     *  Provide a `label` function that takes count as parameter and returns a message.
     *
     *  Use `srLabel` to describe `maxCount` for screen readers.
     *
     *  Defaults to Norwegian if no labels are provided.
     */
    characterLimit?: CharacterLimitProps | undefined;
    /** Exposes the HTML `size` attribute.
     * @default 20
     */
    htmlSize?: number | undefined;
} & Omit<FormFieldProps, "size"> & Omit<InputHTMLAttributes<HTMLInputElement>, "size"> & import("react").RefAttributes<HTMLInputElement>>;
export {};
//# sourceMappingURL=Textfield.d.ts.map