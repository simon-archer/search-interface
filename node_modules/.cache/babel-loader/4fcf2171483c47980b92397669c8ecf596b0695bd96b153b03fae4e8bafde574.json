{"ast":null,"code":"'use client';\n\nimport _extends from '../../../@babel/runtime/helpers/esm/extends.js';\nimport { forwardRef, Children, isValidElement, createElement, cloneElement, Fragment } from 'react';\nimport { composeRefs as $6ed0406888f73fc4$export$43e446d32b3d21af } from '../../react-compose-refs/dist/index.js';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\nconst $5e63c961fc1ce211$export$8c6ed5c666ac1360 = /*#__PURE__*/forwardRef((props, forwardedRef) => {\n  const {\n    children: children,\n    ...slotProps\n  } = props;\n  const childrenArray = Children.toArray(children);\n  const slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map(child => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (Children.count(newElement) > 1) return Children.only(null);\n        return /*#__PURE__*/isValidElement(newElement) ? newElement.props.children : null;\n      } else return child;\n    });\n    return /*#__PURE__*/createElement($5e63c961fc1ce211$var$SlotClone, _extends({}, slotProps, {\n      ref: forwardedRef\n    }), /*#__PURE__*/isValidElement(newElement) ? /*#__PURE__*/cloneElement(newElement, undefined, newChildren) : null);\n  }\n  return /*#__PURE__*/createElement($5e63c961fc1ce211$var$SlotClone, _extends({}, slotProps, {\n    ref: forwardedRef\n  }), children);\n});\n$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = 'Slot';\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\nconst $5e63c961fc1ce211$var$SlotClone = /*#__PURE__*/forwardRef((props, forwardedRef) => {\n  const {\n    children: children,\n    ...slotProps\n  } = props;\n  if (/*#__PURE__*/isValidElement(children)) return /*#__PURE__*/cloneElement(children, {\n    ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),\n    ref: forwardedRef ? $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, children.ref) : children.ref\n  });\n  return Children.count(children) > 1 ? Children.only(null) : null;\n});\n$5e63c961fc1ce211$var$SlotClone.displayName = 'SlotClone';\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\nconst $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({\n  children: children\n}) => {\n  return /*#__PURE__*/createElement(Fragment, null, children);\n};\n/* ---------------------------------------------------------------------------------------------- */\nfunction $5e63c961fc1ce211$var$isSlottable(child) {\n  return /*#__PURE__*/isValidElement(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;\n}\nfunction $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {\n  // all child props should override\n  const overrideProps = {\n    ...childProps\n  };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) overrideProps[propName] = (...args) => {\n        childPropValue(...args);\n        slotPropValue(...args);\n      };else if (slotPropValue) overrideProps[propName] = slotPropValue;\n    } else if (propName === 'style') overrideProps[propName] = {\n      ...slotPropValue,\n      ...childPropValue\n    };else if (propName === 'className') overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n  }\n  return {\n    ...slotProps,\n    ...overrideProps\n  };\n}\nexport { $5e63c961fc1ce211$export$8c6ed5c666ac1360 as Slot, $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 as Slottable };","map":{"version":3,"names":["_extends","forwardRef","Children","isValidElement","createElement","cloneElement","Fragment","composeRefs","$6ed0406888f73fc4$export$43e446d32b3d21af","$5e63c961fc1ce211$export$8c6ed5c666ac1360","props","forwardedRef","children","slotProps","childrenArray","toArray","slottable","find","$5e63c961fc1ce211$var$isSlottable","newElement","newChildren","map","child","count","only","$5e63c961fc1ce211$var$SlotClone","ref","undefined","displayName","$5e63c961fc1ce211$var$mergeProps","$5e63c961fc1ce211$export$d9f1ccf0bdb05d45","type","childProps","overrideProps","propName","slotPropValue","childPropValue","isHandler","test","args","filter","Boolean","join","Slot","Slottable"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/node_modules/@radix-ui/react-slot/dist/index.js"],"sourcesContent":["'use client';\nimport _extends from '../../../@babel/runtime/helpers/esm/extends.js';\nimport { forwardRef, Children, isValidElement, createElement, cloneElement, Fragment } from 'react';\nimport { composeRefs as $6ed0406888f73fc4$export$43e446d32b3d21af } from '../../react-compose-refs/dist/index.js';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$export$8c6ed5c666ac1360 = /*#__PURE__*/ forwardRef((props, forwardedRef)=>{\n    const { children: children , ...slotProps } = props;\n    const childrenArray = Children.toArray(children);\n    const slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);\n    if (slottable) {\n        // the new element to render is the one passed as a child of `Slottable`\n        const newElement = slottable.props.children;\n        const newChildren = childrenArray.map((child)=>{\n            if (child === slottable) {\n                // because the new element will be the one rendered, we are only interested\n                // in grabbing its children (`newElement.props.children`)\n                if (Children.count(newElement) > 1) return Children.only(null);\n                return /*#__PURE__*/ isValidElement(newElement) ? newElement.props.children : null;\n            } else return child;\n        });\n        return /*#__PURE__*/ createElement($5e63c961fc1ce211$var$SlotClone, _extends({}, slotProps, {\n            ref: forwardedRef\n        }), /*#__PURE__*/ isValidElement(newElement) ? /*#__PURE__*/ cloneElement(newElement, undefined, newChildren) : null);\n    }\n    return /*#__PURE__*/ createElement($5e63c961fc1ce211$var$SlotClone, _extends({}, slotProps, {\n        ref: forwardedRef\n    }), children);\n});\n$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = 'Slot';\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$var$SlotClone = /*#__PURE__*/ forwardRef((props, forwardedRef)=>{\n    const { children: children , ...slotProps } = props;\n    if (/*#__PURE__*/ isValidElement(children)) return /*#__PURE__*/ cloneElement(children, {\n        ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),\n        ref: forwardedRef ? $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, children.ref) : children.ref\n    });\n    return Children.count(children) > 1 ? Children.only(null) : null;\n});\n$5e63c961fc1ce211$var$SlotClone.displayName = 'SlotClone';\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({ children: children  })=>{\n    return /*#__PURE__*/ createElement(Fragment, null, children);\n};\n/* ---------------------------------------------------------------------------------------------- */ function $5e63c961fc1ce211$var$isSlottable(child) {\n    return /*#__PURE__*/ isValidElement(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;\n}\nfunction $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {\n    // all child props should override\n    const overrideProps = {\n        ...childProps\n    };\n    for(const propName in childProps){\n        const slotPropValue = slotProps[propName];\n        const childPropValue = childProps[propName];\n        const isHandler = /^on[A-Z]/.test(propName);\n        if (isHandler) {\n            // if the handler exists on both, we compose them\n            if (slotPropValue && childPropValue) overrideProps[propName] = (...args)=>{\n                childPropValue(...args);\n                slotPropValue(...args);\n            };\n            else if (slotPropValue) overrideProps[propName] = slotPropValue;\n        } else if (propName === 'style') overrideProps[propName] = {\n            ...slotPropValue,\n            ...childPropValue\n        };\n        else if (propName === 'className') overrideProps[propName] = [\n            slotPropValue,\n            childPropValue\n        ].filter(Boolean).join(' ');\n    }\n    return {\n        ...slotProps,\n        ...overrideProps\n    };\n}\n\nexport { $5e63c961fc1ce211$export$8c6ed5c666ac1360 as Slot, $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 as Slottable };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}