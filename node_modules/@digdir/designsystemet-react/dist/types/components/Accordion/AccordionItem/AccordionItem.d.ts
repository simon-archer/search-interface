import type { ReactNode, HTMLAttributes } from 'react';
export type AccordionItemProps = {
    /**
     * Controls open-state.
     *
     * Using this removes automatic control of open-state
     */
    open?: boolean;
    /**  Defaults the accordion to open if not controlled */
    defaultOpen?: boolean;
    /** Content should be one `<Accordion.Header>` and `<Accordion.Content>` */
    children: ReactNode;
} & HTMLAttributes<HTMLDivElement>;
export type AccordionItemContextProps = {
    open: boolean;
    toggleOpen: () => void;
    contentId: string;
};
export declare const AccordionItemContext: import("react").Context<AccordionItemContextProps | null>;
export declare const AccordionItem: import("react").ForwardRefExoticComponent<{
    /**
     * Controls open-state.
     *
     * Using this removes automatic control of open-state
     */
    open?: boolean | undefined;
    /**  Defaults the accordion to open if not controlled */
    defaultOpen?: boolean | undefined;
    /** Content should be one `<Accordion.Header>` and `<Accordion.Content>` */
    children: ReactNode;
} & HTMLAttributes<HTMLDivElement> & import("react").RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=AccordionItem.d.ts.map