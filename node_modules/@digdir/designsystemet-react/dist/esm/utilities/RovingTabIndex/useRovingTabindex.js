'use client';
import { useContext } from 'react';
import { RovingTabindexContext } from './RovingTabindexRoot.js';

// Logic from: https://www.joshuawootonn.com/react-roving-tabindex
// Inspired by: https://github.com/radix-ui/primitives/tree/main/packages/react/roving-focus/src
/** Handles props for `RovingTabIndex` in context with `RovingTabIndexRoot` */
const useRovingTabindex = (value) => {
    const { elements, getOrderedItems, setFocusableValue, focusableValue, onShiftTab, } = useContext(RovingTabindexContext);
    return {
        getOrderedItems,
        isFocusable: focusableValue === value,
        getRovingProps: (props) => ({
            ...props,
            ref: (element) => {
                if (element) {
                    elements.current.set(value, element);
                }
                else {
                    elements.current.delete(value);
                }
            },
            onKeyDown: (e) => {
                props?.onKeyDown?.(e);
                if (e.shiftKey && e.key === 'Tab') {
                    onShiftTab();
                    return;
                }
            },
            onFocus: (e) => {
                props?.onFocus?.(e);
                setFocusableValue(value);
            },
            ['data-roving-tabindex-item']: true,
            tabIndex: focusableValue === value ? 0 : -1,
        }),
    };
};

export { useRovingTabindex };
