{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { createContext, forwardRef, useId, useState } from 'react';\nimport { clsx } from '../../node_modules/clsx/dist/lite.js';\nimport { getSize } from '../../utilities/getSize.js';\nimport { RovingTabindexRoot } from '../../utilities/RovingTabIndex/RovingTabindexRoot.js';\nconst ToggleGroupContext = createContext({});\n/** `ToggleGroup` component.\n * @example\n * ```tsx\n * <ToggleGroup onChange={(value) => console.log(value)}>\n *   <ToggleGroup.Item value='1'>Toggle 1</ToggleGroup.Item>\n *   <ToggleGroup.Item value='2'>Toggle 2</ToggleGroup.Item>\n *   <ToggleGroup.Item value='3'>Toggle 3</ToggleGroup.Item>\n * </ToggleGroup>\n * ```\n */\nconst ToggleGroup = forwardRef(({\n  children,\n  value,\n  defaultValue,\n  onChange,\n  name,\n  className,\n  ...rest\n}, ref) => {\n  const size = getSize(rest.size || 'md');\n  const nameId = useId();\n  const isControlled = value !== undefined;\n  const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue);\n  let onValueChange = onChange;\n  if (!isControlled) {\n    onValueChange = newValue => {\n      setUncontrolledValue(newValue);\n      onChange?.(newValue);\n    };\n    value = uncontrolledValue;\n  }\n  return jsx(\"div\", {\n    className: clsx('fds-togglegroup', className),\n    ref: ref,\n    ...rest,\n    children: jsxs(ToggleGroupContext.Provider, {\n      value: {\n        value,\n        defaultValue,\n        name: name ?? `togglegroup-name-${nameId}`,\n        onChange: onValueChange,\n        size\n      },\n      children: [name && jsx(\"input\", {\n        className: 'fds-togglegroup__input',\n        name: name,\n        value: value\n      }), jsx(RovingTabindexRoot, {\n        asChild: true,\n        valueId: value,\n        children: jsx(\"div\", {\n          className: 'fds-togglegroup__content',\n          role: 'radiogroup',\n          children: children\n        })\n      })]\n    })\n  });\n});\nToggleGroup.displayName = 'ToggleGroup';\nexport { ToggleGroup, ToggleGroupContext };","map":{"version":3,"names":["jsx","jsxs","createContext","forwardRef","useId","useState","clsx","getSize","RovingTabindexRoot","ToggleGroupContext","ToggleGroup","children","value","defaultValue","onChange","name","className","rest","ref","size","nameId","isControlled","undefined","uncontrolledValue","setUncontrolledValue","onValueChange","newValue","Provider","asChild","valueId","role","displayName"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/components/ToggleGroup/ToggleGroup.js"],"sourcesContent":["'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { createContext, forwardRef, useId, useState } from 'react';\nimport { clsx } from '../../node_modules/clsx/dist/lite.js';\nimport { getSize } from '../../utilities/getSize.js';\nimport { RovingTabindexRoot } from '../../utilities/RovingTabIndex/RovingTabindexRoot.js';\n\nconst ToggleGroupContext = createContext({});\n/** `ToggleGroup` component.\n * @example\n * ```tsx\n * <ToggleGroup onChange={(value) => console.log(value)}>\n *   <ToggleGroup.Item value='1'>Toggle 1</ToggleGroup.Item>\n *   <ToggleGroup.Item value='2'>Toggle 2</ToggleGroup.Item>\n *   <ToggleGroup.Item value='3'>Toggle 3</ToggleGroup.Item>\n * </ToggleGroup>\n * ```\n */\nconst ToggleGroup = forwardRef(({ children, value, defaultValue, onChange, name, className, ...rest }, ref) => {\n    const size = getSize(rest.size || 'md');\n    const nameId = useId();\n    const isControlled = value !== undefined;\n    const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue);\n    let onValueChange = onChange;\n    if (!isControlled) {\n        onValueChange = (newValue) => {\n            setUncontrolledValue(newValue);\n            onChange?.(newValue);\n        };\n        value = uncontrolledValue;\n    }\n    return (jsx(\"div\", { className: clsx('fds-togglegroup', className), ref: ref, ...rest, children: jsxs(ToggleGroupContext.Provider, { value: {\n                value,\n                defaultValue,\n                name: name ?? `togglegroup-name-${nameId}`,\n                onChange: onValueChange,\n                size,\n            }, children: [name && (jsx(\"input\", { className: 'fds-togglegroup__input', name: name, value: value })), jsx(RovingTabindexRoot, { asChild: true, valueId: value, children: jsx(\"div\", { className: 'fds-togglegroup__content', role: 'radiogroup', children: children }) })] }) }));\n});\nToggleGroup.displayName = 'ToggleGroup';\n\nexport { ToggleGroup, ToggleGroupContext };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,EAAEC,IAAI,QAAQ,mBAAmB;AAC7C,SAASC,aAAa,EAAEC,UAAU,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,IAAI,QAAQ,sCAAsC;AAC3D,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,kBAAkB,QAAQ,sDAAsD;AAEzF,MAAMC,kBAAkB,GAAGP,aAAa,CAAC,CAAC,CAAC,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMQ,WAAW,GAAGP,UAAU,CAAC,CAAC;EAAEQ,QAAQ;EAAEC,KAAK;EAAEC,YAAY;EAAEC,QAAQ;EAAEC,IAAI;EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,KAAK;EAC3G,MAAMC,IAAI,GAAGZ,OAAO,CAACU,IAAI,CAACE,IAAI,IAAI,IAAI,CAAC;EACvC,MAAMC,MAAM,GAAGhB,KAAK,CAAC,CAAC;EACtB,MAAMiB,YAAY,GAAGT,KAAK,KAAKU,SAAS;EACxC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAACQ,YAAY,CAAC;EACxE,IAAIY,aAAa,GAAGX,QAAQ;EAC5B,IAAI,CAACO,YAAY,EAAE;IACfI,aAAa,GAAIC,QAAQ,IAAK;MAC1BF,oBAAoB,CAACE,QAAQ,CAAC;MAC9BZ,QAAQ,GAAGY,QAAQ,CAAC;IACxB,CAAC;IACDd,KAAK,GAAGW,iBAAiB;EAC7B;EACA,OAAQvB,GAAG,CAAC,KAAK,EAAE;IAAEgB,SAAS,EAAEV,IAAI,CAAC,iBAAiB,EAAEU,SAAS,CAAC;IAAEE,GAAG,EAAEA,GAAG;IAAE,GAAGD,IAAI;IAAEN,QAAQ,EAAEV,IAAI,CAACQ,kBAAkB,CAACkB,QAAQ,EAAE;MAAEf,KAAK,EAAE;QAChIA,KAAK;QACLC,YAAY;QACZE,IAAI,EAAEA,IAAI,IAAI,oBAAoBK,MAAM,EAAE;QAC1CN,QAAQ,EAAEW,aAAa;QACvBN;MACJ,CAAC;MAAER,QAAQ,EAAE,CAACI,IAAI,IAAKf,GAAG,CAAC,OAAO,EAAE;QAAEgB,SAAS,EAAE,wBAAwB;QAAED,IAAI,EAAEA,IAAI;QAAEH,KAAK,EAAEA;MAAM,CAAC,CAAE,EAAEZ,GAAG,CAACQ,kBAAkB,EAAE;QAAEoB,OAAO,EAAE,IAAI;QAAEC,OAAO,EAAEjB,KAAK;QAAED,QAAQ,EAAEX,GAAG,CAAC,KAAK,EAAE;UAAEgB,SAAS,EAAE,0BAA0B;UAAEc,IAAI,EAAE,YAAY;UAAEnB,QAAQ,EAAEA;QAAS,CAAC;MAAE,CAAC,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC;AAC/R,CAAC,CAAC;AACFD,WAAW,CAACqB,WAAW,GAAG,aAAa;AAEvC,SAASrB,WAAW,EAAED,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}