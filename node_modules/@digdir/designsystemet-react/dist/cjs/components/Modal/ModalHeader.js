'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var lite = require('../../node_modules/clsx/dist/lite.js');
var akselIcons = require('@navikt/aksel-icons');
var index = require('../../node_modules/@radix-ui/react-slot/dist/index.js');
var ModalRoot = require('./ModalRoot.js');
var Button = require('../Button/Button.js');
var Paragraph = require('../Typography/Paragraph/Paragraph.js');
var Heading = require('../Typography/Heading/Heading.js');

const ModalHeader = React.forwardRef(({ closeButton = true, children, subtitle, asChild, className, ...rest }, ref) => {
    const Component = asChild ? index.Slot : 'div';
    const context = React.useContext(ModalRoot.ModalContext);
    return (jsxRuntime.jsxs(Component, { ref: ref, className: lite.clsx('fds-modal__header', !closeButton && 'fds-modal__header--no-button', className), ...rest, children: [subtitle && (jsxRuntime.jsx(Paragraph.Paragraph, { size: 'sm', variant: 'short', children: subtitle })), jsxRuntime.jsx(Heading.Heading, { level: 2, size: 'xs', children: children }), closeButton && (jsxRuntime.jsx(Button.Button, { name: 'close', variant: 'tertiary', color: 'second', size: 'md', onClick: context?.closeModal, autoFocus: true, icon: true, className: 'fds-modal__header__button', children: jsxRuntime.jsx(akselIcons.XMarkIcon, { title: 'close modal', fontSize: '1.5em' }) }))] }));
});
ModalHeader.displayName = 'ModalHeader';

exports.ModalHeader = ModalHeader;
