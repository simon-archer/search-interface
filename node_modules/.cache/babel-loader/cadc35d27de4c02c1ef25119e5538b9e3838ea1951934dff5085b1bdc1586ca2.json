{"ast":null,"code":"//https://github.com/mui/material-ui/blob/master/packages/mui-utils/src/useId.ts\nimport React, { useEffect, useState } from \"react\";\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = useState(idOverride);\n  const id = idOverride || defaultId;\n  useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`aksel-icon-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\nconst maybeReactUseId = React[\"useId\" + \"\" // Workaround for https://github.com/webpack/webpack/issues/14814\n];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport function useId(idOverride) {\n  var _a;\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride !== null && idOverride !== void 0 ? idOverride : reactId.replace(/(:)/g, \"\");\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `useId` is invariant at runtime.\n  return (_a = useGlobalId(idOverride)) !== null && _a !== void 0 ? _a : \"\";\n}","map":{"version":3,"names":["React","useEffect","useState","globalId","useGlobalId","idOverride","defaultId","setDefaultId","id","maybeReactUseId","useId","_a","undefined","reactId","replace"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@navikt/aksel-icons/dist/react/esm/util/useId.js"],"sourcesContent":["//https://github.com/mui/material-ui/blob/master/packages/mui-utils/src/useId.ts\nimport React, { useEffect, useState } from \"react\";\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n    const [defaultId, setDefaultId] = useState(idOverride);\n    const id = idOverride || defaultId;\n    useEffect(() => {\n        if (defaultId == null) {\n            // Fallback to this default id when possible.\n            // Use the incrementing value for client-side rendering only.\n            // We can't use it server-side.\n            // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n            globalId += 1;\n            setDefaultId(`aksel-icon-${globalId}`);\n        }\n    }, [defaultId]);\n    return id;\n}\nconst maybeReactUseId = React[\"useId\" + \"\" // Workaround for https://github.com/webpack/webpack/issues/14814\n];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport function useId(idOverride) {\n    var _a;\n    if (maybeReactUseId !== undefined) {\n        const reactId = maybeReactUseId();\n        return idOverride !== null && idOverride !== void 0 ? idOverride : reactId.replace(/(:)/g, \"\");\n    }\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- `useId` is invariant at runtime.\n    return (_a = useGlobalId(idOverride)) !== null && _a !== void 0 ? _a : \"\";\n}\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,IAAIC,QAAQ,GAAG,CAAC;AAChB,SAASC,WAAWA,CAACC,UAAU,EAAE;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAACG,UAAU,CAAC;EACtD,MAAMG,EAAE,GAAGH,UAAU,IAAIC,SAAS;EAClCL,SAAS,CAAC,MAAM;IACZ,IAAIK,SAAS,IAAI,IAAI,EAAE;MACnB;MACA;MACA;MACA;MACAH,QAAQ,IAAI,CAAC;MACbI,YAAY,CAAC,cAAcJ,QAAQ,EAAE,CAAC;IAC1C;EACJ,CAAC,EAAE,CAACG,SAAS,CAAC,CAAC;EACf,OAAOE,EAAE;AACb;AACA,MAAMC,eAAe,GAAGT,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;AAAA,CAC1C;AACD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASU,KAAKA,CAACL,UAAU,EAAE;EAC9B,IAAIM,EAAE;EACN,IAAIF,eAAe,KAAKG,SAAS,EAAE;IAC/B,MAAMC,OAAO,GAAGJ,eAAe,CAAC,CAAC;IACjC,OAAOJ,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAGA,UAAU,GAAGQ,OAAO,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EAClG;EACA;EACA,OAAO,CAACH,EAAE,GAAGP,WAAW,CAACC,UAAU,CAAC,MAAM,IAAI,IAAIM,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE;AAC7E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}