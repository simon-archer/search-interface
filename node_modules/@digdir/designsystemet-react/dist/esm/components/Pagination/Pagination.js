'use client';
import { jsx, jsxs } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import { clsx } from '../../node_modules/clsx/dist/lite.js';
import { ChevronLeftIcon, ChevronRightIcon } from '@navikt/aksel-icons';
import { getSize } from '../../utilities/getSize.js';
import { PaginationRoot } from './PaginationRoot.js';
import { PaginationContent } from './PaginationContent.js';
import { PaginationItem } from './PaginationItem.js';
import { PaginationButton } from './PaginationButton.js';
import { PaginationEllipsis } from './PaginationEllipsis.js';
import { PaginationPrevious, PaginationNext } from './PaginationNextPrev.js';
import { usePagination } from './usePagination.js';

const iconSize = {
    sm: '1rem',
    md: '1.5rem',
    lg: '2rem',
};
const Pagination = forwardRef(({ nextLabel = '', previousLabel = '', compact = false, hideLabels = false, currentPage = 1, totalPages, onChange, itemLabel = (num) => `Side ${num}`, ...rest }, ref) => {
    const { pages, showNextPage, showPreviousPage } = usePagination({
        compact,
        currentPage,
        totalPages,
    });
    const size = getSize(rest.size || 'md');
    return (jsx(PaginationRoot, { ref: ref, "aria-label": 'Pagination', size: size, compact: compact, ...rest, children: jsxs(PaginationContent, { children: [jsx(PaginationItem, { children: jsxs(PaginationPrevious, { className: clsx(!showPreviousPage && 'fds-pagination--hidden'), onClick: () => {
                            onChange(currentPage - 1);
                        }, "aria-label": previousLabel, children: [jsx(ChevronLeftIcon, { "aria-hidden": true, fontSize: iconSize[size] }), !hideLabels && previousLabel] }) }), pages.map((page, i) => (jsx(PaginationItem, { children: page === 'ellipsis' ? (jsx(PaginationEllipsis, {})) : (jsx(PaginationButton, { "aria-current": currentPage === page, isActive: currentPage === page, "aria-label": itemLabel(page), onClick: () => {
                            onChange(page);
                        }, children: page })) }, `${page}${i}`))), jsx(PaginationItem, { children: jsxs(PaginationNext, { "aria-label": nextLabel, onClick: () => {
                            onChange(currentPage + 1);
                        }, className: clsx(!showNextPage && 'fds-pagination--hidden'), children: [!hideLabels && nextLabel, jsx(ChevronRightIcon, { "aria-hidden": true, fontSize: iconSize[size] })] }) })] }) }));
});
Pagination.displayName = 'Pagination';

export { Pagination };
