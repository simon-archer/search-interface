'use client';
import { jsx, jsxs } from 'react/jsx-runtime';
import { forwardRef, useContext } from 'react';
import { XMarkIcon } from '@navikt/aksel-icons';
import { clsx } from '../../../node_modules/clsx/dist/lite.js';
import { ChipGroupContext } from '../Group/Group.js';
import { getSize } from '../../../utilities/getSize.js';
import { Paragraph } from '../../Typography/Paragraph/Paragraph.js';

const RemovableChip = forwardRef(({ children, className, ...rest }, ref) => {
    const group = useContext(ChipGroupContext);
    const size = getSize(rest.size || 'md');
    return (jsx("button", { type: 'button', ref: ref, className: clsx(`fds-focus`, `fds-chip--button`, `fds-chip--removable`, `fds-chip--${group?.size || size}`, className), ...rest, children: jsx(Paragraph, { asChild: true, size: group?.size || size, variant: 'short', children: jsxs("span", { className: `fds-chip__label`, children: [jsx("span", { children: children }), jsx("span", { className: `fds-chip__x-mark`, "aria-hidden": true, children: jsx(XMarkIcon, { className: `fds-chip__icon` }) })] }) }) }));
});
RemovableChip.displayName = 'ChipRemovable';

export { RemovableChip };
