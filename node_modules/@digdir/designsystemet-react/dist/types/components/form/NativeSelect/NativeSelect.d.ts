import type { ReactNode, SelectHTMLAttributes } from 'react';
type OldNativeSelectSizes = 'small' | 'medium' | 'large';
export type NativeSelectProps = {
    /**
     * Label that appears over the select box. */
    label?: string;
    /**
     * Visually hides `label` and `description` (still available for screen readers)
     * @default false
     * */
    hideLabel?: boolean;
    /**
     * Description for select
     */
    description?: ReactNode;
    /** Set to true to enable multiple selection. */
    multiple?: boolean;
    /**
     * Defines the size of the select.
     * @default md
     * @note `small`, `medium`, `large` is deprecated
     **/
    size?: 'sm' | 'md' | 'lg' | OldNativeSelectSizes;
    /** Error message for form field */
    error?: ReactNode;
    /** Defines if the select is readOnly
     * @default false
     */
    readOnly?: boolean;
    /** Exposes the HTML `size` attribute.
     * @default 0
     */
    htmlSize?: number;
} & Omit<SelectHTMLAttributes<HTMLSelectElement>, 'size'>;
export declare const NativeSelect: import("react").ForwardRefExoticComponent<{
    /**
     * Label that appears over the select box. */
    label?: string | undefined;
    /**
     * Visually hides `label` and `description` (still available for screen readers)
     * @default false
     * */
    hideLabel?: boolean | undefined;
    /**
     * Description for select
     */
    description?: ReactNode;
    /** Set to true to enable multiple selection. */
    multiple?: boolean | undefined;
    /**
     * Defines the size of the select.
     * @default md
     * @note `small`, `medium`, `large` is deprecated
     **/
    size?: "sm" | "md" | "lg" | OldNativeSelectSizes | undefined;
    /** Error message for form field */
    error?: ReactNode;
    /** Defines if the select is readOnly
     * @default false
     */
    readOnly?: boolean | undefined;
    /** Exposes the HTML `size` attribute.
     * @default 0
     */
    htmlSize?: number | undefined;
} & Omit<SelectHTMLAttributes<HTMLSelectElement>, "size"> & import("react").RefAttributes<HTMLSelectElement>>;
export {};
//# sourceMappingURL=NativeSelect.d.ts.map