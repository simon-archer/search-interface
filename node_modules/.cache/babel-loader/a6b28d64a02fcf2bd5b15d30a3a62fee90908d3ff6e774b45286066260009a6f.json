{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { useMergeRefs } from '../../node_modules/@floating-ui/react/dist/floating-ui.react.js';\nimport { Slot as $5e63c961fc1ce211$export$8c6ed5c666ac1360 } from '../../node_modules/@radix-ui/react-slot/dist/index.js';\nimport { useRovingTabindex } from './useRovingTabindex.js';\n\n/** Get the next focusable RovingTabindexItem */\nfunction getNextFocusableValue(items, value) {\n  const currIndex = items.findIndex(item => item.value === value);\n  return items.at(currIndex === items.length - 1 ? 0 : currIndex + 1);\n}\n/** Get the previous focusable RovingTabindexItem */\nfunction getPrevFocusableValue(items, value) {\n  const currIndex = items.findIndex(item => item.value === value);\n  return items.at(currIndex === 0 ? -1 : currIndex - 1);\n}\nconst RovingTabindexItem = forwardRef((_ref, ref) => {\n  let {\n    value,\n    asChild,\n    ...rest\n  } = _ref;\n  const Component = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : 'div';\n  const focusValue = value ?? (typeof rest.children == 'string' ? rest.children : '');\n  const {\n    getOrderedItems,\n    getRovingProps\n  } = useRovingTabindex(focusValue);\n  const rovingProps = getRovingProps({\n    onKeyDown: e => {\n      rest?.onKeyDown?.(e);\n      const items = getOrderedItems();\n      let nextItem;\n      if (e.key === 'ArrowRight') {\n        nextItem = getNextFocusableValue(items, focusValue);\n      }\n      if (e.key === 'ArrowLeft') {\n        nextItem = getPrevFocusableValue(items, focusValue);\n      }\n      nextItem?.element.focus();\n    }\n  });\n  const mergedRefs = useMergeRefs([ref, rovingProps.ref]);\n  return jsx(Component, {\n    ...rest,\n    ...rovingProps,\n    ref: mergedRefs,\n    children: rest.children\n  });\n});\nexport { RovingTabindexItem, getNextFocusableValue, getPrevFocusableValue };","map":{"version":3,"names":["jsx","forwardRef","useMergeRefs","Slot","$5e63c961fc1ce211$export$8c6ed5c666ac1360","useRovingTabindex","getNextFocusableValue","items","value","currIndex","findIndex","item","at","length","getPrevFocusableValue","RovingTabindexItem","_ref","ref","asChild","rest","Component","focusValue","children","getOrderedItems","getRovingProps","rovingProps","onKeyDown","e","nextItem","key","element","focus","mergedRefs"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/utilities/RovingTabIndex/RovingTabindexItem.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { useMergeRefs } from '../../node_modules/@floating-ui/react/dist/floating-ui.react.js';\nimport { Slot as $5e63c961fc1ce211$export$8c6ed5c666ac1360 } from '../../node_modules/@radix-ui/react-slot/dist/index.js';\nimport { useRovingTabindex } from './useRovingTabindex.js';\n\n/** Get the next focusable RovingTabindexItem */\nfunction getNextFocusableValue(items, value) {\n    const currIndex = items.findIndex((item) => item.value === value);\n    return items.at(currIndex === items.length - 1 ? 0 : currIndex + 1);\n}\n/** Get the previous focusable RovingTabindexItem */\nfunction getPrevFocusableValue(items, value) {\n    const currIndex = items.findIndex((item) => item.value === value);\n    return items.at(currIndex === 0 ? -1 : currIndex - 1);\n}\nconst RovingTabindexItem = forwardRef(({ value, asChild, ...rest }, ref) => {\n    const Component = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : 'div';\n    const focusValue = value ?? (typeof rest.children == 'string' ? rest.children : '');\n    const { getOrderedItems, getRovingProps } = useRovingTabindex(focusValue);\n    const rovingProps = getRovingProps({\n        onKeyDown: (e) => {\n            rest?.onKeyDown?.(e);\n            const items = getOrderedItems();\n            let nextItem;\n            if (e.key === 'ArrowRight') {\n                nextItem = getNextFocusableValue(items, focusValue);\n            }\n            if (e.key === 'ArrowLeft') {\n                nextItem = getPrevFocusableValue(items, focusValue);\n            }\n            nextItem?.element.focus();\n        },\n    });\n    const mergedRefs = useMergeRefs([ref, rovingProps.ref]);\n    return (jsx(Component, { ...rest, ...rovingProps, ref: mergedRefs, children: rest.children }));\n});\n\nexport { RovingTabindexItem, getNextFocusableValue, getPrevFocusableValue };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,YAAY,QAAQ,iEAAiE;AAC9F,SAASC,IAAI,IAAIC,yCAAyC,QAAQ,uDAAuD;AACzH,SAASC,iBAAiB,QAAQ,wBAAwB;;AAE1D;AACA,SAASC,qBAAqBA,CAACC,KAAK,EAAEC,KAAK,EAAE;EACzC,MAAMC,SAAS,GAAGF,KAAK,CAACG,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACH,KAAK,KAAKA,KAAK,CAAC;EACjE,OAAOD,KAAK,CAACK,EAAE,CAACH,SAAS,KAAKF,KAAK,CAACM,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGJ,SAAS,GAAG,CAAC,CAAC;AACvE;AACA;AACA,SAASK,qBAAqBA,CAACP,KAAK,EAAEC,KAAK,EAAE;EACzC,MAAMC,SAAS,GAAGF,KAAK,CAACG,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACH,KAAK,KAAKA,KAAK,CAAC;EACjE,OAAOD,KAAK,CAACK,EAAE,CAACH,SAAS,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,SAAS,GAAG,CAAC,CAAC;AACzD;AACA,MAAMM,kBAAkB,GAAGd,UAAU,CAAC,CAAAe,IAAA,EAA8BC,GAAG,KAAK;EAAA,IAArC;IAAET,KAAK;IAAEU,OAAO;IAAE,GAAGC;EAAK,CAAC,GAAAH,IAAA;EAC9D,MAAMI,SAAS,GAAGF,OAAO,GAAGd,yCAAyC,GAAG,KAAK;EAC7E,MAAMiB,UAAU,GAAGb,KAAK,KAAK,OAAOW,IAAI,CAACG,QAAQ,IAAI,QAAQ,GAAGH,IAAI,CAACG,QAAQ,GAAG,EAAE,CAAC;EACnF,MAAM;IAAEC,eAAe;IAAEC;EAAe,CAAC,GAAGnB,iBAAiB,CAACgB,UAAU,CAAC;EACzE,MAAMI,WAAW,GAAGD,cAAc,CAAC;IAC/BE,SAAS,EAAGC,CAAC,IAAK;MACdR,IAAI,EAAEO,SAAS,GAAGC,CAAC,CAAC;MACpB,MAAMpB,KAAK,GAAGgB,eAAe,CAAC,CAAC;MAC/B,IAAIK,QAAQ;MACZ,IAAID,CAAC,CAACE,GAAG,KAAK,YAAY,EAAE;QACxBD,QAAQ,GAAGtB,qBAAqB,CAACC,KAAK,EAAEc,UAAU,CAAC;MACvD;MACA,IAAIM,CAAC,CAACE,GAAG,KAAK,WAAW,EAAE;QACvBD,QAAQ,GAAGd,qBAAqB,CAACP,KAAK,EAAEc,UAAU,CAAC;MACvD;MACAO,QAAQ,EAAEE,OAAO,CAACC,KAAK,CAAC,CAAC;IAC7B;EACJ,CAAC,CAAC;EACF,MAAMC,UAAU,GAAG9B,YAAY,CAAC,CAACe,GAAG,EAAEQ,WAAW,CAACR,GAAG,CAAC,CAAC;EACvD,OAAQjB,GAAG,CAACoB,SAAS,EAAE;IAAE,GAAGD,IAAI;IAAE,GAAGM,WAAW;IAAER,GAAG,EAAEe,UAAU;IAAEV,QAAQ,EAAEH,IAAI,CAACG;EAAS,CAAC,CAAC;AACjG,CAAC,CAAC;AAEF,SAASP,kBAAkB,EAAET,qBAAqB,EAAEQ,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}