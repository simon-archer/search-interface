'use client';
import { jsxs, jsx } from 'react/jsx-runtime';
import { clsx } from '../../node_modules/clsx/dist/lite.js';
import { getSize } from '../../utilities/getSize.js';
import { useSynchronizedAnimation } from '../../hooks/useSynchronizedAnimation.js';

const sizeMap = {
    '2xs': 13,
    xs: 20,
    sm: 27,
    md: 40,
    lg: 56,
    xl: 79,
};
/**  Spinner component used for indicating busy or indeterminate loading */
const Spinner = ({ title, variant = 'default', className, style, ...rest }) => {
    const size = getSize(rest.size || 'md');
    const svgRef = useSynchronizedAnimation('fds-spinner-rotate-animation');
    const strokeRef = useSynchronizedAnimation('fds-spinner-stroke-animation');
    return (jsxs("svg", { className: clsx('fds-spinner', `fds-spinner--${variant}`, className), style: { width: sizeMap[size], height: sizeMap[size], ...style }, viewBox: '0 0 50 50', ref: svgRef, ...rest, children: [jsx("title", { children: title }), jsx("circle", { className: clsx('fds-spinner__background', variant === 'inverted' && 'fds-spinner__background--inverted'), cx: '25', cy: '25', r: '20', fill: 'none', strokeWidth: '5' }), jsx("circle", { className: clsx(`fds-spinner__circle`), cx: '25', cy: '25', r: '20', fill: 'none', strokeWidth: '5', ref: strokeRef })] }));
};
Spinner.displayName = 'Spinner';

export { Spinner };
