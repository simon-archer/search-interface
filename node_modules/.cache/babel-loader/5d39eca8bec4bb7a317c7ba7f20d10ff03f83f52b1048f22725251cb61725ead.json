{"ast":null,"code":"'use client';\n\nimport { useId, useContext, useMemo, useEffect } from 'react';\nimport { useMergeRefs } from '../../../../node_modules/@floating-ui/react/dist/floating-ui.react.js';\nimport { ComboboxContext } from '../ComboboxContext.js';\nimport useDebounce from '../../../../utilities/useDebounce.js';\nimport { useComboboxId, useComboboxIdDispatch } from '../ComboboxIdContext.js';\nimport { prefix } from '../useCombobox.js';\nfunction useComboboxOption({\n  id,\n  ref,\n  value\n}) {\n  const generatedId = useId();\n  const newId = id || generatedId;\n  const context = useContext(ComboboxContext);\n  const {\n    activeIndex\n  } = useComboboxId();\n  const dispatch = useComboboxIdDispatch();\n  if (!context) {\n    throw new Error('ComboboxOption must be used within a Combobox');\n  }\n  const {\n    selectedOptions,\n    onOptionClick,\n    listRef,\n    customIds,\n    filteredOptions\n  } = context;\n  const index = useMemo(() => filteredOptions.indexOf(prefix(String(value))) + customIds.length, [customIds.length, filteredOptions, value]);\n  const combinedRef = useMergeRefs([node => {\n    listRef.current[index] = node;\n  }, ref]);\n  if (index === -1) {\n    throw new Error('Internal error: ComboboxOption did not find index');\n  }\n  const selected = selectedOptions[prefix(value)];\n  const active = activeIndex === index;\n  useEffect(() => {\n    if (active) {\n      dispatch?.({\n        type: 'SET_ACTIVE_INDEX',\n        payload: index\n      });\n    }\n  }, [generatedId, id, dispatch, active, index]);\n  const onOptionClickDebounced = useDebounce(() => onOptionClick(value), 50);\n  return {\n    id: newId,\n    ref: combinedRef,\n    selected,\n    active,\n    onOptionClick: onOptionClickDebounced\n  };\n}\nexport { useComboboxOption as default };","map":{"version":3,"names":["useId","useContext","useMemo","useEffect","useMergeRefs","ComboboxContext","useDebounce","useComboboxId","useComboboxIdDispatch","prefix","useComboboxOption","id","ref","value","generatedId","newId","context","activeIndex","dispatch","Error","selectedOptions","onOptionClick","listRef","customIds","filteredOptions","index","indexOf","String","length","combinedRef","node","current","selected","active","type","payload","onOptionClickDebounced","default"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/components/form/Combobox/Option/useComboboxOption.js"],"sourcesContent":["'use client';\nimport { useId, useContext, useMemo, useEffect } from 'react';\nimport { useMergeRefs } from '../../../../node_modules/@floating-ui/react/dist/floating-ui.react.js';\nimport { ComboboxContext } from '../ComboboxContext.js';\nimport useDebounce from '../../../../utilities/useDebounce.js';\nimport { useComboboxId, useComboboxIdDispatch } from '../ComboboxIdContext.js';\nimport { prefix } from '../useCombobox.js';\n\nfunction useComboboxOption({ id, ref, value, }) {\n    const generatedId = useId();\n    const newId = id || generatedId;\n    const context = useContext(ComboboxContext);\n    const { activeIndex } = useComboboxId();\n    const dispatch = useComboboxIdDispatch();\n    if (!context) {\n        throw new Error('ComboboxOption must be used within a Combobox');\n    }\n    const { selectedOptions, onOptionClick, listRef, customIds, filteredOptions, } = context;\n    const index = useMemo(() => filteredOptions.indexOf(prefix(String(value))) + customIds.length, [customIds.length, filteredOptions, value]);\n    const combinedRef = useMergeRefs([\n        (node) => {\n            listRef.current[index] = node;\n        },\n        ref,\n    ]);\n    if (index === -1) {\n        throw new Error('Internal error: ComboboxOption did not find index');\n    }\n    const selected = selectedOptions[prefix(value)];\n    const active = activeIndex === index;\n    useEffect(() => {\n        if (active) {\n            dispatch?.({ type: 'SET_ACTIVE_INDEX', payload: index });\n        }\n    }, [generatedId, id, dispatch, active, index]);\n    const onOptionClickDebounced = useDebounce(() => onOptionClick(value), 50);\n    return {\n        id: newId,\n        ref: combinedRef,\n        selected,\n        active,\n        onOptionClick: onOptionClickDebounced,\n    };\n}\n\nexport { useComboboxOption as default };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAC7D,SAASC,YAAY,QAAQ,uEAAuE;AACpG,SAASC,eAAe,QAAQ,uBAAuB;AACvD,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,SAASC,aAAa,EAAEC,qBAAqB,QAAQ,yBAAyB;AAC9E,SAASC,MAAM,QAAQ,mBAAmB;AAE1C,SAASC,iBAAiBA,CAAC;EAAEC,EAAE;EAAEC,GAAG;EAAEC;AAAO,CAAC,EAAE;EAC5C,MAAMC,WAAW,GAAGd,KAAK,CAAC,CAAC;EAC3B,MAAMe,KAAK,GAAGJ,EAAE,IAAIG,WAAW;EAC/B,MAAME,OAAO,GAAGf,UAAU,CAACI,eAAe,CAAC;EAC3C,MAAM;IAAEY;EAAY,CAAC,GAAGV,aAAa,CAAC,CAAC;EACvC,MAAMW,QAAQ,GAAGV,qBAAqB,CAAC,CAAC;EACxC,IAAI,CAACQ,OAAO,EAAE;IACV,MAAM,IAAIG,KAAK,CAAC,+CAA+C,CAAC;EACpE;EACA,MAAM;IAAEC,eAAe;IAAEC,aAAa;IAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAiB,CAAC,GAAGR,OAAO;EACxF,MAAMS,KAAK,GAAGvB,OAAO,CAAC,MAAMsB,eAAe,CAACE,OAAO,CAACjB,MAAM,CAACkB,MAAM,CAACd,KAAK,CAAC,CAAC,CAAC,GAAGU,SAAS,CAACK,MAAM,EAAE,CAACL,SAAS,CAACK,MAAM,EAAEJ,eAAe,EAAEX,KAAK,CAAC,CAAC;EAC1I,MAAMgB,WAAW,GAAGzB,YAAY,CAAC,CAC5B0B,IAAI,IAAK;IACNR,OAAO,CAACS,OAAO,CAACN,KAAK,CAAC,GAAGK,IAAI;EACjC,CAAC,EACDlB,GAAG,CACN,CAAC;EACF,IAAIa,KAAK,KAAK,CAAC,CAAC,EAAE;IACd,MAAM,IAAIN,KAAK,CAAC,mDAAmD,CAAC;EACxE;EACA,MAAMa,QAAQ,GAAGZ,eAAe,CAACX,MAAM,CAACI,KAAK,CAAC,CAAC;EAC/C,MAAMoB,MAAM,GAAGhB,WAAW,KAAKQ,KAAK;EACpCtB,SAAS,CAAC,MAAM;IACZ,IAAI8B,MAAM,EAAE;MACRf,QAAQ,GAAG;QAAEgB,IAAI,EAAE,kBAAkB;QAAEC,OAAO,EAAEV;MAAM,CAAC,CAAC;IAC5D;EACJ,CAAC,EAAE,CAACX,WAAW,EAAEH,EAAE,EAAEO,QAAQ,EAAEe,MAAM,EAAER,KAAK,CAAC,CAAC;EAC9C,MAAMW,sBAAsB,GAAG9B,WAAW,CAAC,MAAMe,aAAa,CAACR,KAAK,CAAC,EAAE,EAAE,CAAC;EAC1E,OAAO;IACHF,EAAE,EAAEI,KAAK;IACTH,GAAG,EAAEiB,WAAW;IAChBG,QAAQ;IACRC,MAAM;IACNZ,aAAa,EAAEe;EACnB,CAAC;AACL;AAEA,SAAS1B,iBAAiB,IAAI2B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}