'use client';
import { useRef } from 'react';
import { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js';

const stashedTime = {};
function useSynchronizedAnimation(animationName) {
    const ref = useRef(null);
    useIsomorphicLayoutEffect(() => {
        const animations = document
            .getAnimations()
            .filter((animation) => 'animationName' in animation &&
            animation.animationName === animationName);
        const myAnimation = animations.find((animation) => animation.effect?.target === ref.current);
        if (myAnimation &&
            myAnimation === animations[0] &&
            stashedTime[animationName]) {
            myAnimation.currentTime = stashedTime[animationName];
        }
        if (myAnimation && myAnimation !== animations[0]) {
            myAnimation.currentTime = animations[0].currentTime;
        }
        return () => {
            if (myAnimation && myAnimation === animations[0]) {
                stashedTime[animationName] = myAnimation.currentTime;
            }
        };
    }, [animationName]);
    return ref;
}

export { useSynchronizedAnimation };
