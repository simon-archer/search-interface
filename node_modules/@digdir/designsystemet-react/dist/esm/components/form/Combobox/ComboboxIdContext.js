'use client';
import { jsx } from 'react/jsx-runtime';
import { createContext, useContext, useReducer } from 'react';

const ComboboxIdContext = createContext({
    activeIndex: 0,
});
const ComboboxIdReducer = (state, action) => {
    switch (action.type) {
        case 'SET_ACTIVE_INDEX':
            return {
                ...state,
                activeIndex: action.payload,
            };
        default:
            return state;
    }
};
const ComboboxIdDispatch = createContext(() => {
    throw new Error('ComboboxIdDispatch must be used within a provider');
});
const ComboboxIdProvider = ({ children, }) => {
    const [state, dispatch] = useReducer(ComboboxIdReducer, {
        activeIndex: 0,
    });
    return (jsx(ComboboxIdContext.Provider, { value: state, children: jsx(ComboboxIdDispatch.Provider, { value: dispatch, children: children }) }));
};
function useComboboxIdDispatch() {
    return useContext(ComboboxIdDispatch);
}
function useComboboxId() {
    return useContext(ComboboxIdContext);
}

export { ComboboxIdContext, ComboboxIdDispatch, ComboboxIdProvider, ComboboxIdReducer, useComboboxId, useComboboxIdDispatch };
