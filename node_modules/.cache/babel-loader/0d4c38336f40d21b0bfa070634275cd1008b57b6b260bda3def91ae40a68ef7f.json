{"ast":null,"code":"'use client';\n\nimport { useContext } from 'react';\nimport { useFormField } from '../useFormField.js';\nimport { CheckboxGroupContext } from '../Checkbox/Group/Group.js';\n\n/** Handles props for `Switch` in context with `Checkbox.Group` (and `Fieldset`) */\nconst useSwitch = props => {\n  const checkboxGroup = useContext(CheckboxGroupContext);\n  const {\n    inputProps,\n    readOnly,\n    ...rest\n  } = useFormField(props, 'switch');\n  const propsValue = props.value || '';\n  return {\n    ...rest,\n    readOnly,\n    inputProps: {\n      ...inputProps,\n      readOnly,\n      type: 'checkbox',\n      defaultChecked: checkboxGroup?.defaultValue ? checkboxGroup?.defaultValue.includes(propsValue) : props.defaultChecked,\n      checked: checkboxGroup?.value ? checkboxGroup?.value.includes(propsValue) : props.checked,\n      onClick: e => {\n        if (readOnly) {\n          e.preventDefault();\n          return;\n        }\n        props?.onClick?.(e);\n      },\n      onChange: e => {\n        if (readOnly) {\n          e.preventDefault();\n          return;\n        }\n        props?.onChange?.(e);\n        checkboxGroup?.toggleValue(propsValue);\n      }\n    }\n  };\n};\nexport { useSwitch };","map":{"version":3,"names":["useContext","useFormField","CheckboxGroupContext","useSwitch","props","checkboxGroup","inputProps","readOnly","rest","propsValue","value","type","defaultChecked","defaultValue","includes","checked","onClick","e","preventDefault","onChange","toggleValue"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/components/form/Switch/useSwitch.js"],"sourcesContent":["'use client';\nimport { useContext } from 'react';\nimport { useFormField } from '../useFormField.js';\nimport { CheckboxGroupContext } from '../Checkbox/Group/Group.js';\n\n/** Handles props for `Switch` in context with `Checkbox.Group` (and `Fieldset`) */\nconst useSwitch = (props) => {\n    const checkboxGroup = useContext(CheckboxGroupContext);\n    const { inputProps, readOnly, ...rest } = useFormField(props, 'switch');\n    const propsValue = props.value || '';\n    return {\n        ...rest,\n        readOnly,\n        inputProps: {\n            ...inputProps,\n            readOnly,\n            type: 'checkbox',\n            defaultChecked: checkboxGroup?.defaultValue\n                ? checkboxGroup?.defaultValue.includes(propsValue)\n                : props.defaultChecked,\n            checked: checkboxGroup?.value\n                ? checkboxGroup?.value.includes(propsValue)\n                : props.checked,\n            onClick: (e) => {\n                if (readOnly) {\n                    e.preventDefault();\n                    return;\n                }\n                props?.onClick?.(e);\n            },\n            onChange: (e) => {\n                if (readOnly) {\n                    e.preventDefault();\n                    return;\n                }\n                props?.onChange?.(e);\n                checkboxGroup?.toggleValue(propsValue);\n            },\n        },\n    };\n};\n\nexport { useSwitch };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,oBAAoB,QAAQ,4BAA4B;;AAEjE;AACA,MAAMC,SAAS,GAAIC,KAAK,IAAK;EACzB,MAAMC,aAAa,GAAGL,UAAU,CAACE,oBAAoB,CAAC;EACtD,MAAM;IAAEI,UAAU;IAAEC,QAAQ;IAAE,GAAGC;EAAK,CAAC,GAAGP,YAAY,CAACG,KAAK,EAAE,QAAQ,CAAC;EACvE,MAAMK,UAAU,GAAGL,KAAK,CAACM,KAAK,IAAI,EAAE;EACpC,OAAO;IACH,GAAGF,IAAI;IACPD,QAAQ;IACRD,UAAU,EAAE;MACR,GAAGA,UAAU;MACbC,QAAQ;MACRI,IAAI,EAAE,UAAU;MAChBC,cAAc,EAAEP,aAAa,EAAEQ,YAAY,GACrCR,aAAa,EAAEQ,YAAY,CAACC,QAAQ,CAACL,UAAU,CAAC,GAChDL,KAAK,CAACQ,cAAc;MAC1BG,OAAO,EAAEV,aAAa,EAAEK,KAAK,GACvBL,aAAa,EAAEK,KAAK,CAACI,QAAQ,CAACL,UAAU,CAAC,GACzCL,KAAK,CAACW,OAAO;MACnBC,OAAO,EAAGC,CAAC,IAAK;QACZ,IAAIV,QAAQ,EAAE;UACVU,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB;QACJ;QACAd,KAAK,EAAEY,OAAO,GAAGC,CAAC,CAAC;MACvB,CAAC;MACDE,QAAQ,EAAGF,CAAC,IAAK;QACb,IAAIV,QAAQ,EAAE;UACVU,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB;QACJ;QACAd,KAAK,EAAEe,QAAQ,GAAGF,CAAC,CAAC;QACpBZ,aAAa,EAAEe,WAAW,CAACX,UAAU,CAAC;MAC1C;IACJ;EACJ,CAAC;AACL,CAAC;AAED,SAASN,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}