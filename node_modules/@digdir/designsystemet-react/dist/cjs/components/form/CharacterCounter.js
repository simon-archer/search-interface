'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var ErrorMessage = require('../Typography/ErrorMessage/ErrorMessage.js');

const defaultLabel = (count) => count > -1 ? `${count} tegn igjen` : `${Math.abs(count)} tegn for mye`;
const defaultSrLabel = (maxCount) => `Tekstfelt med plass til ${maxCount} tegn`;
const CharacterCounter = ({ label = defaultLabel, srLabel: propsSrLabel, maxCount, value, id, size, }) => {
    const currentCount = maxCount - value.length;
    const hasExceededLimit = value.length > maxCount;
    const srLabel = propsSrLabel ? propsSrLabel : defaultSrLabel(maxCount);
    return (jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [jsxRuntime.jsx("span", { className: `fds-sr-only`, id: id, children: srLabel }), jsxRuntime.jsx(ErrorMessage.ErrorMessage, { asChild: true, size: size, error: hasExceededLimit, children: jsxRuntime.jsx("span", { "aria-live": hasExceededLimit ? 'polite' : 'off', children: label(currentCount) }) })] }));
};
CharacterCounter.displayName = 'CharacterCounter';

exports.CharacterCounter = CharacterCounter;
