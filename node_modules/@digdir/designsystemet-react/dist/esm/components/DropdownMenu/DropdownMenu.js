'use client';
import { jsx } from 'react/jsx-runtime';
import { useRef, useState, useEffect, createContext } from 'react';
import { getSize } from '../../utilities/getSize.js';

const DropdownMenu = ({ open, onClose, placement = 'bottom-end', portal, children, ...rest }) => {
    const size = getSize(rest.size || 'md');
    const triggerRef = useRef(null);
    const [internalOpen, setInternalOpen] = useState(open ?? false);
    const anchorEl = triggerRef.current;
    const isControlled = typeof open === 'boolean';
    useEffect(() => {
        setInternalOpen(open ?? false);
    }, [open]);
    return (jsx(DropdownMenuContext.Provider, { value: {
            anchorEl,
            triggerRef,
            size,
            portal,
            placement,
            internalOpen,
            isControlled,
            onClose,
            setInternalOpen,
        }, children: children }));
};
const DropdownMenuContext = createContext({
    triggerRef: { current: null },
    size: 'md',
    anchorEl: null,
    internalOpen: false,
    setInternalOpen: () => { },
});
DropdownMenu.displayName = 'DropdownMenu';

export { DropdownMenu, DropdownMenuContext };
