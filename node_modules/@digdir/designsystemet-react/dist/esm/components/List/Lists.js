'use client';
import { jsx } from 'react/jsx-runtime';
import { forwardRef, useContext } from 'react';
import { clsx } from '../../node_modules/clsx/dist/lite.js';
import { Slot as $5e63c961fc1ce211$export$8c6ed5c666ac1360 } from '../../node_modules/@radix-ui/react-slot/dist/index.js';
import { ListContext } from './ListRoot.js';
import { Paragraph } from '../Typography/Paragraph/Paragraph.js';

const Unordered = forwardRef(({ asChild, ...rest }, ref) => {
    const { size, headingId } = useContext(ListContext);
    const Component = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : 'ul';
    return (jsx(Paragraph, { size: size, asChild: true, children: jsx(Component, { className: clsx(`fds-list`, `fds-list--${size}`, rest.className), ...(headingId ? { 'aria-labelledby': headingId } : {}), ref: ref, ...rest }) }));
});
Unordered.displayName = 'ListUnordered';
const Ordered = forwardRef(({ asChild, ...rest }, ref) => {
    const { size, headingId } = useContext(ListContext);
    const Component = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : 'ol';
    return (jsx(Paragraph, { size: size, asChild: true, children: jsx(Component, { className: clsx(`fds-list`, `fds-list--${size}`, rest.className), ...(headingId ? { 'aria-labelledby': headingId } : {}), ref: ref, ...rest }) }));
});
Ordered.displayName = 'ListOrdered';

export { Ordered, Unordered };
