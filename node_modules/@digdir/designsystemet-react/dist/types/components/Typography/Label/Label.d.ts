import type { LabelHTMLAttributes } from 'react';
type OldLabelSizes = 'xsmall' | 'small' | 'medium' | 'large';
type FontWeights = 'regular' | 'medium' | 'semibold';
export type LabelProps = {
    /**
     * Changes text sizing
     *
     * @default md
     * @note `xsmall`, `small`, `medium`, `large` is deprecated
     */
    size?: 'xs' | 'sm' | 'md' | 'lg' | OldLabelSizes;
    /** Adds margin-bottom */
    spacing?: boolean;
    /** Adjusts font weight. Use this when you have a label hierarchy, such as checkboxes/radios in a fieldset */
    weight?: FontWeights;
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
} & LabelHTMLAttributes<HTMLLabelElement>;
/** Use `Label` for labels. */
export declare const Label: import("react").ForwardRefExoticComponent<{
    /**
     * Changes text sizing
     *
     * @default md
     * @note `xsmall`, `small`, `medium`, `large` is deprecated
     */
    size?: "xs" | "sm" | "md" | "lg" | OldLabelSizes | undefined;
    /** Adds margin-bottom */
    spacing?: boolean | undefined;
    /** Adjusts font weight. Use this when you have a label hierarchy, such as checkboxes/radios in a fieldset */
    weight?: FontWeights | undefined;
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean | undefined;
} & LabelHTMLAttributes<HTMLLabelElement> & import("react").RefAttributes<HTMLLabelElement>>;
export {};
//# sourceMappingURL=Label.d.ts.map