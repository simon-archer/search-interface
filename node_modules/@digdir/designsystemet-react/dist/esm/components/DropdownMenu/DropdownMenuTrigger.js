'use client';
import { jsx } from 'react/jsx-runtime';
import { forwardRef, useContext } from 'react';
import { useMergeRefs } from '../../node_modules/@floating-ui/react/dist/floating-ui.react.js';
import { Slot as $5e63c961fc1ce211$export$8c6ed5c666ac1360 } from '../../node_modules/@radix-ui/react-slot/dist/index.js';
import { DropdownMenuContext } from './DropdownMenu.js';
import { Button } from '../Button/Button.js';

const DropdownMenuTrigger = forwardRef(({ asChild, ...rest }, ref) => {
    const { triggerRef, internalOpen, setInternalOpen, isControlled } = useContext(DropdownMenuContext);
    const mergedRefs = useMergeRefs([ref, triggerRef]);
    const Component = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : Button;
    return (jsx(Component, { ref: mergedRefs, onClick: () => {
            if (!isControlled)
                setInternalOpen(!internalOpen);
        }, "aria-haspopup": 'menu', "aria-expanded": internalOpen, ...rest }));
});
DropdownMenuTrigger.displayName = 'DropdownMenuTrigger';

export { DropdownMenuTrigger };
