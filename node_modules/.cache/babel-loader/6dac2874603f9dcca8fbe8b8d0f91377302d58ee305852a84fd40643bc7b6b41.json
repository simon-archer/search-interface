{"ast":null,"code":"'use client';\n\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { forwardRef, useState, cloneElement } from 'react';\nimport { clsx } from '../../node_modules/clsx/dist/lite.js';\nimport { useFloating, useTransitionStyles, useInteractions, useHover, useFocus, useDismiss, useRole, useMergeRefs, FloatingArrow, FloatingPortal } from '../../node_modules/@floating-ui/react/dist/floating-ui.react.js';\nimport { autoUpdate, flip, shift } from '../../node_modules/@floating-ui/dom/dist/floating-ui.dom.js';\nimport { offset } from '../../node_modules/@floating-ui/core/dist/floating-ui.core.js';\nimport { arrow } from '../../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.js';\nconst ARROW_HEIGHT = 7;\nconst ARROW_GAP = 4;\nconst Tooltip = forwardRef((_ref, ref) => {\n  let {\n    children,\n    content,\n    placement = 'top',\n    delay = 150,\n    open: userOpen,\n    defaultOpen = false,\n    portal = true,\n    inverted,\n    className,\n    style,\n    ...rest\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(defaultOpen);\n  const Container = portal ? FloatingPortal : React.Fragment;\n  const arrowRef = React.useRef(null);\n  const internalOpen = userOpen ?? isOpen;\n  const {\n    refs,\n    floatingStyles,\n    context\n  } = useFloating({\n    open: internalOpen,\n    onOpenChange: setIsOpen,\n    placement,\n    whileElementsMounted: autoUpdate,\n    middleware: [offset(ARROW_HEIGHT + ARROW_GAP), flip({\n      fallbackAxisSideDirection: 'start'\n    }), shift(), arrow({\n      element: arrowRef\n    })]\n  });\n  const {\n    styles: animationStyles\n  } = useTransitionStyles(context, {\n    initial: {\n      opacity: 0\n    }\n  });\n  const {\n    getReferenceProps,\n    getFloatingProps\n  } = useInteractions([\n  // Event listeners to change the open state\n  useHover(context, {\n    move: false,\n    delay\n  }), useFocus(context), useDismiss(context), useRole(context, {\n    role: 'tooltip'\n  })]);\n  const mergedRef = useMergeRefs([ref, refs.setFloating]);\n  const childMergedRef = useMergeRefs([children.ref, refs.setReference]);\n  if (!children || children?.type === React.Fragment || children === React.Fragment) {\n    console.error('<Tooltip> children needs to be a single ReactElement and not: <React.Fragment/> | <></>');\n    return null;\n  }\n  return jsxs(Fragment, {\n    children: [cloneElement(children, getReferenceProps({\n      ref: childMergedRef\n    })), internalOpen && jsx(Container, {\n      children: jsxs(\"div\", {\n        ref: refs.setFloating,\n        style: {\n          ...floatingStyles,\n          ...animationStyles,\n          ...style\n        },\n        role: 'tooltip',\n        ...getFloatingProps({\n          className: clsx('fds-tooltip', inverted && 'fds-tooltip--inverted', className),\n          ref: mergedRef,\n          ...rest\n        }),\n        children: [content, jsx(FloatingArrow, {\n          ref: arrowRef,\n          context: context,\n          className: 'fds-tooltip__arrow',\n          height: ARROW_HEIGHT\n        })]\n      })\n    })]\n  });\n});\nTooltip.displayName = 'Tooltip';\nexport { Tooltip };","map":{"version":3,"names":["jsxs","Fragment","jsx","React","forwardRef","useState","cloneElement","clsx","useFloating","useTransitionStyles","useInteractions","useHover","useFocus","useDismiss","useRole","useMergeRefs","FloatingArrow","FloatingPortal","autoUpdate","flip","shift","offset","arrow","ARROW_HEIGHT","ARROW_GAP","Tooltip","_ref","ref","children","content","placement","delay","open","userOpen","defaultOpen","portal","inverted","className","style","rest","isOpen","setIsOpen","Container","arrowRef","useRef","internalOpen","refs","floatingStyles","context","onOpenChange","whileElementsMounted","middleware","fallbackAxisSideDirection","element","styles","animationStyles","initial","opacity","getReferenceProps","getFloatingProps","move","role","mergedRef","setFloating","childMergedRef","setReference","type","console","error","height","displayName"],"sources":["/Users/simondreyer/CascadeProjects/search-interface/node_modules/@digdir/designsystemet-react/dist/esm/components/Tooltip/Tooltip.js"],"sourcesContent":["'use client';\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { forwardRef, useState, cloneElement } from 'react';\nimport { clsx } from '../../node_modules/clsx/dist/lite.js';\nimport { useFloating, useTransitionStyles, useInteractions, useHover, useFocus, useDismiss, useRole, useMergeRefs, FloatingArrow, FloatingPortal } from '../../node_modules/@floating-ui/react/dist/floating-ui.react.js';\nimport { autoUpdate, flip, shift } from '../../node_modules/@floating-ui/dom/dist/floating-ui.dom.js';\nimport { offset } from '../../node_modules/@floating-ui/core/dist/floating-ui.core.js';\nimport { arrow } from '../../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.js';\n\nconst ARROW_HEIGHT = 7;\nconst ARROW_GAP = 4;\nconst Tooltip = forwardRef(({ children, content, placement = 'top', delay = 150, open: userOpen, defaultOpen = false, portal = true, inverted, className, style, ...rest }, ref) => {\n    const [isOpen, setIsOpen] = useState(defaultOpen);\n    const Container = portal ? FloatingPortal : React.Fragment;\n    const arrowRef = React.useRef(null);\n    const internalOpen = userOpen ?? isOpen;\n    const { refs, floatingStyles, context } = useFloating({\n        open: internalOpen,\n        onOpenChange: setIsOpen,\n        placement,\n        whileElementsMounted: autoUpdate,\n        middleware: [\n            offset(ARROW_HEIGHT + ARROW_GAP),\n            flip({\n                fallbackAxisSideDirection: 'start',\n            }),\n            shift(),\n            arrow({\n                element: arrowRef,\n            }),\n        ],\n    });\n    const { styles: animationStyles } = useTransitionStyles(context, {\n        initial: {\n            opacity: 0,\n        },\n    });\n    const { getReferenceProps, getFloatingProps } = useInteractions([\n        // Event listeners to change the open state\n        useHover(context, { move: false, delay }),\n        useFocus(context),\n        useDismiss(context),\n        useRole(context, { role: 'tooltip' }),\n    ]);\n    const mergedRef = useMergeRefs([ref, refs.setFloating]);\n    const childMergedRef = useMergeRefs([\n        children\n            .ref,\n        refs.setReference,\n    ]);\n    if (!children ||\n        children?.type === React.Fragment ||\n        children === React.Fragment) {\n        console.error('<Tooltip> children needs to be a single ReactElement and not: <React.Fragment/> | <></>');\n        return null;\n    }\n    return (jsxs(Fragment, { children: [cloneElement(children, getReferenceProps({\n                ref: childMergedRef,\n            })), internalOpen && (jsx(Container, { children: jsxs(\"div\", { ref: refs.setFloating, style: { ...floatingStyles, ...animationStyles, ...style }, role: 'tooltip', ...getFloatingProps({\n                        className: clsx('fds-tooltip', inverted && 'fds-tooltip--inverted', className),\n                        ref: mergedRef,\n                        ...rest,\n                    }), children: [content, jsx(FloatingArrow, { ref: arrowRef, context: context, className: 'fds-tooltip__arrow', height: ARROW_HEIGHT })] }) }))] }));\n});\nTooltip.displayName = 'Tooltip';\n\nexport { Tooltip };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}