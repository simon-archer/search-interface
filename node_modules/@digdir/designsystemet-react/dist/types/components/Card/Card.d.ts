import type { ReactNode, HTMLAttributes } from 'react';
export type CardProps = {
    /**
     * Changes background & border color
     * @default neutral
     */
    color?: 'neutral' | 'subtle' | 'first' | 'second' | 'third';
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean;
    /**
     * Changes styling if card is used as a link
     * @default false
     */
    isLink?: boolean;
    /** Instances of `Card.Header`, `Card.Content`, `Card.Footer` or other React nodes like `Divider` */
    children: ReactNode;
    /**
     * @deprecated Use `asChild` and `isLink={true}` instead
     */
    href?: never;
} & HTMLAttributes<HTMLDivElement>;
export declare const Card: import("react").ForwardRefExoticComponent<{
    /**
     * Changes background & border color
     * @default neutral
     */
    color?: "first" | "second" | "third" | "neutral" | "subtle" | undefined;
    /**
     * Change the default rendered element for the one passed as a child, merging their props and behavior.
     * @default false
     */
    asChild?: boolean | undefined;
    /**
     * Changes styling if card is used as a link
     * @default false
     */
    isLink?: boolean | undefined;
    /** Instances of `Card.Header`, `Card.Content`, `Card.Footer` or other React nodes like `Divider` */
    children: ReactNode;
    /**
     * @deprecated Use `asChild` and `isLink={true}` instead
     */
    href?: undefined;
} & HTMLAttributes<HTMLDivElement> & import("react").RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=Card.d.ts.map